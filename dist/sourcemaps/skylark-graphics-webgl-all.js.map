{"version":3,"sources":["skylark-graphics-webgl-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","item","j","push","baseIndexOf","compact","first","items","n","slice","func","inArray","indexOf","makeArray","offset","startWith","concat","merge","second","l","arr","fn","map","elements","callback","key","values","reduce","initialValue","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","lowerFirst","charAt","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","EventDispatcher","Number","EPSILON","pow","isInteger","isFinite","floor","x","assign","output","nextKey","addEventListener","_listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","min","max","vector","matrix","y","z","zero","v1","quaternion","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","uuid","clamp","euclideanModulo","m","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","console","Quaternion","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","width","height","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","warn","addVectors","addScalar","s","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","toArray","fromBufferAttribute","getX","getY","rotateAround","center","c","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","getZ","applyMatrix4","setXYZ","determinant","transpose","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","tDir","onChangeCallback","setFromEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","points","closestPoint","box","sphere","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","createElementNS","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","Box3","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","meta","isRootObject","textures","metadata","generator","wrap","images","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","getCenter","getSize","point","expandByVector","expandByScalar","traverse","geometry","isGeometry","vertices","isBufferGeometry","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f2","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","clampedPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","hslA","hslB","hsl","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsUtils","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","color","components","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","UniformsLib","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","buffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","layers","q1","object3DId","Object3D","children","DefaultUp","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","projectionMatrixInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","Face3","materialIndex","vertexNormals","vertexColors","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","library","element","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","recursive","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","vertex","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","precision","faceIndicesToRemove","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","morphAttribute","segCenter","segDir","vab","vac","vbc","vap","vbp","vcp","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","MeshBasicMaterial","combine","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","Triangle","Mesh","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isMeshBasicMaterial","isShaderMaterial","uniform","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","renderer","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","capabilities","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","isWebGL2","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","logarithmicDepthBuffer","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","painterSortStable","reversePainterSortStable","WebGLRenderLists","lists","scene","list","renderItems","renderItemsIndex","opaque","renderItem","matrixPosition","offsetMatrix","identityMatrix","WebGLLights","light","halfWidth","halfHeight","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","_gl","_state","BLEND","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLTextures","utils","_canvas","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RGB","RGB32F","HALF_FLOAT","RGB16F","RGB8","RGBA","RGBA32F","RGBA16F","RGBA8","filterFallback","NEAREST","LINEAR","onTextureDispose","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","updateVideoTexture","__version","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","isPowerOfTwoImage","convert","glInternalFormat","setTextureParameters","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","uploadTexture","textureType","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","Group","PerspectiveCamera","fov","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","getGamepads","gamepad","userHeight","getController","controller","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","WebGLRenderer","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","renderStates","background","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","clearColor","reset","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","setBlending","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CULL_FACE","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","calls","triangles","autoReset","mode","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","renderState","planeCamera","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","maxInstancedCount","drawElements","vr","session","frameOfRef","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","THREE","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","isLight","initMaterial","warned","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","bone","isBone","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","triangulate","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","loading","FileLoader","manager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","t3","load","cached","dataUriRegexResult","isBase64","decodeURIComponent","atob","responseType","charCodeAt","parser","DOMParser","parseFromString","header","callbacks","requestHeader","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","tangent","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","MaterialLoader","BufferGeometryLoader","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","BlendingMode","textureLoader","materialLoader","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","extractUrlBase","lastIndexOf","JSONLoader","ObjectLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","setOptions","res","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","createPaths","instance","eyeSep","eyeRight","eyeLeft","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","startP","startEnd","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","Cylindrical","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","ClosedSplineCurve3","SplineCurve3","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","exports","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FlatShading","SmoothShading","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","CubeGeometry","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","LensFlare","webgl","threejs","main"],"mappings":"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","file":"../skylark-graphics-webgl-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-graphics-webgl/webgl',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\treturn skylark.attach(\"graphics.webgl\", {});\r\n});\ndefine('skylark-graphics-webgl/primitives/three',[],function() {\r\n\t'use strict';\r\n\r\n\t// Polyfills\r\n\r\n\tif ( Number.EPSILON === undefined ) {\r\n\r\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n\t}\r\n\r\n\tif ( Number.isInteger === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n\r\n\t\tNumber.isInteger = function ( value ) {\r\n\r\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tif ( Math.sign === undefined ) {\r\n\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\t\tMath.sign = function ( x ) {\r\n\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tif ( 'name' in Function.prototype === false ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( Object.assign === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\t\t( function () {\r\n\r\n\t\t\tObject.assign = function ( target ) {\r\n\r\n\t\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar output = Object( target );\r\n\r\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n\t\t\t\t\tvar source = arguments[ index ];\r\n\r\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn output;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\r\n\tfunction EventDispatcher() {}\r\n\r\n\tObject.assign( EventDispatcher.prototype, {\r\n\r\n\t\taddEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\thasEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t\t},\r\n\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdispatchEvent: function ( event ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tevent.target = this;\r\n\r\n\t\t\t\tvar array = listenerArray.slice( 0 );\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar REVISION = '96dev';\r\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\tvar CullFaceNone = 0;\r\n\tvar CullFaceBack = 1;\r\n\tvar CullFaceFront = 2;\r\n\tvar CullFaceFrontBack = 3;\r\n\tvar FrontFaceDirectionCW = 0;\r\n\tvar FrontFaceDirectionCCW = 1;\r\n\tvar BasicShadowMap = 0;\r\n\tvar PCFShadowMap = 1;\r\n\tvar PCFSoftShadowMap = 2;\r\n\tvar FrontSide = 0;\r\n\tvar BackSide = 1;\r\n\tvar DoubleSide = 2;\r\n\tvar FlatShading = 1;\r\n\tvar SmoothShading = 2;\r\n\tvar NoColors = 0;\r\n\tvar FaceColors = 1;\r\n\tvar VertexColors = 2;\r\n\tvar NoBlending = 0;\r\n\tvar NormalBlending = 1;\r\n\tvar AdditiveBlending = 2;\r\n\tvar SubtractiveBlending = 3;\r\n\tvar MultiplyBlending = 4;\r\n\tvar CustomBlending = 5;\r\n\tvar AddEquation = 100;\r\n\tvar SubtractEquation = 101;\r\n\tvar ReverseSubtractEquation = 102;\r\n\tvar MinEquation = 103;\r\n\tvar MaxEquation = 104;\r\n\tvar ZeroFactor = 200;\r\n\tvar OneFactor = 201;\r\n\tvar SrcColorFactor = 202;\r\n\tvar OneMinusSrcColorFactor = 203;\r\n\tvar SrcAlphaFactor = 204;\r\n\tvar OneMinusSrcAlphaFactor = 205;\r\n\tvar DstAlphaFactor = 206;\r\n\tvar OneMinusDstAlphaFactor = 207;\r\n\tvar DstColorFactor = 208;\r\n\tvar OneMinusDstColorFactor = 209;\r\n\tvar SrcAlphaSaturateFactor = 210;\r\n\tvar NeverDepth = 0;\r\n\tvar AlwaysDepth = 1;\r\n\tvar LessDepth = 2;\r\n\tvar LessEqualDepth = 3;\r\n\tvar EqualDepth = 4;\r\n\tvar GreaterEqualDepth = 5;\r\n\tvar GreaterDepth = 6;\r\n\tvar NotEqualDepth = 7;\r\n\tvar MultiplyOperation = 0;\r\n\tvar MixOperation = 1;\r\n\tvar AddOperation = 2;\r\n\tvar NoToneMapping = 0;\r\n\tvar LinearToneMapping = 1;\r\n\tvar ReinhardToneMapping = 2;\r\n\tvar Uncharted2ToneMapping = 3;\r\n\tvar CineonToneMapping = 4;\r\n\tvar UVMapping = 300;\r\n\tvar CubeReflectionMapping = 301;\r\n\tvar CubeRefractionMapping = 302;\r\n\tvar EquirectangularReflectionMapping = 303;\r\n\tvar EquirectangularRefractionMapping = 304;\r\n\tvar SphericalReflectionMapping = 305;\r\n\tvar CubeUVReflectionMapping = 306;\r\n\tvar CubeUVRefractionMapping = 307;\r\n\tvar RepeatWrapping = 1000;\r\n\tvar ClampToEdgeWrapping = 1001;\r\n\tvar MirroredRepeatWrapping = 1002;\r\n\tvar NearestFilter = 1003;\r\n\tvar NearestMipMapNearestFilter = 1004;\r\n\tvar NearestMipMapLinearFilter = 1005;\r\n\tvar LinearFilter = 1006;\r\n\tvar LinearMipMapNearestFilter = 1007;\r\n\tvar LinearMipMapLinearFilter = 1008;\r\n\tvar UnsignedByteType = 1009;\r\n\tvar ByteType = 1010;\r\n\tvar ShortType = 1011;\r\n\tvar UnsignedShortType = 1012;\r\n\tvar IntType = 1013;\r\n\tvar UnsignedIntType = 1014;\r\n\tvar FloatType = 1015;\r\n\tvar HalfFloatType = 1016;\r\n\tvar UnsignedShort4444Type = 1017;\r\n\tvar UnsignedShort5551Type = 1018;\r\n\tvar UnsignedShort565Type = 1019;\r\n\tvar UnsignedInt248Type = 1020;\r\n\tvar AlphaFormat = 1021;\r\n\tvar RGBFormat = 1022;\r\n\tvar RGBAFormat = 1023;\r\n\tvar LuminanceFormat = 1024;\r\n\tvar LuminanceAlphaFormat = 1025;\r\n\tvar RGBEFormat = RGBAFormat;\r\n\tvar DepthFormat = 1026;\r\n\tvar DepthStencilFormat = 1027;\r\n\tvar RGB_S3TC_DXT1_Format = 33776;\r\n\tvar RGBA_S3TC_DXT1_Format = 33777;\r\n\tvar RGBA_S3TC_DXT3_Format = 33778;\r\n\tvar RGBA_S3TC_DXT5_Format = 33779;\r\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\r\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\r\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\tvar RGB_ETC1_Format = 36196;\r\n\tvar RGBA_ASTC_4x4_Format = 37808;\r\n\tvar RGBA_ASTC_5x4_Format = 37809;\r\n\tvar RGBA_ASTC_5x5_Format = 37810;\r\n\tvar RGBA_ASTC_6x5_Format = 37811;\r\n\tvar RGBA_ASTC_6x6_Format = 37812;\r\n\tvar RGBA_ASTC_8x5_Format = 37813;\r\n\tvar RGBA_ASTC_8x6_Format = 37814;\r\n\tvar RGBA_ASTC_8x8_Format = 37815;\r\n\tvar RGBA_ASTC_10x5_Format = 37816;\r\n\tvar RGBA_ASTC_10x6_Format = 37817;\r\n\tvar RGBA_ASTC_10x8_Format = 37818;\r\n\tvar RGBA_ASTC_10x10_Format = 37819;\r\n\tvar RGBA_ASTC_12x10_Format = 37820;\r\n\tvar RGBA_ASTC_12x12_Format = 37821;\r\n\tvar LoopOnce = 2200;\r\n\tvar LoopRepeat = 2201;\r\n\tvar LoopPingPong = 2202;\r\n\tvar InterpolateDiscrete = 2300;\r\n\tvar InterpolateLinear = 2301;\r\n\tvar InterpolateSmooth = 2302;\r\n\tvar ZeroCurvatureEnding = 2400;\r\n\tvar ZeroSlopeEnding = 2401;\r\n\tvar WrapAroundEnding = 2402;\r\n\tvar TrianglesDrawMode = 0;\r\n\tvar TriangleStripDrawMode = 1;\r\n\tvar TriangleFanDrawMode = 2;\r\n\tvar LinearEncoding = 3000;\r\n\tvar sRGBEncoding = 3001;\r\n\tvar GammaEncoding = 3007;\r\n\tvar RGBEEncoding = 3002;\r\n\tvar LogLuvEncoding = 3003;\r\n\tvar RGBM7Encoding = 3004;\r\n\tvar RGBM16Encoding = 3005;\r\n\tvar RGBDEncoding = 3006;\r\n\tvar BasicDepthPacking = 3200;\r\n\tvar RGBADepthPacking = 3201;\r\n\tvar TangentSpaceNormalMap = 0;\r\n\tvar ObjectSpaceNormalMap = 1;\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar _Math = {\r\n\r\n\t\tDEG2RAD: Math.PI / 180,\r\n\t\tRAD2DEG: 180 / Math.PI,\r\n\r\n\t\tgenerateUUID: ( function () {\r\n\r\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\t\t\tvar lut = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function generateUUID() {\r\n\r\n\t\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\r\n\r\n\t\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\t\t\t\treturn uuid.toUpperCase();\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclamp: function ( value, min, max ) {\r\n\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t\t},\r\n\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t\t},\r\n\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t\t},\r\n\r\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\t\tlerp: function ( x, y, t ) {\r\n\r\n\t\t\treturn ( 1 - t ) * x + t * y;\r\n\r\n\t\t},\r\n\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t\t},\r\n\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t\t},\r\n\r\n\t\t// Random integer from <low, high> interval\r\n\r\n\t\trandInt: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <low, high> interval\r\n\r\n\t\trandFloat: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\r\n\t\trandFloatSpread: function ( range ) {\r\n\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t\t},\r\n\r\n\t\tdegToRad: function ( degrees ) {\r\n\r\n\t\t\treturn degrees * _Math.DEG2RAD;\r\n\r\n\t\t},\r\n\r\n\t\tradToDeg: function ( radians ) {\r\n\r\n\t\t\treturn radians * _Math.RAD2DEG;\r\n\r\n\t\t},\r\n\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t\t},\r\n\r\n\t\tceilPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloorPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tisVector2: true,\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector2();\r\n\t\t\tvar max = new Vector2();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Matrix4() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\tisMatrix4: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyPosition: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements, me = m.elements;\r\n\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractRotation: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function extractRotation( m ) {\r\n\r\n\t\t\t\t// this method does not support reflection matrices\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\r\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\t\t\tte[ 3 ] = 0;\r\n\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\t\t\tte[ 7 ] = 0;\r\n\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t\tte[ 12 ] = 0;\r\n\t\t\t\tte[ 13 ] = 0;\r\n\t\t\t\tte[ 14 ] = 0;\r\n\t\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bottom row\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t// last column\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationFromQuaternion: function () {\r\n\r\n\t\t\tvar zero = new Vector3( 0, 0, 0 );\r\n\t\t\tvar one = new Vector3( 1, 1, 1 );\r\n\r\n\t\t\treturn function makeRotationFromQuaternion( q ) {\r\n\r\n\t\t\t\treturn this.compose( zero, q, one );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar x = new Vector3();\r\n\t\t\tvar y = new Vector3();\r\n\t\t\tvar z = new Vector3();\r\n\r\n\t\t\treturn function lookAt( eye, target, up ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tz.subVectors( eye, target );\r\n\r\n\t\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t\t\tz.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tz.normalize();\r\n\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// up and z are parallel\r\n\r\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t\t\tz.x += 0.0001;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz.z += 0.0001;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tz.normalize();\r\n\t\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx.normalize();\r\n\t\t\t\ty.crossVectors( z, x );\r\n\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m, n ) {\r\n\r\n\t\t\tif ( n !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPosition: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements,\r\n\t\t\t\tme = m.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 4 ] = t12 * detInv;\r\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 8 ] = t13 * detInv;\r\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 12 ] = t14 * detInv;\r\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t\t},\r\n\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationX: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s, c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationY: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts, c, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\t return this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeShear: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, y, z, 0,\r\n\t\t\t\tx, 1, z, 0,\r\n\t\t\t\tx, y, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\t        te[ 1 ] = ( xy + wz ) * sx;\r\n\t\t        te[ 2 ] = ( xz - wy ) * sx;\r\n\t\t        te[ 3 ] = 0;\r\n\r\n\t\t        te[ 4 ] = ( xy - wz ) * sy;\r\n\t\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\t        te[ 6 ] = ( yz + wx ) * sy;\r\n\t\t        te[ 7 ] = 0;\r\n\r\n\t\t        te[ 8 ] = ( xz + wy ) * sz;\r\n\t\t        te[ 9 ] = ( yz - wx ) * sz;\r\n\t\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\t        te[ 11 ] = 0;\r\n\r\n\t\t        te[ 12 ] = position.x;\r\n\t\t        te[ 13 ] = position.y;\r\n\t\t        te[ 14 ] = position.z;\r\n\t\t        te[ 15 ] = 1;\r\n\r\n\t\t        return this;\r\n\r\n\t\t},\r\n\r\n\t\tdecompose: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function decompose( position, quaternion, scale ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t\t// scale the rotation part\r\n\t\t\t\tmatrix.copy( this );\r\n\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tif ( far === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = 1.0 / ( right - left );\r\n\t\t\tvar h = 1.0 / ( top - bottom );\r\n\t\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\t\tvar x = ( right + left ) * w;\r\n\t\t\tvar y = ( top + bottom ) * h;\r\n\t\t\tvar z = ( far + near ) * p;\r\n\r\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Quaternion( x, y, z, w ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Quaternion, {\r\n\r\n\t\tslerp: function ( qa, qb, qm, t ) {\r\n\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t\t},\r\n\r\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Quaternion.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tw: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._w;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._w = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Quaternion.prototype, {\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( quaternion ) {\r\n\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c1 = cos( x / 2 );\r\n\t\t\tvar c2 = cos( y / 2 );\r\n\t\t\tvar c3 = cos( z / 2 );\r\n\r\n\t\t\tvar s1 = sin( x / 2 );\r\n\t\t\tvar s2 = sin( y / 2 );\r\n\t\t\tvar s3 = sin( z / 2 );\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\r\n\t\t\tif ( trace > 0 ) {\r\n\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromUnitVectors: function () {\r\n\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar r;\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\r\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\t\tr = 0;\r\n\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\treturn this.normalize();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tangleTo: function ( q ) {\r\n\r\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t\t},\r\n\r\n\t\trotateTowards: function ( q, step ) {\r\n\r\n\t\t\tvar angle = this.angleTo( q );\r\n\r\n\t\t\tif ( angle === 0 ) return this;\r\n\r\n\t\t\tvar t = Math.min( 1, step / angle );\r\n\r\n\t\t\tthis.slerp( q, t );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tinverse: function () {\r\n\r\n\t\t\t// quaternion is assumed to have unit length\r\n\r\n\t\t\treturn this.conjugate();\r\n\r\n\t\t},\r\n\r\n\t\tconjugate: function () {\r\n\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tvar l = this.length();\r\n\r\n\t\t\tif ( l === 0 ) {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl = 1 / l;\r\n\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( q, p ) {\r\n\r\n\t\t\tif ( p !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( q ) {\r\n\r\n\t\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tslerp: function ( qb, t ) {\r\n\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.copy( qb );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\t\tvar s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\t\treturn this.normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( quaternion ) {\r\n\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector3( x, y, z ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tisVector3: true,\r\n\r\n\t\tset: function ( x, y, z ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyEuler: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyAxisAngle: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t\t// calculate quat * vector\r\n\r\n\t\t\tvar ix = qw * x + qy * z - qz * y;\r\n\t\t\tvar iy = qw * y + qz * x - qx * z;\r\n\t\t\tvar iz = qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t\t// calculate result * inverse quat\r\n\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tproject: function ( camera ) {\r\n\r\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tunproject: function () {\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function unproject( camera ) {\r\n\r\n\t\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttransformDirection: function ( m ) {\r\n\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector3();\r\n\t\t\tvar max = new Vector3();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t\t},\r\n\r\n\t\t// TODO lengthSquared?\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.crossVectors( this, v );\r\n\r\n\t\t},\r\n\r\n\t\tcrossVectors: function ( a, b ) {\r\n\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnVector: function ( vector ) {\r\n\r\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\r\n\r\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnPlane: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\t\treturn this.sub( v1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\treflect: function () {\r\n\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function reflect( normal ) {\r\n\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tangleTo: function ( v ) {\r\n\r\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t\t// clamp, to handle numerical problems\r\n\r\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSpherical: function ( s ) {\r\n\r\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\r\n\r\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindrical: function ( c ) {\r\n\r\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.x = radius * Math.sin( theta );\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 12 ];\r\n\t\t\tthis.y = e[ 13 ];\r\n\t\t\tthis.z = e[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Matrix3() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tisMatrix3: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix4: function ( m ) {\r\n\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar me = matrix.elements,\r\n\t\t\t\tte = this.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\t\tte[ 3 ] = t12 * detInv;\r\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\t\tte[ 6 ] = t13 * detInv;\r\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar tmp, m = this.elements;\r\n\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t\t},\r\n\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\t\tvar m = this.elements;\r\n\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\t\tvar c = Math.cos( rotation );\r\n\t\t\tvar s = Math.sin( rotation );\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t\t0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( sx, sy ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\r\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotate: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta );\r\n\t\t\tvar s = Math.sin( theta );\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\r\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\r\n\r\n\t\t\tte[ 0 ] = c * a11 + s * a21;\r\n\t\t\tte[ 3 ] = c * a12 + s * a22;\r\n\t\t\tte[ 6 ] = c * a13 + s * a23;\r\n\r\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\r\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\r\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( tx, ty ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\r\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar ImageUtils = {\r\n\r\n\t\tgetDataURL: function ( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\r\n\t\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar textureId = 0;\r\n\r\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\r\n\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\r\n\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.matrixAutoUpdate = true;\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t//\r\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\r\n\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\r\n\t}\r\n\r\n\tTexture.DEFAULT_IMAGE = undefined;\r\n\tTexture.DEFAULT_MAPPING = UVMapping;\r\n\r\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Texture,\r\n\r\n\t\tisTexture: true,\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\t\tthis.mapping = source.mapping;\r\n\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\t\tthis.center.copy( source.center );\r\n\t\t\tthis.rotation = source.rotation;\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar output = {\r\n\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\r\n\t\t\t\tmapping: this.mapping,\r\n\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\t\trotation: this.rotation,\r\n\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\t\tformat: this.format,\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\t\tflipY: this.flipY\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\t\tvar image = this.image;\r\n\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tvar url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( image ) ) {\r\n\r\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\r\n\r\n\t\t\t\t\t\turl = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// process single image\r\n\r\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: url\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.image = image.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t},\r\n\r\n\t\ttransformUv: function ( uv ) {\r\n\r\n\t\t\tif ( this.mapping !== UVMapping ) return;\r\n\r\n\t\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.flipY ) {\r\n\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector4( x, y, z, w ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tisVector4: true,\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( w ) {\r\n\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t\t// q is assumed to be normalized\r\n\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t\tthis.x = 1;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.x = q.x / s;\r\n\t\t\t\tthis.y = q.y / s;\r\n\t\t\t\tthis.z = q.z / s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\t\tte = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\t\tangle = Math.PI;\r\n\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\t\tmin = new Vector4();\r\n\t\t\t\t\tmax = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\t\t\tthis.w = attribute.getW( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Marius Kintel / https://github.com/kintel\r\n\t */\r\n\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\tfunction WebGLRenderTarget( width, height, options ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\r\n\r\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\r\n\t}\r\n\r\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: WebGLRenderTarget,\r\n\r\n\t\tisWebGLRenderTarget: true,\r\n\r\n\t\tsetSize: function ( width, height ) {\r\n\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\r\n\t\t\t\tthis.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\t\tthis.texture = source.texture.clone();\r\n\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\r\n\tfunction WebGLRenderTargetCube( width, height, options ) {\r\n\r\n\t\tWebGLRenderTarget.call( this, width, height, options );\r\n\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\tthis.activeMipMapLevel = 0;\r\n\r\n\t}\r\n\r\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\r\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\r\n\r\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n\tDataTexture.prototype = Object.create( Texture.prototype );\r\n\tDataTexture.prototype.constructor = DataTexture;\r\n\r\n\tDataTexture.prototype.isDataTexture = true;\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tisBox3: true,\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromArray: function ( array ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar x = array[ i ];\r\n\t\t\t\tvar y = array[ i + 1 ];\r\n\t\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromBufferAttribute: function ( attribute ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar x = attribute.getX( i );\r\n\t\t\t\tvar y = attribute.getY( i );\r\n\t\t\t\tvar z = attribute.getZ( i );\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\treturn this.expandByObject( object );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByObject: function () {\r\n\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\t\tvar scope, i, l;\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\tfunction traverse( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\r\n\r\n\t\t\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function expandByObject( object ) {\r\n\r\n\t\t\t\tscope = this;\r\n\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\t\tobject.traverse( traverse );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: ( function () {\r\n\r\n\t\t\tvar closestPoint = new Vector3();\r\n\r\n\t\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsTriangle: ( function () {\r\n\r\n\t\t\t// triangle centered vertices\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\t// triangle edge vectors\r\n\t\t\tvar f0 = new Vector3();\r\n\t\t\tvar f1 = new Vector3();\r\n\t\t\tvar f2 = new Vector3();\r\n\r\n\t\t\tvar testAxis = new Vector3();\r\n\r\n\t\t\tvar center = new Vector3();\r\n\t\t\tvar extents = new Vector3();\r\n\r\n\t\t\tvar triangleNormal = new Vector3();\r\n\r\n\t\t\tfunction satForAxes( axes ) {\r\n\r\n\t\t\t\tvar i, j;\r\n\r\n\t\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t\t\t\ttestAxis.fromArray( axes, i );\r\n\t\t\t\t\t// project the aabb onto the seperating axis\r\n\t\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\r\n\t\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\r\n\t\t\t\t\tvar p0 = v0.dot( testAxis );\r\n\t\t\t\t\tvar p1 = v1.dot( testAxis );\r\n\t\t\t\t\tvar p2 = v2.dot( testAxis );\r\n\t\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t\t\t\t// the axis is seperating and we can exit\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function intersectsTriangle( triangle ) {\r\n\r\n\t\t\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// compute box center and extents\r\n\t\t\t\tthis.getCenter( center );\r\n\t\t\t\textents.subVectors( this.max, center );\r\n\r\n\t\t\t\t// translate triangle to aabb origin\r\n\t\t\t\tv0.subVectors( triangle.a, center );\r\n\t\t\t\tv1.subVectors( triangle.b, center );\r\n\t\t\t\tv2.subVectors( triangle.c, center );\r\n\r\n\t\t\t\t// compute edge vectors for triangle\r\n\t\t\t\tf0.subVectors( v1, v0 );\r\n\t\t\t\tf1.subVectors( v2, v1 );\r\n\t\t\t\tf2.subVectors( v0, v2 );\r\n\r\n\t\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\t\t\tvar axes = [\r\n\t\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\r\n\t\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\r\n\t\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\r\n\t\t\t\t];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// test 3 face normals from the aabb\r\n\t\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// finally testing the face normal of the triangle\r\n\t\t\t\t// use already existing triangle edge vectors here\r\n\t\t\t\ttriangleNormal.crossVectors( f0, f1 );\r\n\t\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\r\n\t\t\t\treturn satForAxes( axes );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetBoundingSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getBoundingSphere( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\r\n\t\t\t\t\ttarget = new Sphere();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar points = [\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3()\r\n\t\t\t];\r\n\r\n\t\t\treturn function applyMatrix4( matrix ) {\r\n\r\n\t\t\t\t// transform of empty box is an empty box.\r\n\t\t\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Sphere( center, radius ) {\r\n\r\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Sphere.prototype, {\r\n\r\n\t\tset: function ( center, radius ) {\r\n\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\r\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( sphere ) {\r\n\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tempty: function () {\r\n\r\n\t\t\treturn ( this.radius <= 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsSphere( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.copy( point );\r\n\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetBoundingBox: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\r\n\t\t\t\ttarget = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.set( this.center, this.center );\r\n\t\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.center.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Plane( normal, constant ) {\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Plane.prototype, {\r\n\r\n\t\tset: function ( normal, constant ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCoplanarPoints: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( plane ) {\r\n\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t\t},\r\n\r\n\t\tprojectPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\r\n\r\n\t\t},\r\n\r\n\t\tintersectLine: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectLine( line, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsLine: function ( line ) {\r\n\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tcoplanarPoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar m1 = new Matrix3();\r\n\r\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\r\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( plane ) {\r\n\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tthis.planes = [\r\n\r\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tObject.assign( Frustum.prototype, {\r\n\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( frustum ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix: function ( m ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsObject: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsObject( object ) {\r\n\r\n\t\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere )\r\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSprite: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsSprite( sprite ) {\r\n\r\n\t\t\t\tsphere.center.set( 0, 0, 0 );\r\n\t\t\t\tsphere.radius = 0.7071067811865476;\r\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function () {\r\n\r\n\t\t\tvar p = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\tvar planes = this.planes;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\t\t// corner at max distance\r\n\r\n\t\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\r\n\r\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\r\n\r\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\r\n\r\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogPosition = mvPosition.xyz;\\n#endif\\n\";\r\n\r\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying vec3 vFogPosition;\\n#endif\\n\";\r\n\r\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\tfloat fogDepth = length( vFogPosition );\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying vec3 vFogPosition;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\r\n\r\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\r\n\r\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\r\n\r\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\r\n\r\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\r\n\r\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\r\n\r\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\r\n\r\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\r\n\r\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n\r\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\r\n\r\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\r\n\r\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\r\n\r\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\r\n\r\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\r\n\r\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\r\n\r\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\r\n\r\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\r\n\r\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\r\n\r\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\r\n\r\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\r\n\r\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\r\n\r\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar ShaderChunk = {\r\n\t\talphamap_fragment: alphamap_fragment,\r\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\t\talphatest_fragment: alphatest_fragment,\r\n\t\taomap_fragment: aomap_fragment,\r\n\t\taomap_pars_fragment: aomap_pars_fragment,\r\n\t\tbegin_vertex: begin_vertex,\r\n\t\tbeginnormal_vertex: beginnormal_vertex,\r\n\t\tbsdfs: bsdfs,\r\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t\tclipping_planes_fragment: clipping_planes_fragment,\r\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t\tclipping_planes_vertex: clipping_planes_vertex,\r\n\t\tcolor_fragment: color_fragment,\r\n\t\tcolor_pars_fragment: color_pars_fragment,\r\n\t\tcolor_pars_vertex: color_pars_vertex,\r\n\t\tcolor_vertex: color_vertex,\r\n\t\tcommon: common,\r\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t\tdisplacementmap_vertex: displacementmap_vertex,\r\n\t\temissivemap_fragment: emissivemap_fragment,\r\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t\tencodings_fragment: encodings_fragment,\r\n\t\tencodings_pars_fragment: encodings_pars_fragment,\r\n\t\tenvmap_fragment: envmap_fragment,\r\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t\tenvmap_vertex: envmap_vertex,\r\n\t\tfog_vertex: fog_vertex,\r\n\t\tfog_pars_vertex: fog_pars_vertex,\r\n\t\tfog_fragment: fog_fragment,\r\n\t\tfog_pars_fragment: fog_pars_fragment,\r\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t\tlightmap_fragment: lightmap_fragment,\r\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\t\tlights_lambert_vertex: lights_lambert_vertex,\r\n\t\tlights_pars_begin: lights_pars_begin,\r\n\t\tlights_phong_fragment: lights_phong_fragment,\r\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t\tlights_physical_fragment: lights_physical_fragment,\r\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t\tlights_fragment_begin: lights_fragment_begin,\r\n\t\tlights_fragment_maps: lights_fragment_maps,\r\n\t\tlights_fragment_end: lights_fragment_end,\r\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\t\tmap_fragment: map_fragment,\r\n\t\tmap_pars_fragment: map_pars_fragment,\r\n\t\tmap_particle_fragment: map_particle_fragment,\r\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t\tmorphnormal_vertex: morphnormal_vertex,\r\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t\tmorphtarget_vertex: morphtarget_vertex,\r\n\t\tnormal_fragment_begin: normal_fragment_begin,\r\n\t\tnormal_fragment_maps: normal_fragment_maps,\r\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\t\tpacking: packing,\r\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t\tproject_vertex: project_vertex,\r\n\t\tdithering_fragment: dithering_fragment,\r\n\t\tdithering_pars_fragment: dithering_pars_fragment,\r\n\t\troughnessmap_fragment: roughnessmap_fragment,\r\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t\tshadowmap_vertex: shadowmap_vertex,\r\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t\tskinbase_vertex: skinbase_vertex,\r\n\t\tskinning_pars_vertex: skinning_pars_vertex,\r\n\t\tskinning_vertex: skinning_vertex,\r\n\t\tskinnormal_vertex: skinnormal_vertex,\r\n\t\tspecularmap_fragment: specularmap_fragment,\r\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\t\ttonemapping_fragment: tonemapping_fragment,\r\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t\tuv_pars_fragment: uv_pars_fragment,\r\n\t\tuv_pars_vertex: uv_pars_vertex,\r\n\t\tuv_vertex: uv_vertex,\r\n\t\tuv2_pars_fragment: uv2_pars_fragment,\r\n\t\tuv2_pars_vertex: uv2_pars_vertex,\r\n\t\tuv2_vertex: uv2_vertex,\r\n\t\tworldpos_vertex: worldpos_vertex,\r\n\r\n\t\tcube_frag: cube_frag,\r\n\t\tcube_vert: cube_vert,\r\n\t\tdepth_frag: depth_frag,\r\n\t\tdepth_vert: depth_vert,\r\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\r\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\r\n\t\tequirect_frag: equirect_frag,\r\n\t\tequirect_vert: equirect_vert,\r\n\t\tlinedashed_frag: linedashed_frag,\r\n\t\tlinedashed_vert: linedashed_vert,\r\n\t\tmeshbasic_frag: meshbasic_frag,\r\n\t\tmeshbasic_vert: meshbasic_vert,\r\n\t\tmeshlambert_frag: meshlambert_frag,\r\n\t\tmeshlambert_vert: meshlambert_vert,\r\n\t\tmeshphong_frag: meshphong_frag,\r\n\t\tmeshphong_vert: meshphong_vert,\r\n\t\tmeshphysical_frag: meshphysical_frag,\r\n\t\tmeshphysical_vert: meshphysical_vert,\r\n\t\tnormal_frag: normal_frag,\r\n\t\tnormal_vert: normal_vert,\r\n\t\tpoints_frag: points_frag,\r\n\t\tpoints_vert: points_vert,\r\n\t\tshadow_frag: shadow_frag,\r\n\t\tshadow_vert: shadow_vert,\r\n\t\tsprite_frag: sprite_frag,\r\n\t\tsprite_vert: sprite_vert\r\n\t};\r\n\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\r\n\tvar UniformsUtils = {\r\n\r\n\t\tmerge: function ( uniforms ) {\r\n\r\n\t\t\tvar merged = {};\r\n\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn merged;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function ( uniforms_src ) {\r\n\r\n\t\t\tvar uniforms_dst = {};\r\n\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\r\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\r\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\r\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uniforms_dst;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n\tfunction Color( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\t\t\treturn this.set( r );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.setRGB( r, g, b );\r\n\r\n\t}\r\n\r\n\tObject.assign( Color.prototype, {\r\n\r\n\t\tisColor: true,\r\n\r\n\t\tr: 1, g: 1, b: 1,\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHex: function ( hex ) {\r\n\r\n\t\t\thex = Math.floor( hex );\r\n\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHSL: function () {\r\n\r\n\t\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function setHSL( h, s, l ) {\r\n\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\r\n\r\n\t\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetStyle: function ( style ) {\r\n\r\n\t\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar m;\r\n\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t\t// rgb / hsl\r\n\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t\t// hex color\r\n\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\r\n\t\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = ColorKeywords[ style ];\r\n\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( color ) {\r\n\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopySRGBToLinear: function () {\r\n\r\n\t\t\tfunction SRGBToLinear( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copySRGBToLinear( color ) {\r\n\r\n\t\t\t\tthis.r = SRGBToLinear( color.r );\r\n\t\t\t\tthis.g = SRGBToLinear( color.g );\r\n\t\t\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcopyLinearToSRGB: function () {\r\n\r\n\t\t\tfunction LinearToSRGB( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copyLinearToSRGB( color ) {\r\n\r\n\t\t\t\tthis.r = LinearToSRGB( color.r );\r\n\t\t\t\tthis.g = LinearToSRGB( color.g );\r\n\t\t\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tconvertSRGBToLinear: function () {\r\n\r\n\t\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToSRGB: function () {\r\n\r\n\t\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetHex: function () {\r\n\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t\t},\r\n\r\n\t\tgetHexString: function () {\r\n\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t\t},\r\n\r\n\t\tgetHSL: function ( target ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\r\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\t\tif ( min === max ) {\r\n\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar delta = max - min;\r\n\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thue /= 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.h = hue;\r\n\t\t\ttarget.s = saturation;\r\n\t\t\ttarget.l = lightness;\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetStyle: function () {\r\n\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t\t},\r\n\r\n\t\toffsetHSL: function () {\r\n\r\n\t\t\tvar hsl = {};\r\n\r\n\t\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t\tthis.getHSL( hsl );\r\n\r\n\t\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( color ) {\r\n\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddColors: function ( color1, color2 ) {\r\n\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( color ) {\r\n\r\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( color ) {\r\n\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( color, alpha ) {\r\n\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpHSL: function () {\r\n\r\n\t\t\tvar hslA = { h: 0, s: 0, l: 0 };\r\n\t\t\tvar hslB = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\treturn function lerpHSL( color, alpha ) {\r\n\r\n\t\t\t\tthis.getHSL( hslA );\r\n\t\t\t\tcolor.getHSL( hslB );\r\n\r\n\t\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\r\n\t\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\r\n\t\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\r\n\r\n\t\t\t\tthis.setHSL( h, s, l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( c ) {\r\n\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.r = array[ offset ];\r\n\t\t\tthis.g = array[ offset + 1 ];\r\n\t\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\treturn this.getHex();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\r\n\tvar UniformsLib = {\r\n\r\n\t\tcommon: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() },\r\n\r\n\t\t\talphaMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tspecularmap: {\r\n\r\n\t\t\tspecularMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tenvmap: {\r\n\r\n\t\t\tenvMap: { value: null },\r\n\t\t\tflipEnvMap: { value: - 1 },\r\n\t\t\treflectivity: { value: 1.0 },\r\n\t\t\trefractionRatio: { value: 0.98 },\r\n\t\t\tmaxMipLevel: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\taomap: {\r\n\r\n\t\t\taoMap: { value: null },\r\n\t\t\taoMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tlightmap: {\r\n\r\n\t\t\tlightMap: { value: null },\r\n\t\t\tlightMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\temissivemap: {\r\n\r\n\t\t\temissiveMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tbumpmap: {\r\n\r\n\t\t\tbumpMap: { value: null },\r\n\t\t\tbumpScale: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tnormalmap: {\r\n\r\n\t\t\tnormalMap: { value: null },\r\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\r\n\r\n\t\t},\r\n\r\n\t\tdisplacementmap: {\r\n\r\n\t\t\tdisplacementMap: { value: null },\r\n\t\t\tdisplacementScale: { value: 1 },\r\n\t\t\tdisplacementBias: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\troughnessmap: {\r\n\r\n\t\t\troughnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tmetalnessmap: {\r\n\r\n\t\t\tmetalnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tgradientmap: {\r\n\r\n\t\t\tgradientMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tfog: {\r\n\r\n\t\t\tfogDensity: { value: 0.00025 },\r\n\t\t\tfogNear: { value: 1 },\r\n\t\t\tfogFar: { value: 2000 },\r\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\r\n\r\n\t\t},\r\n\r\n\t\tlights: {\r\n\r\n\t\t\tambientLightColor: { value: [] },\r\n\r\n\t\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tcolor: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tdirectionalShadowMap: { value: [] },\r\n\t\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\t\tspotLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tdistance: {},\r\n\t\t\t\tconeCos: {},\r\n\t\t\t\tpenumbraCos: {},\r\n\t\t\t\tdecay: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tspotShadowMap: { value: [] },\r\n\t\t\tspotShadowMatrix: { value: [] },\r\n\r\n\t\t\tpointLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdecay: {},\r\n\t\t\t\tdistance: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {},\r\n\t\t\t\tshadowCameraNear: {},\r\n\t\t\t\tshadowCameraFar: {}\r\n\t\t\t} },\r\n\r\n\t\t\tpointShadowMap: { value: [] },\r\n\t\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\t\themisphereLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tskyColor: {},\r\n\t\t\t\tgroundColor: {}\r\n\t\t\t} },\r\n\r\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t\trectAreaLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\twidth: {},\r\n\t\t\t\theight: {}\r\n\t\t\t} }\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tsize: { value: 1.0 },\r\n\t\t\tscale: { value: 1.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\trotation: { value: 0.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\r\n\tvar ShaderLib = {\r\n\r\n\t\tbasic: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t\t},\r\n\r\n\t\tlambert: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t\t},\r\n\r\n\t\tphong: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.gradientmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\r\n\t\t\t\t\tshininess: { value: 30 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t\t},\r\n\r\n\t\tstandard: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.roughnessmap,\r\n\t\t\t\tUniformsLib.metalnessmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\troughness: { value: 0.5 },\r\n\t\t\t\t\tmetalness: { value: 0.5 },\r\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.points,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t\t},\r\n\r\n\t\tdashed: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tscale: { value: 1 },\r\n\t\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t\t},\r\n\r\n\t\tdepth: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t\t},\r\n\r\n\t\tnormal: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.normal_vert,\r\n\t\t\tfragmentShader: ShaderChunk.normal_frag\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.sprite,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t\t},\r\n\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\r\n\t\tcube: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttCube: { value: null },\r\n\t\t\t\ttFlip: { value: - 1 },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t\t},\r\n\r\n\t\tequirect: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t\t},\r\n\r\n\t\tdistanceRGBA: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\treferencePosition: { value: new Vector3() },\r\n\t\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t\t},\r\n\r\n\t\tshadow: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t},\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tShaderLib.physical = {\r\n\r\n\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\tShaderLib.standard.uniforms,\r\n\t\t\t{\r\n\t\t\t\tclearCoat: { value: 0 },\r\n\t\t\t\tclearCoatRoughness: { value: 0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAnimation() {\r\n\r\n\t\tvar context = null;\r\n\t\tvar isAnimating = false;\r\n\t\tvar animationLoop = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tif ( isAnimating === false ) return;\r\n\r\n\t\t\tanimationLoop( time, frame );\r\n\r\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tstart: function () {\r\n\r\n\t\t\t\tif ( isAnimating === true ) return;\r\n\t\t\t\tif ( animationLoop === null ) return;\r\n\r\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t\t\tisAnimating = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tstop: function () {\r\n\r\n\t\t\t\tisAnimating = false;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetAnimationLoop: function ( callback ) {\r\n\r\n\t\t\t\tanimationLoop = callback;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetContext: function ( value ) {\r\n\r\n\t\t\t\tcontext = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAttributes( gl ) {\r\n\r\n\t\tvar buffers = new WeakMap();\r\n\r\n\t\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\t\tvar buffer = gl.createBuffer();\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\t\tattribute.onUploadCallback();\r\n\r\n\t\t\tvar type = gl.FLOAT;\r\n\r\n\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\t\ttype = gl.FLOAT;\r\n\r\n\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\r\n\r\n\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\t\ttype = gl.SHORT;\r\n\r\n\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_INT;\r\n\r\n\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\t\ttype = gl.INT;\r\n\r\n\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\t\ttype = gl.BYTE;\r\n\r\n\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t\tversion: attribute.version\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar updateRange = attribute.updateRange;\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\t\tif ( attribute.dynamic === false ) {\r\n\r\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\r\n\r\n\t\t\t} else if ( updateRange.count === - 1 ) {\r\n\r\n\t\t\t\t// Not using update ranges\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t\t} else if ( updateRange.count === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\r\n\r\n\t\t\t\tupdateRange.count = - 1; // reset range\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction get( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\treturn buffers.get( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data ) {\r\n\r\n\t\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( attribute, bufferType ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data === undefined ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\t\tdata.version = attribute.version;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Euler( x, y, z, order ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || Euler.DefaultOrder;\r\n\r\n\t}\r\n\r\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\n\tEuler.DefaultOrder = 'XYZ';\r\n\r\n\tObject.defineProperties( Euler.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\torder: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._order;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._order = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Euler.prototype, {\r\n\r\n\t\tisEuler: true,\r\n\r\n\t\tset: function ( x, y, z, order ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( euler ) {\r\n\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\t\tvar clamp = _Math.clamp;\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\torder = order || this._order;\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._order = order;\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromQuaternion: function () {\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function setFromQuaternion( q, order, update ) {\r\n\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t\t},\r\n\r\n\t\treorder: function () {\r\n\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t\tvar q = new Quaternion();\r\n\r\n\t\t\treturn function reorder( newOrder ) {\r\n\r\n\t\t\t\tq.setFromEuler( this );\r\n\r\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( euler ) {\r\n\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array ) {\r\n\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\t\tif ( optionalResult ) {\r\n\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Layers() {\r\n\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Layers.prototype, {\r\n\r\n\t\tset: function ( channel ) {\r\n\r\n\t\t\tthis.mask = 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tenable: function ( channel ) {\r\n\r\n\t\t\tthis.mask |= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\ttoggle: function ( channel ) {\r\n\r\n\t\t\tthis.mask ^= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tdisable: function ( channel ) {\r\n\r\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\r\n\r\n\t\t},\r\n\r\n\t\ttest: function ( layers ) {\r\n\r\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\r\n\tvar object3DId = 0;\r\n\r\n\tfunction Object3D() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\r\n\t\tthis.up = Object3D.DefaultUp.clone();\r\n\r\n\t\tvar position = new Vector3();\r\n\t\tvar rotation = new Euler();\r\n\t\tvar quaternion = new Quaternion();\r\n\t\tvar scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tthis.layers = new Layers();\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\r\n\tObject3D.DefaultMatrixAutoUpdate = true;\r\n\r\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Object3D,\r\n\r\n\t\tisObject3D: true,\r\n\r\n\t\tonBeforeRender: function () {},\r\n\t\tonAfterRender: function () {},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// assumes q is normalized\r\n\r\n\t\t\tthis.quaternion.copy( q );\r\n\r\n\t\t},\r\n\r\n\t\trotateOnAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateOnWorldAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in world space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t// method assumes no rotated parent\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.premultiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateOnAxis: function () {\r\n\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function translateOnAxis( axis, distance ) {\r\n\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function translateX( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function translateY( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function translateZ( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlocalToWorld: function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tworldToLocal: function () {\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function worldToLocal( vector ) {\r\n\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function lookAt( x, y, z ) {\r\n\r\n\t\t\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t\t\tvector.copy( x );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvector.set( x, y, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.isCamera ) {\r\n\r\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object === this ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( object && object.isObject3D ) ) {\r\n\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\t\tthis.children.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tobject.parent = null;\r\n\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectById: function ( id ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByName: function ( name ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\t\treturn object;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldPosition: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldQuaternion: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\treturn function getWorldQuaternion( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\r\n\t\t\t\t\ttarget = new Quaternion();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, target, scale );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldScale: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function getWorldScale( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\traycast: function () {},\r\n\r\n\t\ttraverse: function ( callback ) {\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseVisible: function ( callback ) {\r\n\r\n\t\t\tif ( this.visible === false ) return;\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\t\tvar parent = this.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tcallback( parent );\r\n\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\t\tforce = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update children\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\t// meta is a string when called from JSON.stringify\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tvar output = {};\r\n\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {},\r\n\t\t\t\t\tshapes: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// standard Object3D serialization\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t\tif ( this.visible === false ) object.visible = false;\r\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\r\n\t\t\tobject.layers = this.layers.mask;\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn element.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\t\tvar parameters = this.geometry.parameters;\r\n\r\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\t\tvar shapes = parameters.shapes;\r\n\r\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\t\tvar uuids = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\t\tobject.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\r\n\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.object = object;\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function ( recursive ) {\r\n\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.up.copy( source.up );\r\n\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\t\tthis.layers.mask = source.layers.mask;\r\n\t\t\tthis.visible = source.visible;\r\n\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\r\n\tfunction Camera() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t}\r\n\r\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Camera,\r\n\r\n\t\tisCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author arose / http://github.com/arose\r\n\t */\r\n\r\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: OrthographicCamera,\r\n\r\n\t\tisOrthographicCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.left = source.left;\r\n\t\t\tthis.right = source.right;\r\n\t\t\tthis.top = source.top;\r\n\t\t\tthis.bottom = source.bottom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\t\tvar left = cx - dx;\r\n\t\t\tvar right = cx + dx;\r\n\t\t\tvar top = cy + dy;\r\n\t\t\tvar bottom = cy - dy;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\r\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\r\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\r\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\r\n\r\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\r\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\r\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\r\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.left = this.left;\r\n\t\t\tdata.object.right = this.right;\r\n\t\t\tdata.object.top = this.top;\r\n\t\t\tdata.object.bottom = this.bottom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Face3.prototype, {\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tvar geometryId = 0; // Geometry uses even numbers as Id\r\n\r\n\tfunction Geometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [[]];\r\n\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphNormals = [];\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\tthis.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Geometry,\r\n\r\n\t\tisGeometry: true,\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\tthis.applyMatrix( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tcb.normalize();\r\n\r\n\t\t\t\tface.normal.copy( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ] = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFlatVertexNormals: function () {\r\n\r\n\t\t\tvar f, fl, face;\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeMorphNormals: function () {\r\n\r\n\t\t\tvar i, il, f, fl, face;\r\n\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\t\tvar tmpGeo = new Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// create on first access\r\n\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tfaceNormal = new Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\r\n\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t\t// set vertices to morph target\r\n\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t// compute morph normals\r\n\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t\t// store morph normals\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restore original normals\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normalMatrix,\r\n\t\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\t\tvertices1 = this.vertices,\r\n\t\t\t\tvertices2 = geometry.vertices,\r\n\t\t\t\tfaces1 = this.faces,\r\n\t\t\t\tfaces2 = geometry.faces,\r\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\r\n\t\t\t\tcolors1 = this.colors,\r\n\t\t\t\tcolors2 = geometry.colors;\r\n\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmergeMesh: function ( mesh ) {\r\n\r\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\r\n\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\r\n\t\tmergeVertices: function () {\r\n\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Use unique set of vertices\r\n\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.vertices = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\t\tvar faces = this.faces;\r\n\t\t\tvar length = faces.length;\r\n\r\n\t\t\t// tag faces\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// sort faces\r\n\r\n\t\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t\t// sort uvs\r\n\r\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\t\tvar newUvs1, newUvs2;\r\n\r\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Geometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertices = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\t\tvar hasMaterial = true;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\t\tvar faceType = 0;\r\n\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = {};\r\n\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new Geometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar i, il, j, jl, k, kl;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.colors = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [[]];\r\n\t\t\tthis.morphTargets = [];\r\n\t\t\tthis.morphNormals = [];\r\n\t\t\tthis.skinWeights = [];\r\n\t\t\tthis.skinIndices = [];\r\n\t\t\tthis.lineDistances = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tvar vertices = source.vertices;\r\n\r\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tvar colors = source.colors;\r\n\r\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tvar faces = source.faces;\r\n\r\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// face vertex uvs\r\n\r\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphTargets = source.morphTargets;\r\n\r\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = {};\r\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\r\n\r\n\t\t\t\t// vertices\r\n\r\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.vertices = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// normals\r\n\r\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.normals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph normals\r\n\r\n\t\t\tvar morphNormals = source.morphNormals;\r\n\r\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = {};\r\n\r\n\t\t\t\t// vertex normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.vertexNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\r\n\t\t\t\t\t\tvar destVertexNormal = {};\r\n\r\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\r\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\r\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\r\n\r\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.faceNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphNormals.push( morphNormal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin weights\r\n\r\n\t\t\tvar skinWeights = source.skinWeights;\r\n\r\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin indices\r\n\r\n\t\t\tvar skinIndices = source.skinIndices;\r\n\r\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tvar lineDistances = source.lineDistances;\r\n\r\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update flags\r\n\r\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\r\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\r\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferAttribute.prototype, {\r\n\r\n\t\tisBufferAttribute: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.normalized = source.normalized;\r\n\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyArray: function ( array ) {\r\n\r\n\t\t\tthis.array.set( array );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new Color();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector2();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\r\n\r\n\r\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\r\n\r\n\r\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\r\n\r\n\r\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\r\n\r\n\r\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\r\n\r\n\r\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\r\n\r\n\r\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectGeometry() {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.morphTargets = {};\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\t// this.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( DirectGeometry.prototype, {\r\n\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex = undefined;\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t// materials\r\n\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.groups = groups;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\t\tvar morphTargetsPosition;\r\n\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\r\n\t\t\t\t\t\tname: morphTargets[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\t\tvar morphTargetsNormal;\r\n\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\r\n\t\t\t\t\t\tname: morphNormals[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// morphs\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// skins\r\n\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeGroups( geometry );\r\n\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction arrayMax( array ) {\r\n\r\n\t\tif ( array.length === 0 ) return - Infinity;\r\n\r\n\t\tvar max = array[ 0 ];\r\n\r\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\r\n\r\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\r\n\r\n\tfunction BufferGeometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\r\n\t\tthis.morphAttributes = {};\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: BufferGeometry,\r\n\r\n\t\tisBufferGeometry: true,\r\n\r\n\t\tgetIndex: function () {\r\n\r\n\t\t\treturn this.index;\r\n\r\n\t\t},\r\n\r\n\t\tsetIndex: function ( index ) {\r\n\r\n\t\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.index = index;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( name === 'index' ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetAttribute: function ( name ) {\r\n\r\n\t\t\treturn this.attributes[ name ];\r\n\r\n\t\t},\r\n\r\n\t\tremoveAttribute: function ( name ) {\r\n\r\n\t\t\tdelete this.attributes[ name ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\t\tthis.groups.push( {\r\n\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tclearGroups: function () {\r\n\r\n\t\t\tthis.groups = [];\r\n\r\n\t\t},\r\n\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tmatrix.applyToBufferAttribute( position );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normal = this.attributes.normal;\r\n\r\n\t\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isPoints || object.isLine ) {\r\n\r\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tvar position = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateFromObject: function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\r\n\r\n\t\t\t\t\tdirect = undefined;\r\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t\tgeometry = direct;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.position;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.normal;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.color;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.uv;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.lineDistance;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t\t},\r\n\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\r\n\t\t\t\t\tattribute.name = morphTarget.name;\r\n\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning\r\n\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\t\tbox.setFromBufferAttribute( position );\r\n\t\t\t\t\tbox.getCenter( center );\r\n\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvector.x = position.getX( i );\r\n\t\t\t\t\t\tvector.y = position.getY( i );\r\n\t\t\t\t\t\tvector.z = position.getZ( i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\t// backwards compatibility\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function () {\r\n\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tif ( attributes.position ) {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\t// indexed elements\r\n\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, offset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset === undefined ) {\r\n\r\n\t\t\t\toffset = 0;\r\n\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\r\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeNormals: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function normalizeNormals() {\r\n\r\n\t\t\t\tvar normals = this.attributes.normal;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvector.x = normals.getX( i );\r\n\t\t\t\t\tvector.y = normals.getY( i );\r\n\t\t\t\t\tvector.z = normals.getZ( i );\r\n\r\n\t\t\t\t\tvector.normalize();\r\n\r\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoNonIndexed: function () {\r\n\r\n\t\t\tif ( this.index === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry2 = new BufferGeometry();\r\n\r\n\t\t\tvar indices = this.index.array;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\t\tvar array = attribute.array;\r\n\t\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard BufferGeometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = { attributes: {} };\r\n\r\n\t\t\tvar index = this.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array,\r\n\t\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new BufferGeometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar name, i, l;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// index\r\n\r\n\t\t\tvar index = source.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// attributes\r\n\r\n\t\t\tvar attributes = source.attributes;\r\n\r\n\t\t\tfor ( name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph attributes\r\n\r\n\t\t\tvar morphAttributes = source.morphAttributes;\r\n\r\n\t\t\tfor ( name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tvar groups = source.groups;\r\n\r\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// draw range\r\n\r\n\t\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t\t// user data\r\n\r\n\t\t\tthis.userData = source.userData;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// BoxGeometry\r\n\r\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\r\n\tBoxGeometry.prototype.constructor = BoxGeometry;\r\n\r\n\t// BoxBufferGeometry\r\n\r\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\t\tdepth = depth || 1;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar numberOfVertices = 0;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tvar segmentWidth = width / gridX;\r\n\t\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\t\tvar widthHalf = width / 2;\r\n\t\t\tvar heightHalf = height / 2;\r\n\t\t\tvar depthHalf = depth / 2;\r\n\r\n\t\t\tvar gridX1 = gridX + 1;\r\n\t\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\t\tvar vertexCounter = 0;\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar ix, iy;\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PlaneGeometry\r\n\r\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\r\n\r\n\t// PlaneBufferGeometry\r\n\r\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar materialId = 0;\r\n\r\n\tfunction Material() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\r\n\t\tthis.fog = true;\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.blending = NormalBlending;\r\n\t\tthis.side = FrontSide;\r\n\t\tthis.flatShading = false;\r\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\tthis.clippingPlanes = null;\r\n\t\tthis.clipIntersection = false;\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\tthis.dithering = false;\r\n\r\n\t\tthis.alphaTest = 0;\r\n\t\tthis.premultipliedAlpha = false;\r\n\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Material,\r\n\r\n\t\tisMaterial: true,\r\n\r\n\t\tonBeforeCompile: function () {},\r\n\r\n\t\tsetValues: function ( values ) {\r\n\r\n\t\t\tif ( values === undefined ) return;\r\n\r\n\t\t\tfor ( var key in values ) {\r\n\r\n\t\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for backward compatability if shading is set in the constructor\r\n\t\t\t\tif ( key === 'shading' ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\r\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\r\n\r\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\r\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\r\n\t\t\tdata.depthFunc = this.depthFunc;\r\n\t\t\tdata.depthTest = this.depthTest;\r\n\t\t\tdata.depthWrite = this.depthWrite;\r\n\r\n\t\t\t// rotation (SpriteMaterial)\r\n\t\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\r\n\t\t\tif ( this.skinning === true ) data.skinning = true;\r\n\r\n\t\t\tif ( this.visible === false ) data.visible = false;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\r\n\t\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.fog = source.fog;\r\n\t\t\tthis.lights = source.lights;\r\n\r\n\t\t\tthis.blending = source.blending;\r\n\t\t\tthis.side = source.side;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\t\tthis.precision = source.precision;\r\n\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\t\tthis.dithering = source.dithering;\r\n\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tthis.clipShadows = source.clipShadows;\r\n\t\t\tthis.clipIntersection = source.clipIntersection;\r\n\r\n\t\t\tvar srcPlanes = source.clippingPlanes,\r\n\t\t\t\tdstPlanes = null;\r\n\r\n\t\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\t\tvar n = srcPlanes.length;\r\n\t\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.clippingPlanes = dstPlanes;\r\n\r\n\t\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\r\n\r\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShaderMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t\tthis.extensions = {\r\n\t\t\tderivatives: false, // set to use derivatives\r\n\t\t\tfragDepth: false, // set to use fragment depth values\r\n\t\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t\t};\r\n\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShaderMaterial.prototype = Object.create( Material.prototype );\r\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\r\n\r\n\tShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n\tShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\tthis.extensions = source.extensions;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( var name in this.uniforms ) {\r\n\r\n\t\t\tvar uniform = this.uniforms[ name ];\r\n\t\t\tvar value = uniform.value;\r\n\r\n\t\t\tif ( value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Ray( origin, direction ) {\r\n\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( ray ) {\r\n\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tlookAt: function ( v ) {\r\n\r\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trecast: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function recast( t ) {\r\n\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\t\tvar directionDistance = target.dot( this.direction );\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSqToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToPoint( point ) {\r\n\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t\t// point behind the ray\r\n\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdistanceSqToSegment: function () {\r\n\r\n\t\t\tvar segCenter = new Vector3();\r\n\t\t\tvar segDir = new Vector3();\r\n\t\t\tvar diff = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sqrDist;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectSphere( sphere, target ) {\r\n\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t\t// Return if the ray never intersects the plane\r\n\r\n\t\t\treturn t >= 0 ? t : null;\r\n\r\n\t\t},\r\n\r\n\t\tintersectPlane: function ( plane, target ) {\r\n\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\t\tif ( t === null ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.at( t, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// check if the ray lies on the plane first\r\n\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\tintersectBox: function ( box, target ) {\r\n\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\t\tvar origin = this.origin;\r\n\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t\t//return point closest to the ray (positive side)\r\n\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: ( function () {\r\n\r\n\t\t\tvar v = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectTriangle: function () {\r\n\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new Vector3();\r\n\t\t\tvar edge1 = new Vector3();\r\n\t\t\tvar edge2 = new Vector3();\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( ray ) {\r\n\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Triangle( a, b, c ) {\r\n\r\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tgetNormal: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\r\n\t\t\treturn function getNormal( a, b, c, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttarget.subVectors( c, b );\r\n\t\t\t\tv0.subVectors( a, b );\r\n\t\t\t\ttarget.cross( v0 );\r\n\r\n\t\t\t\tvar targetLengthSq = target.lengthSq();\r\n\t\t\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\t// static/instance method to calculate barycentric coordinates\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\t\tgetBarycoord: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t\t\tv0.subVectors( c, a );\r\n\t\t\t\tv1.subVectors( b, a );\r\n\t\t\t\tv2.subVectors( point, a );\r\n\r\n\t\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// collinear or singular triangle\r\n\t\t\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\t\treturn target.set( - 2, - 1, - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar invDenom = 1 / denom;\r\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function containsPoint( point, a, b, c ) {\r\n\r\n\t\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\r\n\r\n\t\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}()\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tset: function ( a, b, c ) {\r\n\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( triangle ) {\r\n\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetArea: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getArea() {\r\n\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetMidpoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t\t},\r\n\r\n\t\tgetNormal: function ( target ) {\r\n\r\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tgetPlane: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tgetBarycoord: function ( point, target ) {\r\n\r\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsTriangle( this );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPoint: function () {\r\n\r\n\t\t\tvar vab = new Vector3();\r\n\t\t\tvar vac = new Vector3();\r\n\t\t\tvar vbc = new Vector3();\r\n\t\t\tvar vap = new Vector3();\r\n\t\t\tvar vbp = new Vector3();\r\n\t\t\tvar vcp = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPoint( p, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar a = this.a, b = this.b, c = this.c;\r\n\t\t\t\tvar v, w;\r\n\r\n\t\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t\t\tvab.subVectors( b, a );\r\n\t\t\t\tvac.subVectors( c, a );\r\n\t\t\t\tvap.subVectors( p, a );\r\n\t\t\t\tvar d1 = vab.dot( vap );\r\n\t\t\t\tvar d2 = vac.dot( vap );\r\n\t\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t\t\treturn target.copy( a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvbp.subVectors( p, b );\r\n\t\t\t\tvar d3 = vab.dot( vbp );\r\n\t\t\t\tvar d4 = vac.dot( vbp );\r\n\t\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t\t\treturn target.copy( b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vc = d1 * d4 - d3 * d2;\r\n\t\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvcp.subVectors( p, c );\r\n\t\t\t\tvar d5 = vab.dot( vcp );\r\n\t\t\t\tvar d6 = vac.dot( vcp );\r\n\t\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t\t\treturn target.copy( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vb = d5 * d2 - d1 * d6;\r\n\t\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar va = d3 * d6 - d5 * d4;\r\n\t\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t\t\tvbc.subVectors( c, b );\r\n\t\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face region\r\n\t\t\t\tvar denom = 1 / ( va + vb + vc );\r\n\t\t\t\t// u = va * denom\r\n\t\t\t\tv = vb * denom;\r\n\t\t\t\tw = vc * denom;\r\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( triangle ) {\r\n\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\r\n\tfunction Mesh( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t\tthis.drawMode = TrianglesDrawMode;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Mesh,\r\n\r\n\t\tisMesh: true,\r\n\r\n\t\tsetDrawMode: function ( value ) {\r\n\r\n\t\t\tthis.drawMode = value;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.drawMode = source.drawMode;\r\n\r\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMorphTargets: function () {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar m, ml, name;\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tvar keys = Object.keys( morphAttributes );\r\n\r\n\t\t\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\r\n\r\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tvar tempA = new Vector3();\r\n\t\t\tvar tempB = new Vector3();\r\n\t\t\tvar tempC = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tvar barycoord = new Vector3();\r\n\r\n\t\t\tvar intersectionPoint = new Vector3();\r\n\t\t\tvar intersectionPointWorld = new Vector3();\r\n\r\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\r\n\r\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\t\t\treturn uv1.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\t\t\tvar intersect;\r\n\r\n\t\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersect === null ) return null;\r\n\r\n\t\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tobject: object\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\r\n\r\n\t\t\t\tvA.fromBufferAttribute( position, a );\r\n\t\t\t\tvB.fromBufferAttribute( position, b );\r\n\t\t\t\tvC.fromBufferAttribute( position, c );\r\n\r\n\t\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\tif ( uv ) {\r\n\r\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar face = new Face3( a, b, c );\r\n\t\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\r\n\r\n\t\t\t\t\tintersection.face = face;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn intersection;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar material = this.material;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\t// Check boundingBox before continuing\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar intersection;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar a, b, c;\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\t\tvar uv = geometry.attributes.uv;\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\t\t\t\tvar i, j, il, jl;\r\n\t\t\t\t\tvar group, groupMaterial;\r\n\t\t\t\t\tvar start, end;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\t// indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = index.getX( j );\r\n\t\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\r\n\t\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = index.getX( i );\r\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\r\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = j;\r\n\t\t\t\t\t\t\t\t\tb = j + 1;\r\n\t\t\t\t\t\t\t\t\tc = j + 2;\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = i;\r\n\t\t\t\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar uvs;\r\n\r\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\r\n\r\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\r\n\r\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\r\n\r\n\t\tvar clearColor = new Color( 0x000000 );\r\n\t\tvar clearAlpha = 0;\r\n\r\n\t\tvar planeCamera, planeMesh;\r\n\t\tvar boxMesh;\r\n\r\n\t\tfunction render( renderList, scene, camera, forceClear ) {\r\n\r\n\t\t\tvar background = scene.background;\r\n\r\n\t\t\tif ( background === null ) {\r\n\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t} else if ( background && background.isColor ) {\r\n\r\n\t\t\t\tsetClear( background, 1 );\r\n\t\t\t\tforceClear = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderer.autoClear || forceClear ) {\r\n\r\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( background && background.isCubeTexture ) {\r\n\r\n\t\t\t\tif ( boxMesh === undefined ) {\r\n\r\n\t\t\t\t\tboxMesh = new Mesh(\r\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\r\n\t\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\r\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\t\tdepthTest: true,\r\n\t\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\r\n\r\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tobjects.update( boxMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\r\n\r\n\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\r\n\r\n\t\t\t} else if ( background && background.isTexture ) {\r\n\r\n\t\t\t\tif ( planeCamera === undefined ) {\r\n\r\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\r\n\t\t\t\t\tplaneMesh = new Mesh(\r\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\r\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tobjects.update( planeMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.map = background;\r\n\r\n\t\t\t\t// TODO Push this to renderList\r\n\r\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setClear( color, alpha ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tgetClearColor: function () {\r\n\r\n\t\t\t\treturn clearColor;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearColor: function ( color, alpha ) {\r\n\r\n\t\t\t\tclearColor.set( color );\r\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\tgetClearAlpha: function () {\r\n\r\n\t\t\t\treturn clearAlpha;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearAlpha: function ( alpha ) {\r\n\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\trender: render\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawArrays( mode, start, count );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\r\n\r\n\t\tvar maxAnisotropy;\r\n\r\n\t\tfunction getMaxAnisotropy() {\r\n\r\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaxAnisotropy = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxAnisotropy;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'highp';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecision = 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 'lowp';\r\n\r\n\t\t}\r\n\r\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\r\n\r\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t\tvar maxPrecision = getMaxPrecision( precision );\r\n\r\n\t\tif ( maxPrecision !== precision ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\t\tprecision = maxPrecision;\r\n\r\n\t\t}\r\n\r\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\t\tvar vertexTextures = maxVertexTextures > 0;\r\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\r\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tisWebGL2: isWebGL2,\r\n\r\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n\t\t\tmaxTextures: maxTextures,\r\n\t\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\t\tmaxTextureSize: maxTextureSize,\r\n\t\t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n\t\t\tmaxAttributes: maxAttributes,\r\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\t\tmaxVaryings: maxVaryings,\r\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n\t\t\tvertexTextures: vertexTextures,\r\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\r\n\t\t\tfloatVertexTextures: floatVertexTextures\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLClipping() {\r\n\r\n\t\tvar scope = this,\r\n\r\n\t\t\tglobalState = null,\r\n\t\t\tnumGlobalPlanes = 0,\r\n\t\t\tlocalClippingEnabled = false,\r\n\t\t\trenderingShadows = false,\r\n\r\n\t\t\tplane = new Plane(),\r\n\t\t\tviewNormalMatrix = new Matrix3(),\r\n\r\n\t\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\t\tthis.uniform = uniform;\r\n\t\tthis.numPlanes = 0;\r\n\t\tthis.numIntersection = 0;\r\n\r\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\r\n\r\n\t\t\tvar enabled =\r\n\t\t\t\tplanes.length !== 0 ||\r\n\t\t\t\tenableLocalClipping ||\r\n\t\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t\t// run another frame in order to reset the state:\r\n\t\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\t\tlocalClippingEnabled;\r\n\r\n\t\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\t\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\t\treturn enabled;\r\n\r\n\t\t};\r\n\r\n\t\tthis.beginShadows = function () {\r\n\r\n\t\t\trenderingShadows = true;\r\n\t\t\tprojectPlanes( null );\r\n\r\n\t\t};\r\n\r\n\t\tthis.endShadows = function () {\r\n\r\n\t\t\trenderingShadows = false;\r\n\t\t\tresetGlobalState();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\r\n\r\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n\r\n\t\t\t\t// there's no local clipping\r\n\r\n\t\t\t\tif ( renderingShadows ) {\r\n\r\n\t\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresetGlobalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n\t\t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n\t\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache.clippingState = dstArray;\r\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t\tfunction resetGlobalState() {\r\n\r\n\t\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\t\tuniform.value = globalState;\r\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n\t\t\t\tdstArray = null;\r\n\r\n\t\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.value = dstArray;\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = nPlanes;\r\n\r\n\t\t\treturn dstArray;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLExtensions( gl ) {\r\n\r\n\t\tvar extensions = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( name ) {\r\n\r\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn extensions[ name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar extension;\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textensions[ name ] = extension;\r\n\r\n\t\t\t\treturn extension;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLGeometries( gl, attributes, info ) {\r\n\r\n\t\tvar geometries = {};\r\n\t\tvar wireframeAttributes = {};\r\n\r\n\t\tfunction onGeometryDispose( event ) {\r\n\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in buffergeometry.attributes ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\tif ( attribute ) {\r\n\r\n\t\t\t\tattributes.remove( attribute );\r\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinfo.memory.geometries --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction get( object, geometry ) {\r\n\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry ) return buffergeometry;\r\n\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\t\tinfo.memory.geometries ++;\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( geometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in geometryAttributes ) {\r\n\r\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\r\n\r\n\t\t\tif ( attribute ) return attribute;\r\n\r\n\t\t\tvar indices = [];\r\n\r\n\t\t\tvar geometryIndex = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\t// console.time( 'wireframe' );\r\n\r\n\t\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\t\tvar array = geometryIndex.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar array = geometryAttributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\r\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\r\n\r\n\t\t\treturn attribute;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tupdate: update,\r\n\r\n\t\t\tgetWireframeAttribute: getWireframeAttribute\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tvar type, bytesPerElement;\r\n\r\n\t\tfunction setIndex( value ) {\r\n\r\n\t\t\ttype = value.type;\r\n\t\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLInfo( gl ) {\r\n\r\n\t\tvar memory = {\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\t};\r\n\r\n\t\tvar render = {\r\n\t\t\tframe: 0,\r\n\t\t\tcalls: 0,\r\n\t\t\ttriangles: 0,\r\n\t\t\tpoints: 0,\r\n\t\t\tlines: 0\r\n\t\t};\r\n\r\n\t\tfunction update( count, mode, instanceCount ) {\r\n\r\n\t\t\tinstanceCount = instanceCount || 1;\r\n\r\n\t\t\trender.calls ++;\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.TRIANGLE_STRIP:\r\n\t\t\t\tcase gl.TRIANGLE_FAN:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINES:\r\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.POINTS:\r\n\t\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\trender.frame ++;\r\n\t\t\trender.calls = 0;\r\n\t\t\trender.triangles = 0;\r\n\t\t\trender.points = 0;\r\n\t\t\trender.lines = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmemory: memory,\r\n\t\t\trender: render,\r\n\t\t\tprograms: null,\r\n\t\t\tautoReset: true,\r\n\t\t\treset: reset,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\r\n\r\n\t}\r\n\r\n\tfunction WebGLMorphtargets( gl ) {\r\n\r\n\t\tvar influencesList = {};\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\t\tfunction update( object, geometry, material, program ) {\r\n\r\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar length = objectInfluences.length;\r\n\r\n\t\t\tvar influences = influencesList[ geometry.id ];\r\n\r\n\t\t\tif ( influences === undefined ) {\r\n\r\n\t\t\t\t// initialise list\r\n\r\n\t\t\t\tinfluences = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\r\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\r\n\r\n\t\t\t// Remove current morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\r\n\r\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Collect influences\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tinfluence[ 0 ] = i;\r\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfluences.sort( absNumericalSort );\r\n\r\n\t\t\t// Add morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 0 ];\r\n\t\t\t\t\tvar value = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( value ) {\r\n\r\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\r\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\r\n\r\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmorphInfluences[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLObjects( geometries, info ) {\r\n\r\n\t\tvar updateList = {};\r\n\r\n\t\tfunction update( object ) {\r\n\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\r\n\r\n\t\t\t// Update once per frame\r\n\r\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\r\n\r\n\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometries.update( buffergeometry );\r\n\r\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tupdateList = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tCubeTexture.prototype = Object.create( Texture.prototype );\r\n\tCubeTexture.prototype.constructor = CubeTexture;\r\n\r\n\tCubeTexture.prototype.isCubeTexture = true;\r\n\r\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.image;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis.image = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Uniforms of a program.\r\n\t * Those form a tree structure with a special top-level container for the root,\r\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n\t *\r\n\t *\r\n\t * Properties of inner nodes including the top-level container:\r\n\t *\r\n\t * .seq - array of nested uniforms\r\n\t * .map - nested uniforms by name\r\n\t *\r\n\t *\r\n\t * Methods of all nodes except the top-level container:\r\n\t *\r\n\t * .setValue( gl, value, [renderer] )\r\n\t *\r\n\t * \t\tuploads a uniform value(s)\r\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n\t *\r\n\t *\r\n\t * Static methods of the top-level container (renderer factorizations):\r\n\t *\r\n\t * .upload( gl, seq, values, renderer )\r\n\t *\r\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n\t *\r\n\t * .seqWithValue( seq, values ) : filteredSeq\r\n\t *\r\n\t * \t\tfilters 'seq' entries with corresponding entry in values\r\n\t *\r\n\t *\r\n\t * Methods of the top-level container (renderer factorizations):\r\n\t *\r\n\t * .setValue( gl, name, value )\r\n\t *\r\n\t * \t\tsets uniform with  name 'name' to 'value'\r\n\t *\r\n\t * .set( gl, obj, prop )\r\n\t *\r\n\t * \t\tsets uniform from object and property with same name than uniform\r\n\t *\r\n\t * .setOptional( gl, obj, prop )\r\n\t *\r\n\t * \t\tlike .set for an optional property of the object\r\n\t *\r\n\t */\r\n\r\n\tvar emptyTexture = new Texture();\r\n\tvar emptyCubeTexture = new CubeTexture();\r\n\r\n\t// --- Base for inner nodes (including the root) ---\r\n\r\n\tfunction UniformContainer() {\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t}\r\n\r\n\t// --- Utilities ---\r\n\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\tvar arrayCacheF32 = [];\r\n\tvar arrayCacheI32 = [];\r\n\r\n\t// Float32Array caches used for uploading Matrix uniforms\r\n\r\n\tvar mat4array = new Float32Array( 16 );\r\n\tvar mat3array = new Float32Array( 9 );\r\n\tvar mat2array = new Float32Array( 4 );\r\n\r\n\t// Flattening for arrays of vectors and matrices\r\n\r\n\tfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\t\tvar firstElem = array[ 0 ];\r\n\r\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t\t// unoptimized: ! isNaN( firstElem )\r\n\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\tvar n = nBlocks * blockSize,\r\n\t\t\tr = arrayCacheF32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Float32Array( n );\r\n\t\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tif ( nBlocks !== 0 ) {\r\n\r\n\t\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\t\toffset += blockSize;\r\n\t\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\tfunction arraysEqual( a, b ) {\r\n\r\n\t\tif ( a.length !== b.length ) return false;\r\n\r\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction copyArray( a, b ) {\r\n\r\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\t\ta[ i ] = b[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Texture unit allocation\r\n\r\n\tfunction allocTexUnits( renderer, n ) {\r\n\r\n\t\tvar r = arrayCacheI32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Int32Array( n );\r\n\t\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\tr[ i ] = renderer.allocTextureUnit();\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\t// --- Setters ---\r\n\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\r\n\t// Single scalar\r\n\r\n\tfunction setValue1f( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1f( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\tfunction setValue1i( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1i( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\t// Single float vector (from flat array or THREE.VectorN)\r\n\r\n\tfunction setValue2fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( v.r !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\t\tcache[ 0 ] = v.r;\r\n\t\t\t\tcache[ 1 ] = v.g;\r\n\t\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\t\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single matrix (from flat array or MatrixN)\r\n\r\n\tfunction setValue2fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat2array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat3array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat4array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single texture (2D / Cube)\r\n\r\n\tfunction setValueT1( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = renderer.allocTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\r\n\r\n\t}\r\n\r\n\tfunction setValueT6( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = renderer.allocTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n\t}\r\n\r\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n\tfunction setValue2iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue3iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue4iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for the singular case\r\n\r\n\tfunction getSingularSetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\r\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\r\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Array of scalars\r\n\r\n\tfunction setValue1fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\tfunction setValue1iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Array of vectors (flat or from THREE classes)\r\n\r\n\tfunction setValueV2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 2 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 3 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of matrices (flat or from THREE clases)\r\n\r\n\tfunction setValueM2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 9 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 16 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of textures (2D / Cube)\r\n\r\n\tfunction setValueT1a( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( renderer, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValueT6a( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( renderer, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\tfunction getPureArraySetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\r\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// --- Uniform Classes ---\r\n\r\n\tfunction SingleUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\r\n\r\n\t\t\tthis.cache = new Float32Array( data.length );\r\n\r\n\t\t}\r\n\r\n\t\tcopyArray( cache, data );\r\n\r\n\t};\r\n\r\n\tfunction StructuredUniform( id ) {\r\n\r\n\t\tthis.id = id;\r\n\r\n\t\tUniformContainer.call( this ); // mix-in\r\n\r\n\t}\r\n\r\n\tStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\r\n\r\n\t\tvar seq = this.seq;\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ], renderer );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// --- Top-level ---\r\n\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\r\n\r\n\t// extracts\r\n\t// \t- the identifier (member name or array index)\r\n\t//  - followed by an optional right bracket (found when array index)\r\n\t//  - followed by an optional left bracket or dot (type of subscript)\r\n\t//\r\n\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t// in the uniform names.\r\n\r\n\tfunction addUniform( container, uniformObject ) {\r\n\r\n\t\tcontainer.seq.push( uniformObject );\r\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n\t}\r\n\r\n\tfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\t\tvar path = activeInfo.name,\r\n\t\t\tpathLength = path.length;\r\n\r\n\t\t// reset RegExp object, because of the early exit of a previous run\r\n\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\twhile ( true ) {\r\n\r\n\t\t\tvar match = RePathPart.exec( path ),\r\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n\t\t\t\tid = match[ 1 ],\r\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\r\n\t\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\t\tvar map = container.map, next = map[ id ];\r\n\r\n\t\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer = next;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Root Container\r\n\r\n\tfunction WebGLUniforms( gl, program, renderer ) {\r\n\r\n\t\tUniformContainer.call( this );\r\n\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; ++ i ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i ),\r\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\r\n\r\n\t\tvar v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t};\r\n\r\n\r\n\t// Static interface\r\n\r\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue( gl, v.value, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\r\n\r\n\t\tvar r = [];\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase LinearEncoding:\r\n\t\t\t\treturn [ 'Linear', '( value )' ];\r\n\t\t\tcase sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB', '( value )' ];\r\n\t\t\tcase RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE', '( value )' ];\r\n\t\t\tcase RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\r\n\t\t\tcase RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\r\n\t\t\tcase RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\r\n\t\t\tcase GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase LinearToneMapping:\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = 'Uncharted2';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CineonToneMapping:\r\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = shader.vertexShader;\r\n\t\tvar fragmentShader = shader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeReflectionMapping:\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase EquirectangularReflectionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material.isRawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\r\n\r\n\t\t\tvar isGLSL3ShaderMaterial = false;\r\n\r\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\r\n\r\n\t\t\tif ( material.isShaderMaterial &&\r\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\r\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\r\n\r\n\t\t\t\tisGLSL3ShaderMaterial = true;\r\n\r\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\r\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// GLSL 3.0 conversion\r\n\t\t\tprefixVertex = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define attribute in',\r\n\t\t\t\t'#define varying out',\r\n\t\t\t\t'#define texture2D texture'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\t\tprefixFragment = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define varying in',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t\t'#define texture2D texture',\r\n\t\t\t\t'#define textureCube texture',\r\n\t\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function () {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function () {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function () {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.name = shader.name;\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\r\n\r\n\t\tvar programs = [];\r\n\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshToonMaterial: 'phong',\r\n\t\t\tMeshStandardMaterial: 'physical',\r\n\t\t\tMeshPhysicalMaterial: 'physical',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points',\r\n\t\t\tShadowMaterial: 'shadow',\r\n\t\t\tSpriteMaterial: 'sprite'\r\n\t\t};\r\n\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\r\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\r\n\t\t];\r\n\r\n\r\n\t\tfunction allocateBones( object ) {\r\n\r\n\t\t\tvar skeleton = object.skeleton;\r\n\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\treturn 1024;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\r\n\r\n\t\t\t\tif ( maxBones < bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn maxBones;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\t\tvar encoding;\r\n\r\n\t\t\tif ( ! map ) {\r\n\r\n\t\t\t\tencoding = LinearEncoding;\r\n\r\n\t\t\t} else if ( map.isTexture ) {\r\n\r\n\t\t\t\tencoding = map.encoding;\r\n\r\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\t\tencoding = GammaEncoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn encoding;\r\n\r\n\t\t}\r\n\r\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\r\n\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\r\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\r\n\t\t\tvar precision = capabilities.precision;\r\n\r\n\t\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tvar parameters = {\r\n\r\n\t\t\t\tshaderID: shaderID,\r\n\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\t\tgradientMap: !! material.gradientMap,\r\n\r\n\t\t\t\tcombine: material.combine,\r\n\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\t\tfog: !! fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\r\n\r\n\t\t\t\tflatShading: material.flatShading,\r\n\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\t\tskinning: material.skinning && maxBones > 0,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\r\n\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\t\tnumClippingPlanes: nClipPlanes,\r\n\t\t\t\tnumClipIntersection: nClipIntersection,\r\n\r\n\t\t\t\tdithering: material.dithering,\r\n\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\t\tflipSided: material.side === BackSide,\r\n\r\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n\t\t\t};\r\n\r\n\t\t\treturn parameters;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tarray.push( material.fragmentShader );\r\n\t\t\t\tarray.push( material.vertexShader );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\t\tarray.push( name );\r\n\t\t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray.push( material.onBeforeCompile.toString() );\r\n\r\n\t\t\tarray.push( renderer.gammaOutput );\r\n\r\n\t\t\treturn array.join();\r\n\r\n\t\t};\r\n\r\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\r\n\r\n\t\t\tvar program;\r\n\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\r\n\t\t\t\tprograms.push( program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t};\r\n\r\n\t\tthis.releaseProgram = function ( program ) {\r\n\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author fordacious / fordacious.github.io\r\n\t */\r\n\r\n\tfunction WebGLProperties() {\r\n\r\n\t\tvar properties = new WeakMap();\r\n\r\n\t\tfunction get( object ) {\r\n\r\n\t\t\tvar map = properties.get( object );\r\n\r\n\t\t\tif ( map === undefined ) {\r\n\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties.set( object, map );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map;\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( object ) {\r\n\r\n\t\t\tproperties.delete( object );\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( object, key, value ) {\r\n\r\n\t\t\tproperties.get( object )[ key ] = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tproperties = new WeakMap();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction painterSortStable( a, b ) {\r\n\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\r\n\r\n\t\t\treturn a.program.id - b.program.id;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable( a, b ) {\r\n\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction WebGLRenderList() {\r\n\r\n\t\tvar renderItems = [];\r\n\t\tvar renderItemsIndex = 0;\r\n\r\n\t\tvar opaque = [];\r\n\t\tvar transparent = [];\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\trenderItemsIndex = 0;\r\n\r\n\t\t\topaque.length = 0;\r\n\t\t\ttransparent.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction push( object, geometry, material, z, group ) {\r\n\r\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\r\n\r\n\t\t\tif ( renderItem === undefined ) {\r\n\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tprogram: material.program,\r\n\t\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\t\tz: z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\r\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.program = material.program;\r\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\t\trenderItem.z = z;\r\n\t\t\t\trenderItem.group = group;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\r\n\r\n\t\t\trenderItemsIndex ++;\r\n\r\n\t\t}\r\n\r\n\t\tfunction sort() {\r\n\r\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\r\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\topaque: opaque,\r\n\t\t\ttransparent: transparent,\r\n\r\n\t\t\tinit: init,\r\n\t\t\tpush: push,\r\n\r\n\t\t\tsort: sort\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderLists() {\r\n\r\n\t\tvar lists = {};\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar hash = scene.id + ',' + camera.id;\r\n\t\t\tvar list = lists[ hash ];\r\n\r\n\t\t\tif ( list === undefined ) {\r\n\r\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\r\n\r\n\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\tlists[ hash ] = list;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tlists = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction UniformsCache() {\r\n\r\n\t\tvar lights = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( light ) {\r\n\r\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uniforms;\r\n\r\n\t\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\t\treturn uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar count = 0;\r\n\r\n\tfunction WebGLLights() {\r\n\r\n\t\tvar cache = new UniformsCache();\r\n\r\n\t\tvar state = {\r\n\r\n\t\t\tid: count ++,\r\n\r\n\t\t\thash: {\r\n\t\t\t\tstateID: - 1,\r\n\t\t\t\tdirectionalLength: - 1,\r\n\t\t\t\tpointLength: - 1,\r\n\t\t\t\tspotLength: - 1,\r\n\t\t\t\trectAreaLength: - 1,\r\n\t\t\t\themiLength: - 1,\r\n\t\t\t\tshadowsLength: - 1\r\n\t\t\t},\r\n\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\trectArea: [],\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: []\r\n\r\n\t\t};\r\n\r\n\t\tvar vector3 = new Vector3();\r\n\t\tvar matrix4 = new Matrix4();\r\n\t\tvar matrix42 = new Matrix4();\r\n\r\n\t\tfunction setup( lights, shadows, camera ) {\r\n\r\n\t\t\tvar r = 0, g = 0, b = 0;\r\n\r\n\t\t\tvar directionalLength = 0;\r\n\t\t\tvar pointLength = 0;\r\n\t\t\tvar spotLength = 0;\r\n\t\t\tvar rectAreaLength = 0;\r\n\t\t\tvar hemiLength = 0;\r\n\r\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tvar color = light.color;\r\n\t\t\t\tvar intensity = light.intensity;\r\n\t\t\t\tvar distance = light.distance;\r\n\r\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\t\tr += color.r * intensity;\r\n\t\t\t\t\tg += color.g * intensity;\r\n\t\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\r\n\r\n\t\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\r\n\r\n\t\t\t\t\tspotLength ++;\r\n\r\n\t\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\t// (a) intensity is the total visible light emitted\r\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n\r\n\t\t\t\t\t// (b) intensity is the brightness of the light\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\r\n\t\t\t\t\tmatrix42.identity();\r\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\r\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\r\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\r\n\r\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\r\n\t\t\t\t\t// uniforms.distance = distance;\r\n\r\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\r\n\r\n\t\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\r\n\r\n\t\t\t\t\tpointLength ++;\r\n\r\n\t\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\r\n\r\n\t\t\t\t\themiLength ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.ambient[ 0 ] = r;\r\n\t\t\tstate.ambient[ 1 ] = g;\r\n\t\t\tstate.ambient[ 2 ] = b;\r\n\r\n\t\t\tstate.directional.length = directionalLength;\r\n\t\t\tstate.spot.length = spotLength;\r\n\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\tstate.point.length = pointLength;\r\n\t\t\tstate.hemi.length = hemiLength;\r\n\r\n\t\t\tstate.hash.stateID = state.id;\r\n\t\t\tstate.hash.directionalLength = directionalLength;\r\n\t\t\tstate.hash.pointLength = pointLength;\r\n\t\t\tstate.hash.spotLength = spotLength;\r\n\t\t\tstate.hash.rectAreaLength = rectAreaLength;\r\n\t\t\tstate.hash.hemiLength = hemiLength;\r\n\t\t\tstate.hash.shadowsLength = shadows.length;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\tstate: state\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLRenderState() {\r\n\r\n\t\tvar lights = new WebGLLights();\r\n\r\n\t\tvar lightsArray = [];\r\n\t\tvar shadowsArray = [];\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\tlightsArray.length = 0;\r\n\t\t\tshadowsArray.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushLight( light ) {\r\n\r\n\t\t\tlightsArray.push( light );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\t\tshadowsArray.push( shadowLight );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setupLights( camera ) {\r\n\r\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\r\n\r\n\t\t}\r\n\r\n\t\tvar state = {\r\n\t\t\tlightsArray: lightsArray,\r\n\t\t\tshadowsArray: shadowsArray,\r\n\r\n\t\t\tlights: lights\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tstate: state,\r\n\t\t\tsetupLights: setupLights,\r\n\r\n\t\t\tpushLight: pushLight,\r\n\t\t\tpushShadow: pushShadow\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderStates() {\r\n\r\n\t\tvar renderStates = {};\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar renderState;\r\n\r\n\t\t\tif ( renderStates[ scene.id ] === undefined ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\trenderStates[ scene.id ] = {};\r\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\r\n\r\n\t\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn renderState;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\trenderStates = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / https://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDepthMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\r\n\r\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  referencePosition: <float>,\r\n\t *  nearDistance: <float>,\r\n\t *  farDistance: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDistanceMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\tthis.referencePosition = new Vector3();\r\n\t\tthis.nearDistance = 1;\r\n\t\tthis.farDistance = 1000;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\r\n\r\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.referencePosition.copy( source.referencePosition );\r\n\t\tthis.nearDistance = source.nearDistance;\r\n\t\tthis.farDistance = source.farDistance;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\r\n\r\n\t\tvar _frustum = new Frustum(),\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_shadowMapSize = new Vector2(),\r\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\r\n\r\n\t\t\t_lookTarget = new Vector3(),\r\n\t\t\t_lightPositionWorld = new Vector3(),\r\n\r\n\t\t\t_MorphingFlag = 1,\r\n\t\t\t_SkinningFlag = 2,\r\n\r\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n\t\t\t_materialCache = {};\r\n\r\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\r\n\r\n\t\tvar cubeDirections = [\r\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\r\n\t\tvar cubeUps = [\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\r\n\t\tvar cube2DViewPorts = [\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\r\n\t\t];\r\n\r\n\t\t// init\r\n\r\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\r\n\r\n\t\t\t\tdepthPacking: RGBADepthPacking,\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis.type = PCFShadowMap;\r\n\r\n\t\tthis.render = function ( lights, scene, camera ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t\tif ( lights.length === 0 ) return;\r\n\r\n\t\t\t// TODO Clean up (needed in case of contextlost)\r\n\t\t\tvar _gl = _renderer.context;\r\n\t\t\tvar _state = _renderer.state;\r\n\r\n\t\t\t// Set GL state for depth map.\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\t\t\t_state.buffers.depth.setTest( true );\r\n\t\t\t_state.setScissorTest( false );\r\n\r\n\t\t\t// render depth map\r\n\r\n\t\t\tvar faceCount;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\tvar isPointLight = light && light.isPointLight;\r\n\r\n\t\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t//   y Y\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t\t// positive X\r\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative X\r\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Z\r\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Z\r\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Y\r\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Y\r\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\r\n\r\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\r\n\r\n\t\t\t\t\tshadow.update( light );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tfaceCount = 6;\r\n\r\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t// equal to inverse of the light's position\r\n\r\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfaceCount = 1;\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t// run a single pass if not\r\n\r\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.needsUpdate = false;\r\n\r\n\t\t};\r\n\r\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tvar result = null;\r\n\r\n\t\t\tvar materialVariants = _depthMaterials;\r\n\t\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\t\tvar useMorphing = false;\r\n\r\n\t\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\r\n\r\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\r\n\r\n\t\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult = customMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _renderer.localClippingEnabled &&\r\n\t\t\t\t\tmaterial.clipShadows === true &&\r\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\r\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult.visible = material.visible;\r\n\t\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\r\n\r\n\t\t\tresult.clipShadows = material.clipShadows;\r\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\t\tresult.clipIntersection = material.clipIntersection;\r\n\r\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\r\n\t\t\t\tresult.nearDistance = shadowCameraNear;\r\n\t\t\t\tresult.farDistance = shadowCameraFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLState( gl, extensions, utils, capabilities ) {\r\n\r\n\t\tfunction ColorBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar color = new Vector4();\r\n\t\t\tvar currentColorMask = null;\r\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetMask: function ( colorMask ) {\r\n\r\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\r\n\r\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolor.set( r, g, b, a );\r\n\r\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction DepthBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentDepthMask = null;\r\n\t\t\tvar currentDepthFunc = null;\r\n\t\t\tvar currentDepthClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( depthTest ) {\r\n\r\n\t\t\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( depthMask ) {\r\n\r\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.depthMask( depthMask );\r\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\t\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\t\tcase NeverDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase EqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( depth ) {\r\n\r\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction StencilBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentStencilMask = null;\r\n\t\t\tvar currentStencilFunc = null;\r\n\t\t\tvar currentStencilRef = null;\r\n\t\t\tvar currentStencilFuncMask = null;\r\n\t\t\tvar currentStencilFail = null;\r\n\t\t\tvar currentStencilZFail = null;\r\n\t\t\tvar currentStencilZPass = null;\r\n\t\t\tvar currentStencilClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( stencilTest ) {\r\n\r\n\t\t\t\t\tif ( stencilTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\r\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( stencil ) {\r\n\r\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\t\tcurrentStencilClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar colorBuffer = new ColorBuffer();\r\n\t\tvar depthBuffer = new DepthBuffer();\r\n\t\tvar stencilBuffer = new StencilBuffer();\r\n\r\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n\t\tvar enabledCapabilities = {};\r\n\r\n\t\tvar compressedTextureFormats = null;\r\n\r\n\t\tvar currentProgram = null;\r\n\r\n\t\tvar currentBlendingEnabled = null;\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\tvar currentPremultipledAlpha = false;\r\n\r\n\t\tvar currentFlipSided = null;\r\n\t\tvar currentCullFace = null;\r\n\r\n\t\tvar currentLineWidth = null;\r\n\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\r\n\r\n\t\tvar lineWidthAvailable = false;\r\n\t\tvar version = 0;\r\n\t\tvar glVersion = gl.getParameter( gl.VERSION );\r\n\r\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\r\n\r\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar currentTextureSlot = null;\r\n\t\tvar currentBoundTextures = {};\r\n\r\n\t\tvar currentScissor = new Vector4();\r\n\t\tvar currentViewport = new Vector4();\r\n\r\n\t\tfunction createTexture( type, target, count ) {\r\n\r\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\t\tvar texture = gl.createTexture();\r\n\r\n\t\t\tgl.bindTexture( type, texture );\r\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t}\r\n\r\n\t\tvar emptyTextures = {};\r\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\r\n\t\t// init\r\n\r\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\r\n\t\tdepthBuffer.setClear( 1 );\r\n\t\tstencilBuffer.setClear( 0 );\r\n\r\n\t\tenable( gl.DEPTH_TEST );\r\n\t\tdepthBuffer.setFunc( LessEqualDepth );\r\n\r\n\t\tsetFlipSided( false );\r\n\t\tsetCullFace( CullFaceBack );\r\n\t\tenable( gl.CULL_FACE );\r\n\r\n\t\tsetBlending( NoBlending );\r\n\r\n\t\t//\r\n\r\n\t\tfunction initAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttribute( attribute ) {\r\n\r\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\r\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableUnusedAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\r\n\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\r\n\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getCompressedTextureFormats() {\r\n\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\r\n\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn compressedTextureFormats;\r\n\r\n\t\t}\r\n\r\n\t\tfunction useProgram( program ) {\r\n\r\n\t\t\tif ( currentProgram !== program ) {\r\n\r\n\t\t\t\tgl.useProgram( program );\r\n\r\n\t\t\t\tcurrentProgram = program;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\t\tif ( blending === NoBlending ) {\r\n\r\n\t\t\t\tif ( currentBlendingEnabled ) {\r\n\r\n\t\t\t\t\tdisable( gl.BLEND );\r\n\t\t\t\t\tcurrentBlendingEnabled = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! currentBlendingEnabled ) {\r\n\r\n\t\t\t\tenable( gl.BLEND );\r\n\t\t\t\tcurrentBlendingEnabled = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blending !== CustomBlending ) {\r\n\r\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n\r\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\r\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// custom blending\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setMaterial( material, frontFaceCW ) {\r\n\r\n\t\t\tmaterial.side === DoubleSide\r\n\t\t\t\t? disable( gl.CULL_FACE )\r\n\t\t\t\t: enable( gl.CULL_FACE );\r\n\r\n\t\t\tvar flipSided = ( material.side === BackSide );\r\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\r\n\r\n\t\t\tsetFlipSided( flipSided );\r\n\r\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t\t? setBlending( NoBlending )\r\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\r\n\t\t\tdepthBuffer.setTest( material.depthTest );\r\n\t\t\tdepthBuffer.setMask( material.depthWrite );\r\n\t\t\tcolorBuffer.setMask( material.colorWrite );\r\n\r\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction setFlipSided( flipSided ) {\r\n\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setCullFace( cullFace ) {\r\n\r\n\t\t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n\t\t\t\tenable( gl.CULL_FACE );\r\n\r\n\t\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentCullFace = cullFace;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setLineWidth( width ) {\r\n\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\r\n\r\n\t\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n\t\t\tif ( polygonOffset ) {\r\n\r\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setScissorTest( scissorTest ) {\r\n\r\n\t\t\tif ( scissorTest ) {\r\n\r\n\t\t\t\tenable( gl.SCISSOR_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.SCISSOR_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// texture\r\n\r\n\t\tfunction activeTexture( webglSlot ) {\r\n\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction bindTexture( webglType, webglTexture ) {\r\n\r\n\t\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t\tactiveTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction compressedTexImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction texImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction scissor( scissor ) {\r\n\r\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction viewport( viewport ) {\r\n\r\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tenabledCapabilities = {};\r\n\r\n\t\t\tcompressedTextureFormats = null;\r\n\r\n\t\t\tcurrentTextureSlot = null;\r\n\t\t\tcurrentBoundTextures = {};\r\n\r\n\t\t\tcurrentProgram = null;\r\n\r\n\t\t\tcurrentBlending = null;\r\n\r\n\t\t\tcurrentFlipSided = null;\r\n\t\t\tcurrentCullFace = null;\r\n\r\n\t\t\tcolorBuffer.reset();\r\n\t\t\tdepthBuffer.reset();\r\n\t\t\tstencilBuffer.reset();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tbuffers: {\r\n\t\t\t\tcolor: colorBuffer,\r\n\t\t\t\tdepth: depthBuffer,\r\n\t\t\t\tstencil: stencilBuffer\r\n\t\t\t},\r\n\r\n\t\t\tinitAttributes: initAttributes,\r\n\t\t\tenableAttribute: enableAttribute,\r\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\r\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\r\n\t\t\tenable: enable,\r\n\t\t\tdisable: disable,\r\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\r\n\r\n\t\t\tuseProgram: useProgram,\r\n\r\n\t\t\tsetBlending: setBlending,\r\n\t\t\tsetMaterial: setMaterial,\r\n\r\n\t\t\tsetFlipSided: setFlipSided,\r\n\t\t\tsetCullFace: setCullFace,\r\n\r\n\t\t\tsetLineWidth: setLineWidth,\r\n\t\t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n\t\t\tsetScissorTest: setScissorTest,\r\n\r\n\t\t\tactiveTexture: activeTexture,\r\n\t\t\tbindTexture: bindTexture,\r\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\t\ttexImage2D: texImage2D,\r\n\r\n\t\t\tscissor: scissor,\r\n\t\t\tviewport: viewport,\r\n\r\n\t\t\treset: reset\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n\r\n\t\tvar _videoTextures = {};\r\n\t\tvar _canvas;\r\n\r\n\t\t//\r\n\r\n\t\tfunction clampToMaxSize( image, maxSize ) {\r\n\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t\tif ( 'data' in image ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\r\n\r\n\t\t\t\treturn canvas;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\r\n\r\n\t\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\r\n\t\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\r\n\t\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\r\n\r\n\t\t\t\tvar context = _canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\r\n\r\n\t\t\t\treturn _canvas;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) return false;\r\n\r\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\r\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\r\n\r\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\r\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateMipmap( target, texture, width, height ) {\r\n\r\n\t\t\t_gl.generateMipmap( target );\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\r\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getInternalFormat( glFormat, glType ) {\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\r\n\r\n\t\t\tif ( glFormat === _gl.RGB ) {\r\n\r\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\r\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\r\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glFormat === _gl.RGBA ) {\r\n\r\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\r\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\r\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn glFormat;\r\n\r\n\t\t}\r\n\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\r\n\t\tfunction filterFallback( f ) {\r\n\r\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\r\n\r\n\t\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn _gl.LINEAR;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction onTextureDispose( event ) {\r\n\r\n\t\t\tvar texture = event.target;\r\n\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\tdeallocateTexture( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) {\r\n\r\n\t\t\t\tdelete _videoTextures[ texture.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\t\tvar renderTarget = event.target;\r\n\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction deallocateTexture( texture ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t// cube texture\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// 2D texture\r\n\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.remove( texture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\tif ( ! renderTarget ) return;\r\n\r\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove( renderTarget.texture );\r\n\t\t\tproperties.remove( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\r\n\r\n\t\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tvar image = texture.image;\r\n\r\n\t\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\r\n\r\n\t\t\t\t} else if ( image.complete === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCube( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\r\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n\r\n\t\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\r\n\r\n\t\t\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension ) {\r\n\r\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\r\n\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n\t\t\t\timage = makePowerOfTwo( image );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif ( texture.isDepthTexture ) {\r\n\r\n\t\t\t\t// populate depth texture with dummy data\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\t\tif ( texture.type === FloatType ) {\r\n\r\n\t\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t\t} else if ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t} else if ( texture.isDataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isCompressedTexture ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\t// Render targets\r\n\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\r\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\r\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\r\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\r\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// upload an empty depth texture with framebuffer size\r\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\r\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Setup GL resources for a non-texture depth buffer\r\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n\r\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Set up GL resources for the render target\r\n\t\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\r\n\t\t\t// Setup framebuffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup color buffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup depth and stencil buffers\r\n\r\n\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n\t\t\t\tstate.bindTexture( target, webglTexture );\r\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\r\n\t\t\t\tstate.bindTexture( target, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateVideoTexture( texture ) {\r\n\r\n\t\t\tvar id = texture.id;\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\t// Check the last frame we updated the VideoTexture\r\n\r\n\t\t\tif ( _videoTextures[ id ] !== frame ) {\r\n\r\n\t\t\t\t_videoTextures[ id ] = frame;\r\n\t\t\t\ttexture.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setTexture2D = setTexture2D;\r\n\t\tthis.setTextureCube = setTextureCube;\r\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\r\n\t\tthis.setupRenderTarget = setupRenderTarget;\r\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author thespite / http://www.twitter.com/thespite\r\n\t */\r\n\r\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\r\n\r\n\t\tfunction convert( p ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\r\n\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\r\n\r\n\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\r\n\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\r\n\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\t\tif ( p === ByteType ) return gl.BYTE;\r\n\t\t\tif ( p === ShortType ) return gl.SHORT;\r\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === IntType ) return gl.INT;\r\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\r\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\r\n\r\n\t\t\tif ( p === HalfFloatType ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\r\n\r\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\r\n\t\t\tif ( p === RGBFormat ) return gl.RGB;\r\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\r\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\r\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\r\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\r\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\r\n\r\n\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\r\n\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\r\n\t\t\tif ( p === OneFactor ) return gl.ONE;\r\n\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\r\n\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\r\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\r\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\r\n\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\r\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\r\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_ETC1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\treturn p;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return gl.MIN;\r\n\t\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn { convert: convert };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Group() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Group,\r\n\r\n\t\tisGroup: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.zoom = 1;\r\n\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: PerspectiveCamera,\r\n\r\n\t\tisPerspectiveCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.fov = source.fov;\r\n\t\t\tthis.zoom = source.zoom;\r\n\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.focus = source.focus;\r\n\r\n\t\t\tthis.aspect = source.aspect;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\tthis.filmGauge = source.filmGauge;\r\n\t\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t\t *\r\n\t\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t\t * a 35mm (full frame) camera.\r\n\t\t *\r\n\t\t * Values for focal length and film gauge must have the same unit.\r\n\t\t */\r\n\t\tsetFocalLength: function ( focalLength ) {\r\n\r\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t\t */\r\n\t\tgetFocalLength: function () {\r\n\r\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t\t},\r\n\r\n\t\tgetEffectiveFOV: function () {\r\n\r\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\r\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmWidth: function () {\r\n\r\n\t\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmHeight: function () {\r\n\r\n\t\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t\t * multi-monitor/multi-machine setups.\r\n\t\t *\r\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t\t * the monitors are in grid like this\r\n\t\t *\r\n\t\t *   +---+---+---+\r\n\t\t *   | A | B | C |\r\n\t\t *   +---+---+---+\r\n\t\t *   | D | E | F |\r\n\t\t *   +---+---+---+\r\n\t\t *\r\n\t\t * then for each monitor you would call it like this\r\n\t\t *\r\n\t\t *   var w = 1920;\r\n\t\t *   var h = 1080;\r\n\t\t *   var fullWidth = w * 3;\r\n\t\t *   var fullHeight = h * 2;\r\n\t\t *\r\n\t\t *   --A--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t\t *   --B--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t\t *   --C--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t\t *   --D--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t\t *   --E--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t\t *   --F--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t\t *\r\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t\t */\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar near = this.near,\r\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n\t\t\t\theight = 2 * top,\r\n\t\t\t\twidth = this.aspect * height,\r\n\t\t\t\tleft = - 0.5 * width,\r\n\t\t\t\tview = this.view;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar fullWidth = view.fullWidth,\r\n\t\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\t\twidth *= view.width / fullWidth;\r\n\t\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar skew = this.filmOffset;\r\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.fov = this.fov;\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tdata.object.focus = this.focus;\r\n\r\n\t\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ArrayCamera( array ) {\r\n\r\n\t\tPerspectiveCamera.call( this );\r\n\r\n\t\tthis.cameras = array || [];\r\n\r\n\t}\r\n\r\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\r\n\r\n\t\tconstructor: ArrayCamera,\r\n\r\n\t\tisArrayCamera: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebVRManager( renderer ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar device = null;\r\n\t\tvar frameData = null;\r\n\r\n\t\tvar poseTarget = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar standingMatrix = new Matrix4();\r\n\t\tvar standingMatrixInverse = new Matrix4();\r\n\r\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\r\n\r\n\t\t\tframeData = new window.VRFrameData();\r\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\r\n\r\n\t\t}\r\n\r\n\t\tvar matrixWorldInverse = new Matrix4();\r\n\t\tvar tempQuaternion = new Quaternion();\r\n\t\tvar tempPosition = new Vector3();\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\r\n\t\tcameraL.layers.enable( 1 );\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\r\n\t\tcameraR.layers.enable( 2 );\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn device !== null && device.isPresenting === true;\r\n\r\n\t\t}\r\n\r\n\t\tvar currentSize, currentPixelRatio;\r\n\r\n\t\tfunction onVRDisplayPresentChange() {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\r\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\r\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\r\n\r\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\r\n\t\t\t\tcurrentSize = renderer.getSize();\r\n\r\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\r\n\r\n\t\t\t\tanimation.start();\r\n\r\n\t\t\t} else if ( scope.enabled ) {\r\n\r\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\r\n\r\n\t\t\t\tanimation.stop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar triggers = [];\r\n\r\n\t\tfunction findGamepad( id ) {\r\n\r\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\r\n\r\n\t\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar gamepad = gamepads[ i ];\r\n\r\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\r\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\r\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\r\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\r\n\r\n\t\t\t\t\tif ( j === id ) return gamepad;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateControllers() {\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar gamepad = findGamepad( i );\r\n\r\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\r\n\r\n\t\t\t\t\tif ( gamepad.pose === null ) return;\r\n\r\n\t\t\t\t\t//  Pose\r\n\r\n\t\t\t\t\tvar pose = gamepad.pose;\r\n\r\n\t\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\r\n\r\n\t\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\r\n\t\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\r\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\r\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t//  Trigger\r\n\r\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\r\n\r\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\r\n\r\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\r\n\r\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\t\tthis.userHeight = 1.6;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\r\n\t\t\tanimation.setContext( value );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPoseTarget = function ( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) poseTarget = object;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tif ( device === null ) {\r\n\r\n\t\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\r\n\t\t\t\treturn camera;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdevice.depthNear = camera.near;\r\n\t\t\tdevice.depthFar = camera.far;\r\n\r\n\t\t\tdevice.getFrameData( frameData );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar stageParameters = device.stageParameters;\r\n\r\n\t\t\tif ( stageParameters ) {\r\n\r\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar pose = frameData.pose;\r\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\r\n\r\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\r\n\t\t\tposeObject.matrix.copy( standingMatrix );\r\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\r\n\r\n\t\t\tif ( pose.orientation !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\r\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pose.position !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\r\n\t\t\t\ttempPosition.fromArray( pose.position );\r\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\r\n\t\t\t\tposeObject.position.add( tempPosition );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposeObject.updateMatrixWorld();\r\n\r\n\t\t\tif ( device.isPresenting === false ) return camera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcameraL.near = camera.near;\r\n\t\t\tcameraR.near = camera.near;\r\n\r\n\t\t\tcameraL.far = camera.far;\r\n\t\t\tcameraR.far = camera.far;\r\n\r\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\r\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\r\n\r\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\r\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\r\n\r\n\t\t\t// TODO (mrdoob) Double check this code\r\n\r\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\r\n\r\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\r\n\t\t\tvar parent = poseObject.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\r\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// envMap and Mirror needs camera.matrixWorld\r\n\r\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\r\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\r\n\r\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\r\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\r\n\r\n\t\t\t// HACK (mrdoob)\r\n\t\t\t// https://github.com/w3c/webvr/issues/203\r\n\r\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar layers = device.getLayers();\r\n\r\n\t\t\tif ( layers.length ) {\r\n\r\n\t\t\t\tvar layer = layers[ 0 ];\r\n\r\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateControllers();\r\n\r\n\t\t\treturn cameraVR;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\treturn standingMatrix;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tanimation.setAnimationLoop( callback );\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {\r\n\r\n\t\t\tif ( isPresenting() ) device.submitFrame();\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tif ( typeof window !== 'undefined' ) {\r\n\r\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebXRManager( renderer ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar device = null;\r\n\t\tvar session = null;\r\n\r\n\t\tvar frameOfRef = null;\r\n\r\n\t\tvar pose = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar inputSources = [];\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn session !== null && frameOfRef !== null;\r\n\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.layers.enable( 1 );\r\n\t\tcameraL.viewport = new Vector4();\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.layers.enable( 2 );\r\n\t\tcameraR.viewport = new Vector4();\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\t\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tfunction onSessionEvent( event ) {\r\n\r\n\t\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\r\n\t\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onSessionEnd() {\r\n\r\n\t\t\trenderer.setFramebuffer( null );\r\n\t\t\tanimation.stop();\r\n\r\n\t\t}\r\n\r\n\t\tthis.setSession = function ( value, options ) {\r\n\r\n\t\t\tsession = value;\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\r\n\r\n\t\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\r\n\t\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\r\n\r\n\t\t\t\t\tframeOfRef = value;\r\n\r\n\t\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\r\n\r\n\t\t\t\t\tanimation.setContext( session );\r\n\t\t\t\t\tanimation.start();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinputSources = session.getInputSources();\r\n\r\n\t\t\t\tsession.addEventListener( 'inputsourceschange', function () {\r\n\r\n\t\t\t\t\tinputSources = session.getInputSources();\r\n\t\t\t\t\tconsole.log( inputSources );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction updateCamera( camera, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar parent = camera.parent;\r\n\t\t\t\tvar cameras = cameraVR.cameras;\r\n\r\n\t\t\t\t// apply camera.parent to cameraVR\r\n\r\n\t\t\t\tupdateCamera( cameraVR, parent );\r\n\r\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\r\n\r\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update camera and its children\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\r\n\r\n\t\t\t\tvar children = camera.children;\r\n\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn cameraVR;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn camera;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tpose = frame.getDevicePose( frameOfRef );\r\n\r\n\t\t\tif ( pose !== null ) {\r\n\r\n\t\t\t\tvar layer = session.baseLayer;\r\n\t\t\t\tvar views = frame.views;\r\n\r\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar view = views[ i ];\r\n\t\t\t\t\tvar viewport = layer.getViewport( view );\r\n\t\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\r\n\r\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\r\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\r\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\r\n\r\n\t\t\t\t\t\t// HACK (mrdoob)\r\n\t\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\r\n\r\n\t\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar inputSource = inputSources[ i ];\r\n\r\n\t\t\t\tif ( inputSource ) {\r\n\r\n\t\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\r\n\r\n\t\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\t\tif ( 'targetRay' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\r\n\r\n\t\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\t// DEPRECATED\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\r\n\t\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\r\n\t\t\treturn new THREE.Matrix4();\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLRenderer( parameters ) {\r\n\r\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\r\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\r\n\r\n\t\tvar currentRenderList = null;\r\n\t\tvar currentRenderState = null;\r\n\r\n\t\t// public properties\r\n\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\r\n\t\t// clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\r\n\t\t// scene graph\r\n\r\n\t\tthis.sortObjects = true;\r\n\r\n\t\t// user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false;\r\n\r\n\t\t// physically based shading\r\n\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\r\n\t\t// physical lights\r\n\r\n\t\tthis.physicallyCorrectLights = false;\r\n\r\n\t\t// tone mapping\r\n\r\n\t\tthis.toneMapping = LinearToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\t\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\r\n\t\t// internal properties\r\n\r\n\t\tvar _this = this,\r\n\r\n\t\t\t_isContextLost = false,\r\n\r\n\t\t\t// internal state cache\r\n\r\n\t\t\t_framebuffer = null,\r\n\r\n\t\t\t_currentRenderTarget = null,\r\n\t\t\t_currentFramebuffer = null,\r\n\t\t\t_currentMaterialId = - 1,\r\n\r\n\t\t\t// geometry and program caching\r\n\r\n\t\t\t_currentGeometryProgram = {\r\n\t\t\t\tgeometry: null,\r\n\t\t\t\tprogram: null,\r\n\t\t\t\twireframe: false\r\n\t\t\t},\r\n\r\n\t\t\t_currentCamera = null,\r\n\t\t\t_currentArrayCamera = null,\r\n\r\n\t\t\t_currentViewport = new Vector4(),\r\n\t\t\t_currentScissor = new Vector4(),\r\n\t\t\t_currentScissorTest = null,\r\n\r\n\t\t\t//\r\n\r\n\t\t\t_usedTextureUnits = 0,\r\n\r\n\t\t\t//\r\n\r\n\t\t\t_width = _canvas.width,\r\n\t\t\t_height = _canvas.height,\r\n\r\n\t\t\t_pixelRatio = 1,\r\n\r\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissorTest = false,\r\n\r\n\t\t\t// frustum\r\n\r\n\t\t\t_frustum = new Frustum(),\r\n\r\n\t\t\t// clipping\r\n\r\n\t\t\t_clipping = new WebGLClipping(),\r\n\t\t\t_clippingEnabled = false,\r\n\t\t\t_localClippingEnabled = false,\r\n\r\n\t\t\t// camera matrices cache\r\n\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_vector3 = new Vector3();\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\r\n\t\tvar _gl;\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar contextAttributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t\tpowerPreference: _powerPreference\r\n\t\t\t};\r\n\r\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\r\n\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\r\n\r\n\t\t}\r\n\r\n\t\tvar extensions, capabilities, state, info;\r\n\t\tvar properties, textures, attributes, geometries, objects;\r\n\t\tvar programCache, renderLists, renderStates;\r\n\r\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\r\n\t\tvar utils;\r\n\r\n\t\tfunction initGLContext() {\r\n\r\n\t\t\textensions = new WebGLExtensions( _gl );\r\n\r\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\r\n\t\t\t\textensions.get( 'OES_texture_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\t\t\textensions.get( 'OES_element_index_uint' );\r\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\textensions.get( 'OES_texture_float_linear' );\r\n\r\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\r\n\r\n\t\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\tinfo = new WebGLInfo( _gl );\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t\tattributes = new WebGLAttributes( _gl );\r\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\r\n\t\t\tobjects = new WebGLObjects( geometries, info );\r\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\r\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\r\n\t\t\trenderLists = new WebGLRenderLists();\r\n\t\t\trenderStates = new WebGLRenderStates();\r\n\r\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\r\n\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\r\n\r\n\t\t\tinfo.programs = programCache.programs;\r\n\r\n\t\t\t_this.context = _gl;\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\r\n\t\t}\r\n\r\n\t\tinitGLContext();\r\n\r\n\t\t// vr\r\n\r\n\t\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\r\n\r\n\t\tthis.vr = vr;\r\n\r\n\t\t// shadow map\r\n\r\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\r\n\r\n\t\tthis.shadowMap = shadowMap;\r\n\r\n\t\t// API\r\n\r\n\t\tthis.getContext = function () {\r\n\r\n\t\t\treturn _gl;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\r\n\t\t\treturn _gl.getContextAttributes();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.loseContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.restoreContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\r\n\t\t\treturn _pixelRatio;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\t\tif ( value === undefined ) return;\r\n\r\n\t\t\t_pixelRatio = value;\r\n\r\n\t\t\tthis.setSize( _width, _height, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getSize = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_canvas.width = width * _pixelRatio;\r\n\t\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width * _pixelRatio,\r\n\t\t\t\theight: _height * _pixelRatio\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function () {\r\n\r\n\t\t\treturn _currentViewport;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t\t_viewport.set( x, _height - y - height, width, height );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t\t_scissor.set( x, _height - y - height, width, height );\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t\t};\r\n\r\n\t\t// Clearing\r\n\r\n\t\tthis.getClearColor = function () {\r\n\r\n\t\t\treturn background.getClearColor();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\r\n\t\t\tbackground.setClearColor.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\r\n\t\t\treturn background.getClearAlpha();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\r\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\t\tvar bits = 0;\r\n\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t_gl.clear( bits );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\r\n\t\t\tthis.clear( true, false, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\r\n\t\t\tthis.clear( false, true, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\r\n\t\t\tthis.clear( false, false, true );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tobjects.dispose();\r\n\r\n\t\t\tvr.dispose();\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t};\r\n\r\n\t\t// Events\r\n\r\n\t\tfunction onContextLost( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\r\n\r\n\t\t\t_isContextLost = true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore( /* event */ ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\r\n\r\n\t\t\t_isContextLost = false;\r\n\r\n\t\t\tinitGLContext();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose( event ) {\r\n\r\n\t\t\tvar material = event.target;\r\n\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\tdeallocateMaterial( material );\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer deallocation\r\n\r\n\t\tfunction deallocateMaterial( material ) {\r\n\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\tproperties.remove( material );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\t\tmaterial.program = undefined;\r\n\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer rendering\r\n\r\n\t\tfunction renderObjectImmediate( object, program ) {\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderBufferImmediate = function ( object, program ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar buffers = properties.get( object );\r\n\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasUvs ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasColors ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.color );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\t\tobject.count = 0;\r\n\r\n\t\t};\r\n\r\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\r\n\r\n\t\t\tstate.setMaterial( material, frontFaceCW );\r\n\r\n\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\tvar updateBuffers = false;\r\n\r\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\r\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\r\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\r\n\t\t\t\t_currentGeometryProgram.program = program.id;\r\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.morphTargetInfluences ) {\r\n\r\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\r\n\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\t\tvar rangeFactor = 1;\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\r\n\t\t\t\trangeFactor = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\t\t\tvar renderer = bufferRenderer;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattribute = attributes.get( index );\r\n\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar dataCount = Infinity;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdataCount = index.count;\r\n\r\n\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\tdataCount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\r\n\r\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\r\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\r\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\t\tcase TrianglesDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleStripDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleFanDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else if ( object.isLine ) {\r\n\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\t\tif ( object.isLineSegments ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else if ( object.isLineLoop ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isPoints ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\r\n\r\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction setupVertexAttributes( material, program, geometry ) {\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\r\n\r\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\r\n\r\n\t\t\t\t\t\tvar buffer = attribute.buffer;\r\n\t\t\t\t\t\tvar type = attribute.type;\r\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// Compile\r\n\r\n\t\tthis.compile = function ( scene, camera ) {\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.material ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) return;\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tif ( typeof window !== 'undefined' ) animation.setContext( window );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\tvr.setAnimationLoop( callback );\r\n\r\n\t\t\tanimation.start();\r\n\r\n\t\t};\r\n\r\n\t\t// Rendering\r\n\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _isContextLost ) return;\r\n\r\n\t\t\t// reset caching for this frame\r\n\r\n\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t_currentGeometryProgram.wireframe = false;\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tcamera = vr.getCamera( camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\r\n\t\t\tcurrentRenderList.init();\r\n\r\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\r\n\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\tcurrentRenderList.sort();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.info.autoReset ) this.info.reset();\r\n\r\n\t\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\t\trenderTarget = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\r\n\r\n\t\t\t// render scene\r\n\r\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\r\n\t\t\tvar transparentObjects = currentRenderList.transparent;\r\n\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\r\n\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\tstate.setPolygonOffset( false );\r\n\r\n\t\t\tscene.onAfterRender( _this, scene, camera );\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tvr.submitFrame();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// _gl.finish();\r\n\r\n\t\t\tcurrentRenderList = null;\r\n\t\t\tcurrentRenderState = null;\r\n\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t// TODO Duplicated code (Frustum)\r\n\r\n\t\tvar _sphere = new Sphere();\r\n\r\n\t\tfunction isObjectViewable( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy( geometry.boundingSphere ).\r\n\t\t\tapplyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn isSphereViewable( _sphere );\r\n\r\n\t\t}\r\n\r\n\t\tfunction isSpriteViewable( sprite ) {\r\n\r\n\t\t\t_sphere.center.set( 0, 0, 0 );\r\n\t\t\t_sphere.radius = 0.7071067811865476;\r\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\treturn isSphereViewable( _sphere );\r\n\r\n\t\t}\r\n\r\n\t\tfunction isSphereViewable( sphere ) {\r\n\r\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\r\n\r\n\t\t\tvar numPlanes = _clipping.numPlanes;\r\n\r\n\t\t\tif ( numPlanes === 0 ) return true;\r\n\r\n\t\t\tvar planes = _this.clippingPlanes,\r\n\r\n\t\t\t\tcenter = sphere.center,\r\n\t\t\t\tnegRad = - sphere.radius,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\t// out when deeper than radius in the negative halfspace\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\r\n\r\n\t\t\t} while ( ++ i !== numPlanes );\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tfunction projectObject( object, camera, sortObjects ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible ) {\r\n\r\n\t\t\t\tif ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\r\n\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\t\tif ( camera.isArrayCamera ) {\r\n\r\n\t\t\t\t\t_currentArrayCamera = camera;\r\n\r\n\t\t\t\t\tvar cameras = camera.cameras;\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\r\n\r\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tvar bounds = camera2.bounds;\r\n\r\n\t\t\t\t\t\t\t\tvar x = bounds.x * _width;\r\n\t\t\t\t\t\t\t\tvar y = bounds.y * _height;\r\n\t\t\t\t\t\t\t\tvar width = bounds.z * _width;\r\n\t\t\t\t\t\t\t\tvar height = bounds.w * _height;\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\r\n\r\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_currentArrayCamera = null;\r\n\r\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\tstate.setMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t\t_currentGeometryProgram.wireframe = false;\r\n\r\n\t\t\t\trenderObjectImmediate( object, program );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t}\r\n\r\n\t\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tvar parameters = programCache.getParameters(\r\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\r\n\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\r\n\r\n\t\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( programChange ) {\r\n\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\r\n\r\n\t\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\r\n\t\t\t\tcode = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\r\n\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( ! material.isShaderMaterial &&\r\n\t\t\t\t! material.isRawShaderMaterial ||\r\n\t\t\t\tmaterial.clipping === true ) {\r\n\r\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\r\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.fog = fog;\r\n\r\n\t\t\t// store the light setup it was created for\r\n\t\t\tif ( lightsHash === undefined ) {\r\n\r\n\t\t\t\tmaterialProperties.lightsHash = lightsHash = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n\t\t\t\tuniformsList =\r\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n\t\t\tmaterialProperties.uniformsList = uniformsList;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t\t_usedTextureUnits = 0;\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tif ( _clippingEnabled ) {\r\n\r\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n\t\t\t\t\tvar useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t\t_clipping.setState(\r\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\r\n\t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate === false ) {\r\n\r\n\t\t\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\r\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\t\tinitMaterial( material, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( state.useProgram( program.program ) ) {\r\n\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\t\trefreshMaterial = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _currentCamera !== camera ) {\r\n\r\n\t\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\t\tif ( material.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.envMap ) {\r\n\r\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\t\tuCamPos.setValue( _gl,\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\r\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.skinning ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\t\tif ( material.skinning ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\t\tvar skeleton = object.skeleton;\r\n\r\n\t\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\r\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\r\n\r\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\r\n\r\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\t\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\r\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\r\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\r\n\r\n\t\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isShadowMaterial ) {\r\n\r\n\t\t\t\t\tm_uniforms.color.value = material.color;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RectAreaLight Texture\r\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\r\n\r\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\r\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// common matrices\r\n\r\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\r\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\tif ( material.color ) {\r\n\r\n\t\t\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissive ) {\r\n\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.specularMap ) {\r\n\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\r\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\r\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\r\n\r\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.lightMap ) {\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.aoMap ) {\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\r\n\t\t\tvar uvScaleMap;\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\t\tuniforms.scale.value = _height * 0.5;\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.rotation.value = material.rotation;\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\r\n\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\t\tif ( fog.isFog ) {\r\n\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t\t} else if ( fog.isFogExp2 ) {\r\n\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsToon( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsPhong( uniforms, material );\r\n\r\n\t\t\tif ( material.gradientMap ) {\r\n\r\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\r\n\r\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\r\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\r\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\r\n\t\t\tuniforms.farDistance.value = material.farDistance;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t\t}\r\n\r\n\t\t// Textures\r\n\r\n\t\tfunction allocTextureUnit() {\r\n\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_usedTextureUnits += 1;\r\n\r\n\t\t\treturn textureUnit;\r\n\r\n\t\t}\r\n\r\n\t\tthis.allocTextureUnit = allocTextureUnit;\r\n\r\n\t\t// this.setTexture2D = setTexture2D;\r\n\t\tthis.setTexture2D = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\treturn function setTexture2D( texture, slot ) {\r\n\r\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\tthis.setTexture = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\treturn function setTexture( texture, slot ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\tthis.setTextureCube = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\treturn function setTextureCube( texture, slot ) {\r\n\r\n\t\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n\t\t\t\t// TODO: unify these code paths\r\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\r\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t// this function alone should take care of cube textures\r\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\r\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\t//\r\n\r\n\t\tthis.setFramebuffer = function ( value ) {\r\n\r\n\t\t\t_framebuffer = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn _currentRenderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = _framebuffer;\r\n\t\t\tvar isCube = false;\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\t\t\t\tisCube = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tvar restore = false;\r\n\r\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t\trestore = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar texture = renderTarget.texture;\r\n\t\t\t\t\tvar textureFormat = texture.format;\r\n\t\t\t\t\tvar textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\r\n\r\n\t\t\tvar width = texture.image.width;\r\n\t\t\tvar height = texture.image.height;\r\n\t\t\tvar glFormat = utils.convert( texture.format );\r\n\r\n\t\t\tthis.setTexture2D( texture, 0 );\r\n\r\n\t\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\r\n\r\n\t\t\tvar width = srcTexture.image.width;\r\n\t\t\tvar height = srcTexture.image.height;\r\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\r\n\t\t\tvar glType = utils.convert( dstTexture.type );\r\n\r\n\t\t\tthis.setTexture2D( dstTexture, 0 );\r\n\r\n\t\t\tif ( srcTexture.isDataTexture ) {\r\n\r\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction FogExp2( color, density ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n\t}\r\n\r\n\tFogExp2.prototype.isFogExp2 = true;\r\n\r\n\tFogExp2.prototype.clone = function () {\r\n\r\n\t\treturn new FogExp2( this.color, this.density );\r\n\r\n\t};\r\n\r\n\tFogExp2.prototype.toJSON = function ( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'FogExp2',\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tdensity: this.density\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Fog( color, near, far ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n\t}\r\n\r\n\tFog.prototype.isFog = true;\r\n\r\n\tFog.prototype.clone = function () {\r\n\r\n\t\treturn new Fog( this.color, this.near, this.far );\r\n\r\n\t};\r\n\r\n\tFog.prototype.toJSON = function ( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'Fog',\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tnear: this.near,\r\n\t\t\tfar: this.far\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Scene() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\tthis.background = null;\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n\t}\r\n\r\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Scene,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\r\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBuffer( array, stride ) {\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBuffer.prototype, {\r\n\r\n\t\tisInterleavedBuffer: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\r\n\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tcount: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tarray: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tisInterleavedBufferAttribute: true,\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *  rotation: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction SpriteMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'SpriteMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\r\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\r\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n\tSpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar geometry;\r\n\r\n\tfunction Sprite( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\r\n\t\t\tvar float32Array = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\r\n\t\t\t] );\r\n\r\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n\r\n\t\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\r\n\r\n\t\tthis.center = new Vector2( 0.5, 0.5 );\r\n\r\n\t}\r\n\r\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Sprite,\r\n\r\n\t\tisSprite: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar intersectPoint = new Vector3();\r\n\t\t\tvar worldScale = new Vector3();\r\n\t\t\tvar mvPosition = new Vector3();\r\n\r\n\t\t\tvar alignedPosition = new Vector2();\r\n\t\t\tvar rotatedPosition = new Vector2();\r\n\t\t\tvar viewWorldMatrix = new Matrix4();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n\r\n\t\t\t\t// compute position in camera space\r\n\t\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n\r\n\t\t\t\t// to check if rotation is not zero\r\n\t\t\t\tif ( sin !== undefined ) {\r\n\r\n\t\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\r\n\t\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trotatedPosition.copy( alignedPosition );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvertexPosition.copy( mvPosition );\r\n\t\t\t\tvertexPosition.x += rotatedPosition.x;\r\n\t\t\t\tvertexPosition.y += rotatedPosition.y;\r\n\r\n\t\t\t\t// transform to world space\r\n\t\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\r\n\t\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\r\n\t\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n\r\n\t\t\t\tvar rotation = this.material.rotation;\r\n\t\t\t\tvar sin, cos;\r\n\t\t\t\tif ( rotation !== 0 ) {\r\n\r\n\t\t\t\t\tcos = Math.cos( rotation );\r\n\t\t\t\t\tsin = Math.sin( rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\r\n\t\t\t\t// check first triangle\r\n\t\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\r\n\r\n\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t// check second triangle\r\n\t\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\r\n\t\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LOD() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: LOD,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, false );\r\n\r\n\t\t\tvar levels = source.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddLevel: function ( object, distance ) {\r\n\r\n\t\t\tif ( distance === undefined ) distance = 0;\r\n\r\n\t\t\tdistance = Math.abs( distance );\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\t\tthis.add( object );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectForDistance: function ( distance ) {\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar matrixPosition = new Vector3();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar levels = this.levels;\r\n\r\n\t\t\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.levels = [];\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tdata.object.levels.push( {\r\n\t\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\t\tdistance: level.distance\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Skeleton( bones, boneInverses ) {\r\n\r\n\t\t// copy the bone array\r\n\r\n\t\tbones = bones || [];\r\n\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\r\n\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\t\tif ( boneInverses === undefined ) {\r\n\r\n\t\t\tthis.calculateInverses();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\r\n\r\n\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Skeleton.prototype, {\r\n\r\n\t\tcalculateInverses: function () {\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar inverse = new Matrix4();\r\n\r\n\t\t\t\tif ( this.bones[ i ] ) {\r\n\r\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tvar bone, i, il;\r\n\r\n\t\t\t// recover the bind-time world matrices\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar offsetMatrix = new Matrix4();\r\n\t\t\tvar identityMatrix = new Matrix4();\r\n\r\n\t\t\treturn function update() {\r\n\r\n\t\t\t\tvar bones = this.bones;\r\n\t\t\t\tvar boneInverses = this.boneInverses;\r\n\t\t\t\tvar boneMatrices = this.boneMatrices;\r\n\t\t\t\tvar boneTexture = this.boneTexture;\r\n\r\n\t\t\t\t// flatten bone matrices to array\r\n\r\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\r\n\r\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\r\n\r\n\t\t},\r\n\r\n\t\tgetBoneByName: function ( name ) {\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar bone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone.name === name ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Bone() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Bone';\r\n\r\n\t}\r\n\r\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Bone,\r\n\r\n\t\tisBone: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction SkinnedMesh( geometry, material ) {\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'SkinnedMesh';\r\n\r\n\t\tthis.bindMode = 'attached';\r\n\t\tthis.bindMatrix = new Matrix4();\r\n\t\tthis.bindMatrixInverse = new Matrix4();\r\n\r\n\t\tvar bones = this.initBones();\r\n\t\tvar skeleton = new Skeleton( bones );\r\n\r\n\t\tthis.bind( skeleton, this.matrixWorld );\r\n\r\n\t\tthis.normalizeSkinWeights();\r\n\r\n\t}\r\n\r\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\t\tconstructor: SkinnedMesh,\r\n\r\n\t\tisSkinnedMesh: true,\r\n\r\n\t\tinitBones: function () {\r\n\r\n\t\t\tvar bones = [], bone, gbone;\r\n\t\t\tvar i, il;\r\n\r\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\r\n\r\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\r\n\r\n\t\t\t\t\t// create new 'Bone' object\r\n\r\n\t\t\t\t\tbone = new Bone();\r\n\t\t\t\t\tbones.push( bone );\r\n\r\n\t\t\t\t\t// apply values\r\n\r\n\t\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// second, create bone hierarchy\r\n\r\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\r\n\r\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\r\n\r\n\t\t\t\t\t\t// subsequent bones in the hierarchy\r\n\r\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\r\n\r\n\t\t\t\t\t\tthis.add( bones[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\r\n\t\t\t// let's update the corresponding matrices\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\treturn bones;\r\n\r\n\t\t},\r\n\r\n\t\tbind: function ( skeleton, bindMatrix ) {\r\n\r\n\t\t\tthis.skeleton = skeleton;\r\n\r\n\t\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tthis.skeleton.pose();\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeSkinWeights: function () {\r\n\r\n\t\t\tvar scale, i;\r\n\r\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\r\n\r\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\t\t\tscale = 1.0 / sw.manhattanLength();\r\n\r\n\t\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar vec = new Vector4();\r\n\r\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n\t\t\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n\t\t\t\t\tscale = 1.0 / vec.manhattanLength();\r\n\r\n\t\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tif ( this.bindMode === 'attached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t\t} else if ( this.bindMode === 'detached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\"\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\r\n\r\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n\tLineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Line( geometry, material, mode ) {\r\n\r\n\t\tif ( mode === 1 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Line';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Line,\r\n\r\n\t\tisLine: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [ 0 ];\r\n\r\n\t\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tlineDistances[ 0 ] = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\t\tvar precisionSq = precision * precision;\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar vStart = new Vector3();\r\n\t\t\t\tvar vEnd = new Vector3();\r\n\t\t\t\tvar interSegment = new Vector3();\r\n\t\t\t\tvar interRay = new Vector3();\r\n\t\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LineSegments( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineSegments';\r\n\r\n\t}\r\n\r\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineSegments,\r\n\r\n\t\tisLineSegments: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\tstart.copy( vertices[ i ] );\r\n\t\t\t\t\t\tend.copy( vertices[ i + 1 ] );\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() )\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mgreter / http://github.com/mgreter\r\n\t */\r\n\r\n\tfunction LineLoop( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineLoop';\r\n\r\n\t}\r\n\r\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineLoop,\r\n\r\n\t\tisLineLoop: true,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t *\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction PointsMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'PointsMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tPointsMaterial.prototype = Object.create( Material.prototype );\r\n\tPointsMaterial.prototype.constructor = PointsMaterial;\r\n\r\n\tPointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n\tPointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Points( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Points';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Points,\r\n\r\n\t\tisPoints: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar object = this;\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\t\t\tsphere.radius += threshold;\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\t\tvar position = new Vector3();\r\n\t\t\t\tvar intersectPoint = new Vector3();\r\n\r\n\t\t\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\r\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\r\n\r\n\t\tconstructor: VideoTexture,\r\n\r\n\t\tisVideoTexture: true,\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar video = this.image;\r\n\r\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\r\n\tCompressedTexture.prototype.constructor = CompressedTexture;\r\n\r\n\tCompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\r\n\tCanvasTexture.prototype.constructor = CanvasTexture;\r\n\tCanvasTexture.prototype.isCanvasTexture = true;\r\n\r\n\t/**\r\n\t * @author Matt DesLauriers / @mattdesl\r\n\t * @author atix / arthursilber.de\r\n\t */\r\n\r\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\r\n\r\n\t\tformat = format !== undefined ? format : DepthFormat;\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\r\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps\t= false;\r\n\r\n\t}\r\n\r\n\tDepthTexture.prototype = Object.create( Texture.prototype );\r\n\tDepthTexture.prototype.constructor = DepthTexture;\r\n\tDepthTexture.prototype.isDepthTexture = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WireframeGeometry( geometry ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j, l, o, ol;\r\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\t\tvar vertex;\r\n\r\n\t\t// different logic for Geometry and BufferGeometry\r\n\r\n\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t// create a data structure that contains all edges without duplicates\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate vertices\r\n\r\n\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\tvar position, indices, groups;\r\n\t\t\tvar group, start, count;\r\n\t\t\tvar index1, index2;\r\n\r\n\t\t\tvertex = new Vector3();\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t// indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\t\t\t\tindices = geometry.index;\r\n\t\t\t\tgroups = geometry.groups;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a data structure that contains all eges without duplicates\r\n\r\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\t\tgroup = groups[ o ];\r\n\r\n\t\t\t\t\tstart = group.start;\r\n\t\t\t\t\tcount = group.count;\r\n\r\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\r\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// generate vertices\r\n\r\n\t\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\r\n\t\t\t\t\t\tindex1 = 3 * i + j;\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\r\n\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t */\r\n\r\n\t// ParametricGeometry\r\n\r\n\tfunction ParametricGeometry( func, slices, stacks ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\r\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\r\n\r\n\t// ParametricBufferGeometry\r\n\r\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\tvar EPS = 0.00001;\r\n\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\r\n\t\tvar pu = new Vector3(), pv = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tif ( func.length < 3 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tvar sliceCount = slices + 1;\r\n\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\t\tvar v = i / stacks;\r\n\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\t\tvar u = j / slices;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tfunc( u, v, p0 );\r\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\t// approximate tangent vectors via finite differences\r\n\r\n\t\t\t\tif ( u - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u - EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u + EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( v - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u, v - EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u, v + EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// cross product of tangent vectors returns surface normal\r\n\r\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u, v );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\t\tvar a = i * sliceCount + j;\r\n\t\t\t\tvar b = i * sliceCount + j + 1;\r\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\t\t// faces one and two\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\r\n\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PolyhedronGeometry\r\n\r\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\r\n\r\n\t// PolyhedronBufferGeometry\r\n\r\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\r\n\t\t// default buffer data\r\n\r\n\t\tvar vertexBuffer = [];\r\n\t\tvar uvBuffer = [];\r\n\r\n\t\t// the subdivision creates the vertex buffer data\r\n\r\n\t\tsubdivide( detail );\r\n\r\n\t\t// all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\tappplyRadius( radius );\r\n\r\n\t\t// finally, create the uv data\r\n\r\n\t\tgenerateUVs();\r\n\r\n\t\t// build non-indexed geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n\r\n\t\tif ( detail === 0 ) {\r\n\r\n\t\t\tthis.computeVertexNormals(); // flat normals\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.normalizeNormals(); // smooth normals\r\n\r\n\t\t}\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction subdivide( detail ) {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\r\n\r\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t// get the vertices of the face\r\n\r\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\r\n\r\n\t\t\t\t// perform subdivision\r\n\r\n\t\t\t\tsubdivideFace( a, b, c, detail );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction subdivideFace( a, b, c, detail ) {\r\n\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\r\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\tvar v = [];\r\n\r\n\t\t\tvar i, j;\r\n\r\n\t\t\t// construct all of the vertices for this subdivision\r\n\r\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\r\n\r\n\t\t\t\tv[ i ] = [];\r\n\r\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\r\n\r\n\t\t\t\tvar rows = cols - i;\r\n\r\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// construct all of the faces\r\n\r\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction appplyRadius( radius ) {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\r\n\r\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\tuvBuffer.push( u, 1 - v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcorrectUVs();\r\n\r\n\t\t\tcorrectSeam();\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctSeam() {\r\n\r\n\t\t\t// handle case when face straddles the seam, see #3269\r\n\r\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\r\n\r\n\t\t\t\t// uv data of a single face\r\n\r\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\r\n\r\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( vertex ) {\r\n\r\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVertexByIndex( index, vertex ) {\r\n\r\n\t\t\tvar stride = index * 3;\r\n\r\n\t\t\tvertex.x = vertices[ stride + 0 ];\r\n\t\t\tvertex.y = vertices[ stride + 1 ];\r\n\t\t\tvertex.z = vertices[ stride + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUVs() {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\tvar centroid = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n\r\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n\r\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n\r\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n\r\n\t\t\t\tvar azi = azimuth( centroid );\r\n\r\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\r\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\r\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\r\n\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\t\tfunction azimuth( vector ) {\r\n\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Angle above the XZ plane.\r\n\r\n\t\tfunction inclination( vector ) {\r\n\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TetrahedronGeometry\r\n\r\n\tfunction TetrahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\r\n\r\n\t// TetrahedronBufferGeometry\r\n\r\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// OctahedronGeometry\r\n\r\n\tfunction OctahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\r\n\r\n\t// OctahedronBufferGeometry\r\n\r\n\tfunction OctahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t1, 3, 4,\t1, 4, 2\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'OctahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// IcosahedronGeometry\r\n\r\n\tfunction IcosahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\r\n\r\n\t// IcosahedronBufferGeometry\r\n\r\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'IcosahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// DodecahedronGeometry\r\n\r\n\tfunction DodecahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\r\n\r\n\t// DodecahedronBufferGeometry\r\n\r\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\r\n\t\tvar vertices = [\r\n\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t1, 1, - 1, 1, 1, 1,\r\n\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t, 0, - r, t,\r\n\t\t\t 0, r, - t, 0, r, t,\r\n\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t, 0, - r, t, 0,\r\n\t\t\t r, - t, 0, r, t, 0,\r\n\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t, 0, - r, t, 0, - r,\r\n\t\t\t- t, 0, r, t, 0, r\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'DodecahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t */\r\n\r\n\t// TubeGeometry\r\n\r\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\r\n\r\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = bufferGeometry.tangents;\r\n\t\tthis.normals = bufferGeometry.normals;\r\n\t\tthis.binormals = bufferGeometry.binormals;\r\n\r\n\t\t// create geometry\r\n\r\n\t\tthis.fromBufferGeometry( bufferGeometry );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTubeGeometry.prototype.constructor = TubeGeometry;\r\n\r\n\t// TubeBufferGeometry\r\n\r\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\ttubularSegments = tubularSegments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\r\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = frames.tangents;\r\n\t\tthis.normals = frames.normals;\r\n\t\tthis.binormals = frames.binormals;\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar P = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\t\tvar indices = [];\r\n\r\n\t\t// create buffer data\r\n\r\n\t\tgenerateBufferData();\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction generateBufferData() {\r\n\r\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tgenerateSegment( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t// at the regular position on the given path\r\n\t\t\t//\r\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n\r\n\t\t\t// uvs are generated in a separate function.\r\n\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\tgenerateUVs();\r\n\r\n\t\t\t// finally create faces\r\n\r\n\t\t\tgenerateIndices();\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateSegment( i ) {\r\n\r\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\r\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\r\n\r\n\t\t\t// retrieve corresponding normal and binormal\r\n\r\n\t\t\tvar N = frames.normals[ i ];\r\n\t\t\tvar B = frames.binormals[ i ];\r\n\r\n\t\t\t// generate normals and vertices for the current segment\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\tvar sin = Math.sin( v );\r\n\t\t\t\tvar cos = - Math.cos( v );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateIndices() {\r\n\r\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\tuv.y = j / radialSegments;\r\n\r\n\t\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * based on http://www.blackpawn.com/texts/pqtorus/\r\n\t */\r\n\r\n\t// TorusKnotGeometry\r\n\r\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\r\n\r\n\t// TorusKnotBufferGeometry\r\n\r\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar P1 = new Vector3();\r\n\t\tvar P2 = new Vector3();\r\n\r\n\t\tvar B = new Vector3();\r\n\t\tvar T = new Vector3();\r\n\t\tvar N = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t\t// calculate orthonormal basis\r\n\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// this function calculates the current position on the torus curve\r\n\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = q / p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TorusGeometry\r\n\r\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusGeometry.prototype.constructor = TorusGeometry;\r\n\r\n\t// TorusBufferGeometry\r\n\r\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar center = new Vector3();\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n\t */\r\n\r\n\tvar Earcut = {\r\n\r\n\t\ttriangulate: function ( data, holeIndices, dim ) {\r\n\r\n\t\t\tdim = dim || 2;\r\n\r\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\r\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\r\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\r\n\t\t\t\ttriangles = [];\r\n\r\n\t\t\tif ( ! outerNode ) return triangles;\r\n\r\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n\r\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n\t\t\tif ( data.length > 80 * dim ) {\r\n\r\n\t\t\t\tminX = maxX = data[ 0 ];\r\n\t\t\t\tminY = maxY = data[ 1 ];\r\n\r\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\r\n\r\n\t\t\t\t\tx = data[ i ];\r\n\t\t\t\t\ty = data[ i + 1 ];\r\n\t\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\t\tif ( y > maxY ) maxY = y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\treturn triangles;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n\tfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n\t\tvar i, last;\r\n\r\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t}\r\n\r\n\t\tif ( last && equals( last, last.next ) ) {\r\n\r\n\t\t\tremoveNode( last );\r\n\t\t\tlast = last.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn last;\r\n\r\n\t}\r\n\r\n\t// eliminate colinear or duplicate points\r\n\r\n\tfunction filterPoints( start, end ) {\r\n\r\n\t\tif ( ! start ) return start;\r\n\t\tif ( ! end ) end = start;\r\n\r\n\t\tvar p = start, again;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tagain = false;\r\n\r\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tp = end = p.prev;\r\n\t\t\t\tif ( p === p.next ) break;\r\n\t\t\t\tagain = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp = p.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t} while ( again || p !== end );\r\n\r\n\t\treturn end;\r\n\r\n\t}\r\n\r\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n\r\n\t\tif ( ! ear ) return;\r\n\r\n\t\t// interlink polygon nodes in z-order\r\n\r\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n\r\n\t\tvar stop = ear, prev, next;\r\n\r\n\t\t// iterate through ears, slicing them one by one\r\n\r\n\t\twhile ( ear.prev !== ear.next ) {\r\n\r\n\t\t\tprev = ear.prev;\r\n\t\t\tnext = ear.next;\r\n\r\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n\t\t\t\t// cut off the triangle\r\n\t\t\t\ttriangles.push( prev.i / dim );\r\n\t\t\t\ttriangles.push( ear.i / dim );\r\n\t\t\t\ttriangles.push( next.i / dim );\r\n\r\n\t\t\t\tremoveNode( ear );\r\n\r\n\t\t\t\t// skipping the next vertice leads to less sliver triangles\r\n\t\t\t\tear = next.next;\r\n\t\t\t\tstop = next.next;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tear = next;\r\n\r\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n\t\t\tif ( ear === stop ) {\r\n\r\n\t\t\t\t// try filtering points and slicing again\r\n\r\n\t\t\t\tif ( ! pass ) {\r\n\r\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\r\n\r\n\t\t\t\t} else if ( pass === 1 ) {\r\n\r\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\r\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\r\n\r\n\t\t\t\t} else if ( pass === 2 ) {\r\n\r\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n\tfunction isEar( ear ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// now make sure we don't have other points inside the potential ear\r\n\t\tvar p = ear.next.next;\r\n\r\n\t\twhile ( p !== ear.prev ) {\r\n\r\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// triangle bbox; min & max are calculated like this for speed\r\n\r\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n\t\t// z-order range for the current triangle bbox;\r\n\r\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n\t\t// first look for points inside the triangle in increasing z-order\r\n\r\n\t\tvar p = ear.nextZ;\r\n\r\n\t\twhile ( p && p.z <= maxZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t\tp = p.nextZ;\r\n\r\n\t\t}\r\n\r\n\t\t// then look for points in decreasing z-order\r\n\r\n\t\tp = ear.prevZ;\r\n\r\n\t\twhile ( p && p.z >= minZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\r\n\t\t\tp = p.prevZ;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t// go through all polygon nodes and cure small local self-intersections\r\n\r\n\tfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar a = p.prev, b = p.next.next;\r\n\r\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n\t\t\t\ttriangles.push( a.i / dim );\r\n\t\t\t\ttriangles.push( p.i / dim );\r\n\t\t\t\ttriangles.push( b.i / dim );\r\n\r\n\t\t\t\t// remove two nodes involved\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tremoveNode( p.next );\r\n\r\n\t\t\t\tp = start = b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\t// try splitting polygon into two and triangulate them independently\r\n\r\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n\t\t// look for a valid diagonal that divides the polygon into two\r\n\r\n\t\tvar a = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar b = a.next.next;\r\n\r\n\t\t\twhile ( b !== a.prev ) {\r\n\r\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n\t\t\t\t\t// split the polygon in two by the diagonal\r\n\r\n\t\t\t\t\tvar c = splitPolygon( a, b );\r\n\r\n\t\t\t\t\t// filter colinear points around the cuts\r\n\r\n\t\t\t\t\ta = filterPoints( a, a.next );\r\n\t\t\t\t\tc = filterPoints( c, c.next );\r\n\r\n\t\t\t\t\t// run earcut on each half\r\n\r\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tb = b.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ta = a.next;\r\n\r\n\t\t} while ( a !== start );\r\n\r\n\t}\r\n\r\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n\t\tvar queue = [], i, len, start, end, list;\r\n\r\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n\t\t\tstart = holeIndices[ i ] * dim;\r\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\t\tlist = linkedList( data, start, end, dim, false );\r\n\t\t\tif ( list === list.next ) list.steiner = true;\r\n\t\t\tqueue.push( getLeftmost( list ) );\r\n\r\n\t\t}\r\n\r\n\t\tqueue.sort( compareX );\r\n\r\n\t\t// process holes from left to right\r\n\r\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\r\n\r\n\t\t\teliminateHole( queue[ i ], outerNode );\r\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\r\n\r\n\t\t}\r\n\r\n\t\treturn outerNode;\r\n\r\n\t}\r\n\r\n\tfunction compareX( a, b ) {\r\n\r\n\t\treturn a.x - b.x;\r\n\r\n\t}\r\n\r\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n\tfunction eliminateHole( hole, outerNode ) {\r\n\r\n\t\touterNode = findHoleBridge( hole, outerNode );\r\n\r\n\t\tif ( outerNode ) {\r\n\r\n\t\t\tvar b = splitPolygon( outerNode, hole );\r\n\r\n\t\t\tfilterPoints( b, b.next );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n\tfunction findHoleBridge( hole, outerNode ) {\r\n\r\n\t\tvar p = outerNode,\r\n\t\t\thx = hole.x,\r\n\t\t\thy = hole.y,\r\n\t\t\tqx = - Infinity,\r\n\t\t\tm;\r\n\r\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t\t// segment's endpoint with lesser x will be potential connection point\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n\t\t\t\tif ( x <= hx && x > qx ) {\r\n\r\n\t\t\t\t\tqx = x;\r\n\r\n\t\t\t\t\tif ( x === hx ) {\r\n\r\n\t\t\t\t\t\tif ( hy === p.y ) return p;\r\n\t\t\t\t\t\tif ( hy === p.next.y ) return p.next;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== outerNode );\r\n\r\n\t\tif ( ! m ) return null;\r\n\r\n\t\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t\t// if there are no points found, we have a valid connection;\r\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\t\tvar stop = m,\r\n\t\t\tmx = m.x,\r\n\t\t\tmy = m.y,\r\n\t\t\ttanMin = Infinity,\r\n\t\t\ttan;\r\n\r\n\t\tp = m.next;\r\n\r\n\t\twhile ( p !== stop ) {\r\n\r\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n\t\t\t\t\tm = p;\r\n\t\t\t\t\ttanMin = tan;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn m;\r\n\r\n\t}\r\n\r\n\t// interlink polygon nodes in z-order\r\n\r\n\tfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\t\tp.prevZ = p.prev;\r\n\t\t\tp.nextZ = p.next;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\tp.prevZ.nextZ = null;\r\n\t\tp.prevZ = null;\r\n\r\n\t\tsortLinked( p );\r\n\r\n\t}\r\n\r\n\t// Simon Tatham's linked list merge sort algorithm\r\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n\tfunction sortLinked( list ) {\r\n\r\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tp = list;\r\n\t\t\tlist = null;\r\n\t\t\ttail = null;\r\n\t\t\tnumMerges = 0;\r\n\r\n\t\t\twhile ( p ) {\r\n\r\n\t\t\t\tnumMerges ++;\r\n\t\t\t\tq = p;\r\n\t\t\t\tpSize = 0;\r\n\r\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\r\n\r\n\t\t\t\t\tpSize ++;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tif ( ! q ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqSize = inSize;\r\n\r\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n\t\t\t\t\t\te = p;\r\n\t\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\t\tpSize --;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\te = q;\r\n\t\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\t\tqSize --;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\r\n\t\t\t\t\telse list = e;\r\n\r\n\t\t\t\t\te.prevZ = tail;\r\n\t\t\t\t\ttail = e;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp = q;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttail.nextZ = null;\r\n\t\t\tinSize *= 2;\r\n\r\n\t\t} while ( numMerges > 1 );\r\n\r\n\t\treturn list;\r\n\r\n\t}\r\n\r\n\t// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n\tfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n\t\t// coords are transformed into non-negative 15-bit integer range\r\n\r\n\t\tx = 32767 * ( x - minX ) * invSize;\r\n\t\ty = 32767 * ( y - minY ) * invSize;\r\n\r\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\r\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\r\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n\t\treturn x | ( y << 1 );\r\n\r\n\t}\r\n\r\n\t// find the leftmost node of a polygon ring\r\n\r\n\tfunction getLeftmost( start ) {\r\n\r\n\t\tvar p = start, leftmost = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.x < leftmost.x ) leftmost = p;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn leftmost;\r\n\r\n\t}\r\n\r\n\t// check if a point lies within a convex triangle\r\n\r\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n\t}\r\n\r\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n\tfunction isValidDiagonal( a, b ) {\r\n\r\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n\t\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n\t}\r\n\r\n\t// signed area of a triangle\r\n\r\n\tfunction area( p, q, r ) {\r\n\r\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n\t}\r\n\r\n\t// check if two points are equal\r\n\r\n\tfunction equals( p1, p2 ) {\r\n\r\n\t\treturn p1.x === p2.x && p1.y === p2.y;\r\n\r\n\t}\r\n\r\n\t// check if two segments intersect\r\n\r\n\tfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n\t\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n\t\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\r\n\r\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n\t\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal intersects any polygon segments\r\n\r\n\tfunction intersectsPolygon( a, b ) {\r\n\r\n\t\tvar p = a;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal is locally inside the polygon\r\n\r\n\tfunction locallyInside( a, b ) {\r\n\r\n\t\treturn area( a.prev, a, a.next ) < 0 ?\r\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n\t}\r\n\r\n\t// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n\tfunction middleInside( a, b ) {\r\n\r\n\t\tvar p = a,\r\n\t\t\tinside = false,\r\n\t\t\tpx = ( a.x + b.x ) / 2,\r\n\t\t\tpy = ( a.y + b.y ) / 2;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n\t\t\t\tinside = ! inside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn inside;\r\n\r\n\t}\r\n\r\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n\tfunction splitPolygon( a, b ) {\r\n\r\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\r\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\r\n\t\t\tan = a.next,\r\n\t\t\tbp = b.prev;\r\n\r\n\t\ta.next = b;\r\n\t\tb.prev = a;\r\n\r\n\t\ta2.next = an;\r\n\t\tan.prev = a2;\r\n\r\n\t\tb2.next = a2;\r\n\t\ta2.prev = b2;\r\n\r\n\t\tbp.next = b2;\r\n\t\tb2.prev = bp;\r\n\r\n\t\treturn b2;\r\n\r\n\t}\r\n\r\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n\tfunction insertNode( i, x, y, last ) {\r\n\r\n\t\tvar p = new Node( i, x, y );\r\n\r\n\t\tif ( ! last ) {\r\n\r\n\t\t\tp.prev = p;\r\n\t\t\tp.next = p;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tp.next = last.next;\r\n\t\t\tp.prev = last;\r\n\t\t\tlast.next.prev = p;\r\n\t\t\tlast.next = p;\r\n\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\tfunction removeNode( p ) {\r\n\r\n\t\tp.next.prev = p.prev;\r\n\t\tp.prev.next = p.next;\r\n\r\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n\r\n\t}\r\n\r\n\tfunction Node( i, x, y ) {\r\n\r\n\t\t// vertice index in coordinates array\r\n\t\tthis.i = i;\r\n\r\n\t\t// vertex coordinates\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t// previous and next vertice nodes in a polygon ring\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null;\r\n\r\n\t\t// z-order curve value\r\n\t\tthis.z = null;\r\n\r\n\t\t// previous and next nodes in z-order\r\n\t\tthis.prevZ = null;\r\n\t\tthis.nextZ = null;\r\n\r\n\t\t// indicates whether this is a steiner point\r\n\t\tthis.steiner = false;\r\n\r\n\t}\r\n\r\n\tfunction signedArea( data, start, end, dim ) {\r\n\r\n\t\tvar sum = 0;\r\n\r\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\t\tj = i;\r\n\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tvar ShapeUtils = {\r\n\r\n\t\t// calculate area of the contour polygon\r\n\r\n\t\tarea: function ( contour ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a * 0.5;\r\n\r\n\t\t},\r\n\r\n\t\tisClockWise: function ( pts ) {\r\n\r\n\t\t\treturn ShapeUtils.area( pts ) < 0;\r\n\r\n\t\t},\r\n\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\t\tvar holeIndices = []; // array of hole indices\r\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\t\tremoveDupEndPts( contour );\r\n\t\t\taddContour( vertices, contour );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar holeIndex = contour.length;\r\n\r\n\t\t\tholes.forEach( removeDupEndPts );\r\n\r\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\r\n\r\n\t\t\t\tholeIndices.push( holeIndex );\r\n\t\t\t\tholeIndex += holes[ i ].length;\r\n\t\t\t\taddContour( vertices, holes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\r\n\r\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn faces;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction removeDupEndPts( points ) {\r\n\r\n\t\tvar l = points.length;\r\n\r\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\tpoints.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addContour( vertices, contour ) {\r\n\r\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\r\n\r\n\t\t\tvertices.push( contour[ i ].x );\r\n\t\t\tvertices.push( contour[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  depth: <float>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n\t *\r\n\t *  UVGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\t// ExtrudeGeometry\r\n\r\n\tfunction ExtrudeGeometry( shapes, options ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\r\n\r\n\tExtrudeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t// ExtrudeBufferGeometry\r\n\r\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar verticesArray = [];\r\n\t\tvar uvArray = [];\r\n\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar shape = shapes[ i ];\r\n\t\t\taddShape( shape );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar placeholder = [];\r\n\r\n\t\t\t// options\r\n\r\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\r\n\r\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\r\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\t\t\tvar extrudePath = options.extrudePath;\r\n\r\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n\r\n\t\t\t// deprecated options\r\n\r\n\t\t\tif ( options.amount !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\r\n\t\t\t\tdepth = options.amount;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar extrudePts, extrudeByPath = false;\r\n\t\t\tvar splineTube, binormal, normal, position2;\r\n\r\n\t\t\tif ( extrudePath ) {\r\n\r\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\t\t\textrudeByPath = true;\r\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t\t\t// SETUP TNB variables\r\n\r\n\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\r\n\r\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\tnormal = new Vector3();\r\n\t\t\t\tposition2 = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Safeguards if bevels are not enabled\r\n\r\n\t\t\tif ( ! bevelEnabled ) {\r\n\r\n\t\t\t\tbevelSegments = 0;\r\n\t\t\t\tbevelThickness = 0;\r\n\t\t\t\tbevelSize = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Variables initialization\r\n\r\n\t\t\tvar ahole, h, hl; // looping of holes\r\n\r\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar vertices = shapePoints.shape;\r\n\t\t\tvar holes = shapePoints.holes;\r\n\r\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\r\n\r\n\t\t\tif ( reverse ) {\r\n\r\n\t\t\t\tvertices = vertices.reverse();\r\n\r\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t\t\t/* Vertices */\r\n\r\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\tvertices = vertices.concat( ahole );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction scalePt2( pt, vec, size ) {\r\n\r\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar b, bs, t, z,\r\n\t\t\t\tvert, vlen = vertices.length,\r\n\t\t\t\tface, flen = faces.length;\r\n\r\n\r\n\t\t\t// Find directions for point movement\r\n\r\n\r\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t//\r\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\r\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\r\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t\t\t// check for collinear edges\r\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not collinear\r\n\r\n\t\t\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\r\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar contourMovements = [];\r\n\r\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesMovements = [],\r\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbs = bevelSize;\r\n\r\n\t\t\t// Back facing vertices\r\n\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add stepped vertices...\r\n\t\t\t// Including front facing vertices\r\n\r\n\t\t\tvar s;\r\n\r\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Add bevel segments planes\r\n\r\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* Faces */\r\n\r\n\t\t\t// Top and bottom faces\r\n\r\n\t\t\tbuildLidFaces();\r\n\r\n\t\t\t// Sides faces\r\n\r\n\t\t\tbuildSideFaces();\r\n\r\n\r\n\t\t\t/////  Internal functions\r\n\r\n\t\t\tfunction buildLidFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\r\n\t\t\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create faces for the z-sides of the shape\r\n\r\n\t\t\tfunction buildSideFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\t\t\t\tvar layeroffset = 0;\r\n\t\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t\t\t//, true\r\n\t\t\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\t\t\tvar j, k;\r\n\t\t\t\ti = contour.length;\r\n\r\n\t\t\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\t\t\tj = i;\r\n\t\t\t\t\tk = i - 1;\r\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\tvar s = 0,\r\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\r\n\r\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\t\t\tf4( a, b, c, d );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction v( x, y, z ) {\r\n\r\n\t\t\t\tplaceholder.push( x );\r\n\t\t\t\tplaceholder.push( y );\r\n\t\t\t\tplaceholder.push( z );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction f3( a, b, c ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction f4( a, b, c, d ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( d );\r\n\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\t\t\t\taddVertex( d );\r\n\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addVertex( index ) {\r\n\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction addUV( vector2 ) {\r\n\r\n\t\t\t\tuvArray.push( vector2.x );\r\n\t\t\t\tuvArray.push( vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\r\n\r\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar WorldUVGenerator = {\r\n\r\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_x, a_y ),\r\n\t\t\t\tnew Vector2( b_x, b_y ),\r\n\t\t\t\tnew Vector2( c_x, c_y )\r\n\t\t\t];\r\n\r\n\t\t},\r\n\r\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\r\n\t\t\tvar d_x = vertices[ indexD * 3 ];\r\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\r\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\r\n\r\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tfunction toJSON( shapes, options, data ) {\r\n\r\n\t\t//\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  font: <THREE.Font>, // font\r\n\t *\r\n\t *  size: <float>, // size of the text\r\n\t *  height: <float>, // thickness to extrude text\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into text bevel goes\r\n\t *  bevelSize: <float> // how far from text outline is bevel\r\n\t * }\r\n\t */\r\n\r\n\t// TextGeometry\r\n\r\n\tfunction TextGeometry( text, parameters ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TextGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\ttext: text,\r\n\t\t\tparameters: parameters\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTextGeometry.prototype.constructor = TextGeometry;\r\n\r\n\t// TextBufferGeometry\r\n\r\n\tfunction TextBufferGeometry( text, parameters ) {\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar font = parameters.font;\r\n\r\n\t\tif ( ! ( font && font.isFont ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\t\treturn new Geometry();\r\n\r\n\t\t}\r\n\r\n\t\tvar shapes = font.generateShapes( text, parameters.size );\r\n\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\r\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t\t// defaults\r\n\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\r\n\r\n\t\tthis.type = 'TextBufferGeometry';\r\n\r\n\t}\r\n\r\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\r\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// SphereGeometry\r\n\r\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\r\n\tSphereGeometry.prototype.constructor = SphereGeometry;\r\n\r\n\t// SphereBufferGeometry\r\n\r\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\tvar index = 0;\r\n\t\tvar grid = [];\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\r\n\r\n\t\t\tvar verticesRow = [];\r\n\r\n\t\t\tvar v = iy / heightSegments;\r\n\r\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar u = ix / widthSegments;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\tverticesRow.push( index ++ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgrid.push( verticesRow );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\tvar b = grid[ iy ][ ix ];\r\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// RingGeometry\r\n\r\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\r\n\tRingGeometry.prototype.constructor = RingGeometry;\r\n\r\n\t// RingBufferGeometry\r\n\r\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tinnerRadius = innerRadius || 0.5;\r\n\t\touterRadius = outerRadius || 1;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// some helper variables\r\n\r\n\t\tvar segment;\r\n\t\tvar radius = innerRadius;\r\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\r\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// increase the radius for next row of vertices\r\n\r\n\t\t\tradius += radiusStep;\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t\tvar a = segment;\r\n\t\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\r\n\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// LatheGeometry\r\n\r\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\r\n\tLatheGeometry.prototype.constructor = LatheGeometry;\r\n\r\n\t// LatheBufferGeometry\r\n\r\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.floor( segments ) || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar base;\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar i, j;\r\n\r\n\t\t// generate vertices and uvs\r\n\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\t\tvar sin = Math.sin( phi );\r\n\t\t\tvar cos = Math.cos( phi );\r\n\r\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + points.length;\r\n\t\t\t\tvar c = base + points.length + 1;\r\n\t\t\t\tvar d = base + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// generate normals\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\t\tif ( phiLength === Math.PI * 2 ) {\r\n\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\t\tvar n1 = new Vector3();\r\n\t\t\tvar n2 = new Vector3();\r\n\t\t\tvar n = new Vector3();\r\n\r\n\t\t\t// this is the buffer offset for the last line of vertices\r\n\r\n\t\t\tbase = segments * points.length * 3;\r\n\r\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t\t// select the normal of the vertex in the first line\r\n\r\n\t\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t\t// select the normal of the vertex in the last line\r\n\r\n\t\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t\t// average normals\r\n\r\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t\t// assign the new values to both normals\r\n\r\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\r\n\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// ShapeGeometry\r\n\r\n\tfunction ShapeGeometry( shapes, curveSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeGeometry';\r\n\r\n\t\tif ( typeof curveSegments === 'object' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\r\n\r\n\t\t\tcurveSegments = curveSegments.curveSegments;\r\n\r\n\t\t}\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\r\n\r\n\tShapeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t// ShapeBufferGeometry\r\n\r\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tcurveSegments = curveSegments || 12;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar groupStart = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\t// allow single and array values for \"shapes\" parameter\r\n\r\n\t\tif ( Array.isArray( shapes ) === false ) {\r\n\r\n\t\t\taddShape( shapes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\r\n\r\n\t\t\t\taddShape( shapes[ i ] );\r\n\r\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\tgroupCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar i, l, shapeHole;\r\n\r\n\t\t\tvar indexOffset = vertices.length / 3;\r\n\t\t\tvar points = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar shapeVertices = points.shape;\r\n\t\t\tvar shapeHoles = points.holes;\r\n\r\n\t\t\t// check direction of vertices\r\n\r\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n\r\n\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\r\n\t\t\t\t// also check if holes are in the opposite direction\r\n\r\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n\r\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n\r\n\t\t\t// join vertices of inner and outer paths to a single array\r\n\r\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices, normals, uvs\r\n\r\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = shapeVertices[ i ];\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// incides\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\r\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\r\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\r\n\r\n\t\t\t\tindices.push( a, b, c );\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\r\n\r\n\tShapeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction toJSON$1( shapes, data ) {\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'EdgesGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tthresholdAngle: thresholdAngle\r\n\t\t};\r\n\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\r\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t// prepare source geometry\r\n\r\n\t\tvar geometry2;\r\n\r\n\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tgeometry2 = new Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry2 = geometry.clone();\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\r\n\t\tvar sourceVertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\r\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\r\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tedges[ key ].face2 = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices\r\n\r\n\t\tfor ( key in edges ) {\r\n\r\n\t\t\tvar e = edges[ key ];\r\n\r\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\r\n\r\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// CylinderGeometry\r\n\r\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\r\n\r\n\t// CylinderBufferGeometry\r\n\r\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar index = 0;\r\n\t\tvar indexArray = [];\r\n\t\tvar halfHeight = height / 2;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// generate geometry\r\n\r\n\t\tgenerateTorso();\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction generateTorso() {\r\n\r\n\t\t\tvar x, y;\r\n\t\t\tvar normal = new Vector3();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\t\tvar indexRow = [];\r\n\r\n\t\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t\t// calculate the radius of the current row\r\n\r\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\r\n\t\t\t\t\t// vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t// normal\r\n\r\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\t// uv\r\n\r\n\t\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\r\n\t\t\t\t\tindexRow.push( index ++ );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\r\n\t\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\r\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\r\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// update group counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateCap( top ) {\r\n\r\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n\t\t\tvar uv = new Vector2();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tcenterIndexStart = index;\r\n\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// save the index of the last center vertex\r\n\r\n\t\t\tcenterIndexEnd = index;\r\n\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar c = centerIndexStart + x;\r\n\t\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t\t// face top\r\n\r\n\t\t\t\t\tindices.push( i, i + 1, c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// face bottom\r\n\r\n\t\t\t\t\tindices.push( i + 1, i, c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\t// ConeGeometry\r\n\r\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\r\n\tConeGeometry.prototype.constructor = ConeGeometry;\r\n\r\n\t// ConeBufferGeometry\r\n\r\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\r\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author hughes\r\n\t */\r\n\r\n\t// CircleGeometry\r\n\r\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCircleGeometry.prototype.constructor = CircleGeometry;\r\n\r\n\t// CircleBufferGeometry\r\n\r\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, s;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\r\n\t\t// center point\r\n\r\n\t\tvertices.push( 0, 0, 0 );\r\n\t\tnormals.push( 0, 0, 1 );\r\n\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\r\n\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\r\n\r\n\r\n\r\n\tvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t\tWireframeGeometry: WireframeGeometry,\r\n\t\tParametricGeometry: ParametricGeometry,\r\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\r\n\t\tTetrahedronGeometry: TetrahedronGeometry,\r\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\r\n\t\tOctahedronGeometry: OctahedronGeometry,\r\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\r\n\t\tIcosahedronGeometry: IcosahedronGeometry,\r\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\r\n\t\tDodecahedronGeometry: DodecahedronGeometry,\r\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\r\n\t\tPolyhedronGeometry: PolyhedronGeometry,\r\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\r\n\t\tTubeGeometry: TubeGeometry,\r\n\t\tTubeBufferGeometry: TubeBufferGeometry,\r\n\t\tTorusKnotGeometry: TorusKnotGeometry,\r\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\r\n\t\tTorusGeometry: TorusGeometry,\r\n\t\tTorusBufferGeometry: TorusBufferGeometry,\r\n\t\tTextGeometry: TextGeometry,\r\n\t\tTextBufferGeometry: TextBufferGeometry,\r\n\t\tSphereGeometry: SphereGeometry,\r\n\t\tSphereBufferGeometry: SphereBufferGeometry,\r\n\t\tRingGeometry: RingGeometry,\r\n\t\tRingBufferGeometry: RingBufferGeometry,\r\n\t\tPlaneGeometry: PlaneGeometry,\r\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\r\n\t\tLatheGeometry: LatheGeometry,\r\n\t\tLatheBufferGeometry: LatheBufferGeometry,\r\n\t\tShapeGeometry: ShapeGeometry,\r\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\r\n\t\tExtrudeGeometry: ExtrudeGeometry,\r\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\r\n\t\tEdgesGeometry: EdgesGeometry,\r\n\t\tConeGeometry: ConeGeometry,\r\n\t\tConeBufferGeometry: ConeBufferGeometry,\r\n\t\tCylinderGeometry: CylinderGeometry,\r\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\r\n\t\tCircleGeometry: CircleGeometry,\r\n\t\tCircleBufferGeometry: CircleBufferGeometry,\r\n\t\tBoxGeometry: BoxGeometry,\r\n\t\tBoxBufferGeometry: BoxBufferGeometry\r\n\t});\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <THREE.Color>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShadowMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShadowMaterial';\r\n\r\n\t\tthis.color = new Color( 0x000000 );\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tShadowMaterial.prototype = Object.create( Material.prototype );\r\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\r\n\r\n\tShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n\tShadowMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction RawShaderMaterial( parameters ) {\r\n\r\n\t\tShaderMaterial.call( this, parameters );\r\n\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\r\n\t}\r\n\r\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\r\n\r\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  roughness: <float>,\r\n\t *  metalness: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  roughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  metalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  envMapIntensity: <float>\r\n\t *\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshStandardMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 0.5;\r\n\t\tthis.metalness = 0.5;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.roughnessMap = null;\r\n\r\n\t\tthis.metalnessMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapIntensity = 1.0;\r\n\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\r\n\r\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  reflectivity: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhysicalMaterial( parameters ) {\r\n\r\n\t\tMeshStandardMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\t\tthis.clearCoat = 0.0;\r\n\t\tthis.clearCoatRoughness = 0.0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\r\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\r\n\r\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\r\n\t\tthis.clearCoat = source.clearCoat;\r\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhongMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\r\n\r\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author takahirox / http://github.com/takahirox\r\n\t *\r\n\t * parameters = {\r\n\t *  gradientMap: new THREE.Texture( <Image> )\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshToonMaterial( parameters ) {\r\n\r\n\t\tMeshPhongMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\r\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\r\n\r\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n\tMeshToonMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshNormalMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\r\n\r\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshLambertMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\r\n\r\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineDashedMaterial( parameters ) {\r\n\r\n\t\tLineBasicMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\r\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\r\n\r\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n\tLineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\r\n\tvar Materials = /*#__PURE__*/Object.freeze({\r\n\t\tShadowMaterial: ShadowMaterial,\r\n\t\tSpriteMaterial: SpriteMaterial,\r\n\t\tRawShaderMaterial: RawShaderMaterial,\r\n\t\tShaderMaterial: ShaderMaterial,\r\n\t\tPointsMaterial: PointsMaterial,\r\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\r\n\t\tMeshStandardMaterial: MeshStandardMaterial,\r\n\t\tMeshPhongMaterial: MeshPhongMaterial,\r\n\t\tMeshToonMaterial: MeshToonMaterial,\r\n\t\tMeshNormalMaterial: MeshNormalMaterial,\r\n\t\tMeshLambertMaterial: MeshLambertMaterial,\r\n\t\tMeshDepthMaterial: MeshDepthMaterial,\r\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\r\n\t\tMeshBasicMaterial: MeshBasicMaterial,\r\n\t\tLineDashedMaterial: LineDashedMaterial,\r\n\t\tLineBasicMaterial: LineBasicMaterial,\r\n\t\tMaterial: Material\r\n\t});\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar Cache = {\r\n\r\n\t\tenabled: false,\r\n\r\n\t\tfiles: {},\r\n\r\n\t\tadd: function ( key, file ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\t\tthis.files[ key ] = file;\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( key ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\t\treturn this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( key ) {\r\n\r\n\t\t\tdelete this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tclear: function () {\r\n\r\n\t\t\tthis.files = {};\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar isLoading = false;\r\n\t\tvar itemsLoaded = 0;\r\n\t\tvar itemsTotal = 0;\r\n\t\tvar urlModifier = undefined;\r\n\r\n\t\t// Refer to #5689 for the reason why we don't set .onStart\r\n\t\t// in the constructor\r\n\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\r\n\t\tthis.itemStart = function ( url ) {\r\n\r\n\t\t\titemsTotal ++;\r\n\r\n\t\t\tif ( isLoading === false ) {\r\n\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tisLoading = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemEnd = function ( url ) {\r\n\r\n\t\t\titemsLoaded ++;\r\n\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemError = function ( url ) {\r\n\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\t\tscope.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.resolveURL = function ( url ) {\r\n\r\n\t\t\tif ( urlModifier ) {\r\n\r\n\t\t\t\treturn urlModifier( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setURLModifier = function ( transform ) {\r\n\r\n\t\t\turlModifier = transform;\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar DefaultLoadingManager = new LoadingManager();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar loading = {};\r\n\r\n\tfunction FileLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FileLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check if request is duplicate\r\n\r\n\t\t\tif ( loading[ url ] !== undefined ) {\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check for data: URI\r\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\r\n\r\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\t\t\tif ( dataUriRegexResult ) {\r\n\r\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\r\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\r\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\r\n\r\n\t\t\t\tdata = window.decodeURIComponent( data );\r\n\r\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar response;\r\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\r\n\r\n\t\t\t\t\tswitch ( responseType ) {\r\n\r\n\t\t\t\t\t\tcase 'arraybuffer':\r\n\t\t\t\t\t\tcase 'blob':\r\n\r\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\r\n\r\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tresponse = view.buffer;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'document':\r\n\r\n\t\t\t\t\t\t\tvar parser = new DOMParser();\r\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'json':\r\n\r\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault: // 'text' or other\r\n\r\n\t\t\t\t\t\t\tresponse = data;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\twindow.setTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\twindow.setTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Initialise array for duplicate requests\r\n\r\n\t\t\t\tloading[ url ] = [];\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\t\trequest.open( 'GET', url, true );\r\n\r\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\t\tvar response = this.response;\r\n\r\n\t\t\t\t\tCache.add( url, response );\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\r\n\r\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\r\n\r\n\t\t\t\tfor ( var header in this.requestHeader ) {\r\n\r\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequest.send( null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn request;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetResponseType: function ( value ) {\r\n\r\n\t\t\tthis.responseType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetWithCredentials: function ( value ) {\r\n\r\n\t\t\tthis.withCredentials = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMimeType: function ( value ) {\r\n\r\n\t\t\tthis.mimeType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRequestHeader: function ( value ) {\r\n\r\n\t\t\tthis.requestHeader = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\r\n\tfunction CompressedTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( CompressedTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar images = [];\r\n\r\n\t\t\tvar texture = new CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\tvar loaded = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\r\n\tfunction DataTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( DataTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar texture = new DataTexture();\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( ImageLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\r\n\r\n\t\t\tfunction onImageLoad() {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tCache.add( url, this );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onImageError( event ) {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\r\n\t\t\timage.addEventListener( 'error', onImageError, false );\r\n\r\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\r\n\r\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\timage.src = url;\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction CubeTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( CubeTextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new CubeTexture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\t\tloaded ++;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, undefined, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction TextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( TextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new Texture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\r\n\r\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of curve methods:\r\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\r\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following curves inherit from THREE.Curve:\r\n\t *\r\n\t * -- 2D curves --\r\n\t * THREE.ArcCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.EllipseCurve\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.SplineCurve\r\n\t *\r\n\t * -- 3D curves --\r\n\t * THREE.CatmullRomCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath.\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\r\n\tfunction Curve() {\r\n\r\n\t\tthis.type = 'Curve';\r\n\r\n\t\tthis.arcLengthDivisions = 200;\r\n\r\n\t}\r\n\r\n\tObject.assign( Curve.prototype, {\r\n\r\n\t\t// Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\r\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\r\n\t\tgetPointAt: function ( u, optionalTarget ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getPoint( t, optionalTarget );\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPoint( t )\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPointAt( u )\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get total curve arc length\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lengths = this.getLengths();\r\n\t\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// Get list of cumulative segment lengths\r\n\r\n\t\tgetLengths: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\r\n\r\n\t\t\tif ( this.cacheArcLengths &&\r\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t\t! this.needsUpdate ) {\r\n\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.needsUpdate = false;\r\n\r\n\t\t\tvar cache = [];\r\n\t\t\tvar current, last = this.getPoint( 0 );\r\n\t\t\tvar p, sum = 0;\r\n\r\n\t\t\tcache.push( 0 );\r\n\r\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\t\tcurrent = this.getPoint( p / divisions );\r\n\t\t\t\tsum += current.distanceTo( last );\r\n\t\t\t\tcache.push( sum );\r\n\t\t\t\tlast = current;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\r\n\t\t},\r\n\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\t\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\t\tif ( distance ) {\r\n\r\n\t\t\t\ttargetArcLength = distance;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\t\twhile ( low <= high ) {\r\n\r\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// DONE\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti = high;\r\n\r\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\t\treturn i / ( il - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t\t// add that fractional amount to t\r\n\r\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t},\r\n\r\n\t\t// Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\r\n\t\tgetTangent: function ( t ) {\r\n\r\n\t\t\tvar delta = 0.0001;\r\n\t\t\tvar t1 = t - delta;\r\n\t\t\tvar t2 = t + delta;\r\n\r\n\t\t\t// Capping in case of danger\r\n\r\n\t\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\t\tvar pt1 = this.getPoint( t1 );\r\n\t\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\t\treturn vec.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tgetTangentAt: function ( u ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getTangent( t );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\r\n\r\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\tvar tangents = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar binormals = [];\r\n\r\n\t\t\tvar vec = new Vector3();\r\n\t\t\tvar mat = new Matrix4();\r\n\r\n\t\t\tvar i, u, theta;\r\n\r\n\t\t\t// compute the tangent vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tu = i / segments;\r\n\r\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\r\n\t\t\t\ttangents[ i ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\t\t\tnormals[ 0 ] = new Vector3();\r\n\t\t\tbinormals[ 0 ] = new Vector3();\r\n\t\t\tvar min = Number.MAX_VALUE;\r\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\r\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\t\tif ( tx <= min ) {\r\n\r\n\t\t\t\tmin = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ty <= min ) {\r\n\r\n\t\t\t\tmin = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tz <= min ) {\r\n\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\r\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvec.normalize();\r\n\r\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\t\t\tif ( closed === true ) {\r\n\r\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\t\ttheta /= segments;\r\n\r\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n\r\n\t\t\t\t\ttheta = - theta;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\t\t// twist a little...\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttangents: tangents,\r\n\t\t\t\tnormals: normals,\r\n\t\t\t\tbinormals: binormals\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Curve',\r\n\t\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'EllipseCurve';\r\n\r\n\t\tthis.aX = aX || 0;\r\n\t\tthis.aY = aY || 0;\r\n\r\n\t\tthis.xRadius = xRadius || 1;\r\n\t\tthis.yRadius = yRadius || 1;\r\n\r\n\t\tthis.aStartAngle = aStartAngle || 0;\r\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\r\n\r\n\t\tthis.aClockwise = aClockwise || false;\r\n\r\n\t\tthis.aRotation = aRotation || 0;\r\n\r\n\t}\r\n\r\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\r\n\tEllipseCurve.prototype.constructor = EllipseCurve;\r\n\r\n\tEllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar twoPi = Math.PI * 2;\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n\t\t// ensures that deltaAngle is 0 .. 2 PI\r\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n\t\tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n\t\t\tif ( samePoints ) {\r\n\r\n\t\t\t\tdeltaAngle = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n\t\t\tif ( deltaAngle === twoPi ) {\r\n\r\n\t\t\t\tdeltaAngle = - twoPi;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\t\tvar tx = x - this.aX;\r\n\t\t\tvar ty = y - this.aY;\r\n\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( x, y );\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.aX = source.aX;\r\n\t\tthis.aY = source.aY;\r\n\r\n\t\tthis.xRadius = source.xRadius;\r\n\t\tthis.yRadius = source.yRadius;\r\n\r\n\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\tthis.aEndAngle = source.aEndAngle;\r\n\r\n\t\tthis.aClockwise = source.aClockwise;\r\n\r\n\t\tthis.aRotation = source.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\tEllipseCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.aX = this.aX;\r\n\t\tdata.aY = this.aY;\r\n\r\n\t\tdata.xRadius = this.xRadius;\r\n\t\tdata.yRadius = this.yRadius;\r\n\r\n\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\tdata.aEndAngle = this.aEndAngle;\r\n\r\n\t\tdata.aClockwise = this.aClockwise;\r\n\r\n\t\tdata.aRotation = this.aRotation;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.aX = json.aX;\r\n\t\tthis.aY = json.aY;\r\n\r\n\t\tthis.xRadius = json.xRadius;\r\n\t\tthis.yRadius = json.yRadius;\r\n\r\n\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\tthis.aEndAngle = json.aEndAngle;\r\n\r\n\t\tthis.aClockwise = json.aClockwise;\r\n\r\n\t\tthis.aRotation = json.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\tthis.type = 'ArcCurve';\r\n\r\n\t}\r\n\r\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\r\n\tArcCurve.prototype.constructor = ArcCurve;\r\n\r\n\tArcCurve.prototype.isArcCurve = true;\r\n\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tfunction init( x0, x1, t0, t1 ) {\r\n\r\n\t\t\tc0 = x0;\r\n\t\t\tc1 = t0;\r\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n\r\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\t\tt1 *= dt1;\r\n\t\t\t\tt2 *= dt1;\r\n\r\n\t\t\t\tinit( x1, x2, t1, t2 );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcalc: function ( t ) {\r\n\r\n\t\t\t\tvar t2 = t * t;\r\n\t\t\t\tvar t3 = t2 * t;\r\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar tmp = new Vector3();\r\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\r\n\r\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CatmullRomCurve3';\r\n\r\n\t\tthis.points = points || [];\r\n\t\tthis.closed = closed || false;\r\n\t\tthis.curveType = curveType || 'centripetal';\r\n\t\tthis.tension = tension || 0.5;\r\n\r\n\t}\r\n\r\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\r\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\r\n\r\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar l = points.length;\r\n\r\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tif ( this.closed ) {\r\n\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n\r\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\tintPoint = l - 2;\r\n\t\t\tweight = 1;\r\n\r\n\t\t}\r\n\r\n\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate first point\r\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\tp0 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tp1 = points[ intPoint % l ];\r\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate last point\r\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\tp3 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n\r\n\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t// safety check for repeated points\r\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t} else if ( this.curveType === 'catmullrom' ) {\r\n\r\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n\r\n\t\t}\r\n\r\n\t\tpoint.set(\r\n\t\t\tpx.calc( weight ),\r\n\t\t\tpy.calc( weight ),\r\n\t\t\tpz.calc( weight )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = source.closed;\r\n\t\tthis.curveType = source.curveType;\r\n\t\tthis.tension = source.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\tdata.closed = this.closed;\r\n\t\tdata.curveType = this.curveType;\r\n\t\tdata.tension = this.tension;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = json.closed;\r\n\t\tthis.curveType = json.curveType;\r\n\t\tthis.tension = json.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Bezier Curves formulas obtained from\r\n\t * http://en.wikipedia.org/wiki/Bézier_curve\r\n\t */\r\n\r\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction QuadraticBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP1( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP2( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\r\n\r\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\t\tQuadraticBezierP2( t, p2 );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CubicBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP1( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP2( t, p ) {\r\n\r\n\t\treturn 3 * ( 1 - t ) * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP3( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\t\tCubicBezierP3( t, p3 );\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\t\tthis.v3 = v3 || new Vector2();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\r\n\r\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\t\tthis.v3 = v3 || new Vector3();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\r\n\r\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction LineCurve( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve';\r\n\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tLineCurve.prototype = Object.create( Curve.prototype );\r\n\tLineCurve.prototype.constructor = LineCurve;\r\n\r\n\tLineCurve.prototype.isLineCurve = true;\r\n\r\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\r\n\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\t\treturn tangent.normalize();\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction LineCurve3( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tLineCurve3.prototype = Object.create( Curve.prototype );\r\n\tLineCurve3.prototype.constructor = LineCurve3;\r\n\r\n\tLineCurve3.prototype.isLineCurve3 = true;\r\n\r\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\r\n\r\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\r\n\r\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'SplineCurve';\r\n\r\n\t\tthis.points = points || [];\r\n\r\n\t}\r\n\r\n\tSplineCurve.prototype = Object.create( Curve.prototype );\r\n\tSplineCurve.prototype.constructor = SplineCurve;\r\n\r\n\tSplineCurve.prototype.isSplineCurve = true;\r\n\r\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar p = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar p1 = points[ intPoint ];\r\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tpoint.set(\r\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\r\n\tvar Curves = /*#__PURE__*/Object.freeze({\r\n\t\tArcCurve: ArcCurve,\r\n\t\tCatmullRomCurve3: CatmullRomCurve3,\r\n\t\tCubicBezierCurve: CubicBezierCurve,\r\n\t\tCubicBezierCurve3: CubicBezierCurve3,\r\n\t\tEllipseCurve: EllipseCurve,\r\n\t\tLineCurve: LineCurve,\r\n\t\tLineCurve3: LineCurve3,\r\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\t\tSplineCurve: SplineCurve\r\n\t});\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\r\n\tfunction CurvePath() {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CurvePath';\r\n\r\n\t\tthis.curves = [];\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\r\n\t}\r\n\r\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\r\n\r\n\t\tconstructor: CurvePath,\r\n\r\n\t\tadd: function ( curve ) {\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t},\r\n\r\n\t\tclosePath: function () {\r\n\r\n\t\t\t// Add a line curve if start and end of lines are not connected\r\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// To get accurate point with reference to\r\n\t\t// entire path distance at time t,\r\n\t\t// following has to be done:\r\n\r\n\t\t// 1. Length of each sub path have to be known\r\n\t\t// 2. Locate and identify type of curve\r\n\t\t// 3. Get t for the curve\r\n\t\t// 4. Return curve.getPointAt(t')\r\n\r\n\t\tgetPoint: function ( t ) {\r\n\r\n\t\t\tvar d = t * this.getLength();\r\n\t\t\tvar curveLengths = this.getCurveLengths();\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\t// To think about boundaries points.\r\n\r\n\t\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\t\t\tvar segmentLength = curve.getLength();\r\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n\t\t\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t\t},\r\n\r\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t\t// getPoint() depends on getLength\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lens = this.getCurveLengths();\r\n\t\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// cacheLengths must be recalculated.\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.cacheLengths = null;\r\n\t\t\tthis.getCurveLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Compute lengths and cache them\r\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\t\tgetCurveLengths: function () {\r\n\r\n\t\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\t\treturn this.cacheLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get length of sub-curve\r\n\t\t\t// Push sums into cached array\r\n\r\n\t\t\tvar lengths = [], sums = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\t\tlengths.push( sums );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheLengths = lengths;\r\n\r\n\t\t\treturn lengths;\r\n\r\n\t\t},\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 40;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tdivisions = divisions || 12;\r\n\r\n\t\t\tvar points = [], last;\r\n\r\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n\t\t\t\tvar curve = curves[ i ];\r\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\r\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\r\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\r\n\t\t\t\t\t\t\t: divisions;\r\n\r\n\t\t\t\tvar pts = curve.getPoints( resolution );\r\n\r\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar point = pts[ j ];\r\n\r\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\t\tpoints.push( point );\r\n\t\t\t\t\tlast = point;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = source.curves[ i ];\r\n\r\n\t\t\t\tthis.curves.push( curve.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoClose = source.autoClose;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.autoClose = this.autoClose;\r\n\t\t\tdata.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\t\t\t\tdata.curves.push( curve.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.autoClose = json.autoClose;\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = json.curves[ i ];\r\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t **/\r\n\r\n\tfunction Path( points ) {\r\n\r\n\t\tCurvePath.call( this );\r\n\r\n\t\tthis.type = 'Path';\r\n\r\n\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\tif ( points ) {\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\r\n\r\n\t\tconstructor: Path,\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n\r\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tvar curve = new QuadraticBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCPx, aCPy ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tvar curve = new CubicBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\r\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n\t\t\tvar curve = new SplineCurve( npts );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t},\r\n\r\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t\tif ( this.curves.length > 0 ) {\r\n\r\n\t\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\r\n\r\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\t\tthis.currentPoint.copy( lastPoint );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurvePath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.currentPoint.copy( source.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\r\n\tfunction Shape( points ) {\r\n\r\n\t\tPath.call( this, points );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.type = 'Shape';\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t}\r\n\r\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\r\n\r\n\t\tconstructor: Shape,\r\n\r\n\t\tgetPointsHoles: function ( divisions ) {\r\n\r\n\t\t\tvar holesPts = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn holesPts;\r\n\r\n\t\t},\r\n\r\n\t\t// get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\t\textractPoints: function ( divisions ) {\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tPath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = source.holes[ i ];\r\n\r\n\t\t\t\tthis.holes.push( hole.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Path.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = this.holes[ i ];\r\n\t\t\t\tdata.holes.push( hole.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tPath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.uuid = json.uuid;\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = json.holes[ i ];\r\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Light( color, intensity ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\t\tthis.receiveShadow = undefined;\r\n\r\n\t}\r\n\r\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Light,\r\n\r\n\t\tisLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.color.copy( source.color );\r\n\t\t\tthis.intensity = source.intensity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.color = this.color.getHex();\r\n\t\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\r\n\r\n\t\tLight.call( this, skyColor, intensity );\r\n\r\n\t\tthis.type = 'HemisphereLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.groundColor = new Color( groundColor );\r\n\r\n\t}\r\n\r\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: HemisphereLight,\r\n\r\n\t\tisHemisphereLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LightShadow( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.radius = 1;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t}\r\n\r\n\tObject.assign( LightShadow.prototype, {\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.camera = source.camera.clone();\r\n\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\r\n\t\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\t\tdelete object.camera.matrix;\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction SpotLightShadow() {\r\n\r\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: SpotLightShadow,\r\n\r\n\t\tisSpotLightShadow: true,\r\n\r\n\t\tupdate: function ( light ) {\r\n\r\n\t\t\tvar camera = this.camera;\r\n\r\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\r\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t\tvar far = light.distance || camera.far;\r\n\r\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\t\tcamera.fov = fov;\r\n\t\t\t\tcamera.aspect = aspect;\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'SpotLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / Math.PI;\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new SpotLightShadow();\r\n\r\n\t}\r\n\r\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: SpotLight,\r\n\r\n\t\tisSpotLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.angle = source.angle;\r\n\t\t\tthis.penumbra = source.penumbra;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction PointLight( color, intensity, distance, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'PointLight';\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: PointLight,\r\n\r\n\t\tisPointLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectionalLightShadow( ) {\r\n\r\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLightShadow\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DirectionalLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'DirectionalLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.shadow = new DirectionalLightShadow();\r\n\r\n\t}\r\n\r\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLight,\r\n\r\n\t\tisDirectionalLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AmbientLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'AmbientLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t}\r\n\r\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: AmbientLight,\r\n\r\n\t\tisAmbientLight: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\tfunction RectAreaLight( color, intensity, width, height ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'RectAreaLight';\r\n\r\n\t\tthis.width = ( width !== undefined ) ? width : 10;\r\n\t\tthis.height = ( height !== undefined ) ? height : 10;\r\n\r\n\t}\r\n\r\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: RectAreaLight,\r\n\r\n\t\tisRectAreaLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.width = this.width;\r\n\t\t\tdata.object.height = this.height;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tvar AnimationUtils = {\r\n\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function ( array, from, to ) {\r\n\r\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array.slice( from, to );\r\n\r\n\t\t},\r\n\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function ( array, type, forceClone ) {\r\n\r\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t\t},\r\n\r\n\t\tisTypedArray: function ( object ) {\r\n\r\n\t\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t\t},\r\n\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function ( times ) {\r\n\r\n\t\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar n = times.length;\r\n\t\t\tvar result = new Array( n );\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\t\tresult.sort( compareTime );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function ( values, stride, order ) {\r\n\r\n\t\t\tvar nValues = values.length;\r\n\t\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\t\tvar value = key[ valuePropertyName ];\r\n\t\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else if ( value.toArray !== undefined ) {\r\n\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// otherwise push as-is\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t}\r\n\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\tevaluate: function ( t ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\t\tt1 = pp[ i1 ],\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\tvalidate_interval: {\r\n\r\n\t\t\t\tseek: {\r\n\r\n\t\t\t\t\tvar right;\r\n\r\n\t\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\r\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t\t// binary search\r\n\r\n\t\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // seek\r\n\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t\t} // validate_interval\r\n\r\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t\t},\r\n\r\n\t\tsettings: null, // optional, subclass-specific settings structure\r\n\t\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t\t// --- Protected interface\r\n\r\n\t\tDefaultSettings_: {},\r\n\r\n\t\tgetSettings_: function () {\r\n\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t\t},\r\n\r\n\t\tcopySampleValue_: function ( index ) {\r\n\r\n\t\t\t// copies a sample value to the result buffer\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = index * stride;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// Template methods for derived classes:\r\n\r\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\t\tthrow new Error( 'call to abstract method' );\r\n\t\t\t// implementations shall return this.resultBuffer\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\r\n\r\n\t\t\t// empty\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\t//( 0, t, t0 ), returns this.resultBuffer\r\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t\tthis._weightPrev = - 0;\r\n\t\tthis._offsetPrev = - 0;\r\n\t\tthis._weightNext = - 0;\r\n\t\tthis._offsetNext = - 0;\r\n\r\n\t}\r\n\r\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: CubicInterpolant,\r\n\r\n\t\tDefaultSettings_: {\r\n\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\tiPrev = i1 - 2,\r\n\t\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\t\tstride = this.valueSize;\r\n\r\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t\t},\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tpp = p * p,\r\n\t\t\t\tppp = pp * p;\r\n\r\n\t\t\t// evaluate polynomials\r\n\r\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\t\tvar sN = wN * ppp - wN * pp;\r\n\r\n\t\t\t// combine data linearly\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: LinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: DiscreteInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\r\n\r\n\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A timed sequence of keyframes for a specific property.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\t}\r\n\r\n\t// Static methods\r\n\r\n\tObject.assign( KeyframeTrack, {\r\n\r\n\t\t// Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\r\n\t\ttoJSON: function ( track ) {\r\n\r\n\t\t\tvar trackType = track.constructor;\r\n\r\n\t\t\tvar json;\r\n\r\n\t\t\t// derived classes can define a static toJSON method\r\n\t\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( KeyframeTrack.prototype, {\r\n\r\n\t\tconstructor: KeyframeTrack,\r\n\r\n\t\tTimeBufferType: Float32Array,\r\n\r\n\t\tValueBufferType: Float32Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\r\n\r\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\r\n\r\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tsetInterpolation: function ( interpolation ) {\r\n\r\n\t\t\tvar factoryMethod;\r\n\r\n\t\t\tswitch ( interpolation ) {\r\n\r\n\t\t\t\tcase InterpolateDiscrete:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateLinear:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateSmooth:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInterpolation: function () {\r\n\r\n\t\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\t\treturn InterpolateSmooth;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetValueSize: function () {\r\n\r\n\t\t\treturn this.values.length / this.times.length;\r\n\r\n\t\t},\r\n\r\n\t\t// move all keyframes either forwards or backwards in time\r\n\t\tshift: function ( timeOffset ) {\r\n\r\n\t\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t\tscale: function ( timeScale ) {\r\n\r\n\t\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t\ttrim: function ( startTime, endTime ) {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tnKeys = times.length,\r\n\t\t\t\tfrom = 0,\r\n\t\t\t\tto = nKeys - 1;\r\n\r\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\r\n\r\n\t\t\t\t++ from;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\r\n\r\n\t\t\t\t-- to;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\t\tif ( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\r\n\r\n\t\t\t\tvar stride = this.getValueSize();\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tvar valueSize = this.getValueSize();\r\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\r\n\t\t\t\tnKeys = times.length;\r\n\r\n\t\t\tif ( nKeys === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar prevTime = null;\r\n\r\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevTime = currTime;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( values !== undefined ) {\r\n\r\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\t// removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\t\toptimize: function () {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\t\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n\t\t\t\twriteIndex = 1,\r\n\t\t\t\tlastIndex = times.length - 1;\r\n\r\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\r\n\r\n\t\t\t\tvar keep = false;\r\n\r\n\t\t\t\tvar time = times[ i ];\r\n\t\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n\t\t\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in-place compaction\r\n\r\n\t\t\t\tif ( keep ) {\r\n\r\n\t\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// flush last keyframe (compaction looks ahead)\r\n\r\n\t\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of Boolean keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction BooleanKeyframeTrack( name, times, values ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values );\r\n\r\n\t}\r\n\r\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: BooleanKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'bool',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t\t// Note: Actually this track could have a optimized / compressed\r\n\t\t// representation of a single value and a custom interpolant that\r\n\t\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of keyframe values that represent color.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: ColorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'color'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t\t// Note: Very basic implementation and nothing special yet.\r\n\t\t// However, this is the place for color space parameterization.\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of numeric keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: NumberKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'number'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: QuaternionLinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset = i1 * stride,\r\n\r\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of quaternion keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: QuaternionKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'quaternion',\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Strings\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: StringKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'string',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of vectored keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: VectorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'vector'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Reusable set of Tracks that represent an animation.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tfunction AnimationClip( name, duration, tracks ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\r\n\t\t\tthis.resetDuration();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTrackTypeForValueTypeName( typeName ) {\r\n\r\n\t\tswitch ( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase 'scalar':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'float':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'integer':\r\n\r\n\t\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\tcase 'vector2':\r\n\t\t\tcase 'vector3':\r\n\t\t\tcase 'vector4':\r\n\r\n\t\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\t\tcase 'color':\r\n\r\n\t\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\t\tcase 'quaternion':\r\n\r\n\t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'boolean':\r\n\r\n\t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\t\tcase 'string':\r\n\r\n\t\t\t\treturn StringKeyframeTrack;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n\r\n\t}\r\n\r\n\tfunction parseKeyframeTrack( json ) {\r\n\r\n\t\tif ( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume a constructor compatible with the base\r\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationClip, {\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( clip ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\t\tvar json = {\r\n\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks,\r\n\t\t\t\t'uuid': clip.uuid\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t},\r\n\r\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\r\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push(\r\n\t\t\t\t\tnew NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( name, - 1, tracks );\r\n\r\n\t\t},\r\n\r\n\t\tfindByName: function ( objectOrClipArray, name ) {\r\n\r\n\t\t\tvar clipArray = objectOrClipArray;\r\n\r\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\t\tvar o = objectOrClipArray;\r\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\r\n\r\n\t\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t\t// sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clips = [];\r\n\r\n\t\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn clips;\r\n\r\n\t\t},\r\n\r\n\t\t// parse the animation.hierarchy format\r\n\t\tparseAnimation: function ( animation, bones ) {\r\n\r\n\t\t\tif ( ! animation ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tvar clipName = animation.name || 'default';\r\n\t\t\t// automatic length determination in AnimationClip.\r\n\t\t\tvar duration = animation.length || - 1;\r\n\t\t\tvar fps = animation.fps || 30;\r\n\r\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t\t// skip empty tracks\r\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t\t// process morph targets\r\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\r\n\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tvar morphTargetNames = {};\r\n\r\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\t\tvar times = [];\r\n\t\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\r\n\r\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\r\n\r\n\t\t\treturn clip;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( AnimationClip.prototype, {\r\n\r\n\t\tresetDuration: function () {\r\n\r\n\t\t\tvar tracks = this.tracks, duration = 0;\r\n\r\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.duration = duration;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttrim: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\toptimize: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction MaterialLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tObject.assign( MaterialLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetTextures: function ( value ) {\r\n\r\n\t\t\tthis.textures = value;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar textures = this.textures;\r\n\r\n\t\t\tfunction getTexture( name ) {\r\n\r\n\t\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new Materials[ json.type ]();\r\n\r\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\r\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\r\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\r\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\r\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\t\t// Shader Material\r\n\r\n\t\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in json.uniforms ) {\r\n\r\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\t\t// Deprecated\r\n\r\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\r\n\t\t\t// for PointsMaterial\r\n\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t\t// maps\r\n\r\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\r\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\r\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferGeometryLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( BufferGeometryLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\tvar index = json.data.index;\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = json.data.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\t\tvar center = new Vector3();\r\n\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TYPED_ARRAYS = {\r\n\t\tInt8Array: Int8Array,\r\n\t\tUint8Array: Uint8Array,\r\n\t\t// Workaround for IE11 pre KB2929437. See #11440\r\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\r\n\t\tInt16Array: Int16Array,\r\n\t\tUint16Array: Uint16Array,\r\n\t\tInt32Array: Int32Array,\r\n\t\tUint32Array: Uint32Array,\r\n\t\tFloat32Array: Float32Array,\r\n\t\tFloat64Array: Float64Array\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Loader() {}\r\n\r\n\tLoader.Handlers = {\r\n\r\n\t\thandlers: [],\r\n\r\n\t\tadd: function ( regex, loader ) {\r\n\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( file ) {\r\n\r\n\t\t\tvar handlers = this.handlers;\r\n\r\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tvar regex = handlers[ i ];\r\n\t\t\t\tvar loader = handlers[ i + 1 ];\r\n\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\t\treturn loader;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tonLoadStart: function () {},\r\n\r\n\t\tonLoadProgress: function () {},\r\n\r\n\t\tonLoadComplete: function () {},\r\n\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tcreateMaterial: ( function () {\r\n\r\n\t\t\tvar BlendingMode = {\r\n\t\t\t\tNoBlending: NoBlending,\r\n\t\t\t\tNormalBlending: NormalBlending,\r\n\t\t\t\tAdditiveBlending: AdditiveBlending,\r\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\r\n\t\t\t\tMultiplyBlending: MultiplyBlending,\r\n\t\t\t\tCustomBlending: CustomBlending\r\n\t\t\t};\r\n\r\n\t\t\tvar color = new Color();\r\n\t\t\tvar textureLoader = new TextureLoader();\r\n\t\t\tvar materialLoader = new MaterialLoader();\r\n\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\t\t// convert from old material format\r\n\r\n\t\t\t\tvar textures = {};\r\n\r\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar uuid = _Math.generateUUID();\r\n\r\n\t\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\t\treturn uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar json = {\r\n\t\t\t\t\tuuid: _Math.generateUUID(),\r\n\t\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissive':\r\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\r\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\r\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\r\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\t\tjson.normalScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalness':\r\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\r\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\r\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\r\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughness':\r\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\r\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\r\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\r\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\t\tjson.side = BackSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\t\tjson.side = DoubleSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\r\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Don McCurdy / https://www.donmccurdy.com\r\n\t */\r\n\r\n\tvar LoaderUtils = {\r\n\r\n\t\tdecodeText: function ( array ) {\r\n\r\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\t\tvar s = '';\r\n\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// Implicitly assumes little-endian.\r\n\t\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Merges multi-byte utf-8 characters.\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t},\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tvar index = url.lastIndexOf( '/' );\r\n\r\n\t\t\tif ( index === - 1 ) return './';\r\n\r\n\t\t\treturn url.substr( 0, index + 1 );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction JSONLoader( manager ) {\r\n\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\r\n\t\t}\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\tthis.withCredentials = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( JSONLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\t\tvar type = metadata.type;\r\n\r\n\t\t\t\t\tif ( type !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetTexturePath: function ( value ) {\r\n\r\n\t\t\tthis.texturePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: ( function () {\r\n\r\n\t\t\tfunction parseModel( json, geometry ) {\r\n\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar i, j, fi,\r\n\r\n\t\t\t\t\toffset, zLength,\r\n\r\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tisQuad,\r\n\t\t\t\t\thasMaterial,\r\n\t\t\t\t\thasFaceVertexUv,\r\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\t\t\tfaces = json.faces,\r\n\t\t\t\t\tvertices = json.vertices,\r\n\t\t\t\t\tnormals = json.normals,\r\n\t\t\t\t\tcolors = json.colors,\r\n\r\n\t\t\t\t\tscale = json.scale,\r\n\r\n\t\t\t\t\tnUvLayers = 0;\r\n\r\n\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\t\tvertex = new Vector3();\r\n\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\r\n\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\t\tfaceA = new Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\t\tfaceB = new Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\t\tnormal = new Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tface = new Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\t\tnormal = new Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseSkin( json, geometry ) {\r\n\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseMorphing( json, geometry ) {\r\n\r\n\t\t\t\tvar scale = json.scale;\r\n\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\t\tvar vertex = new Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseAnimations( json, geometry ) {\r\n\r\n\t\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\t\tvar animations = [];\r\n\r\n\t\t\t\tif ( json.animation !== undefined ) {\r\n\r\n\t\t\t\t\tanimations.push( json.animation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.animations !== undefined ) {\r\n\r\n\t\t\t\t\tif ( json.animations.length ) {\r\n\r\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tanimations.push( json.animations );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse implicit morph animations\r\n\t\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function parse( json, texturePath ) {\r\n\r\n\t\t\t\tif ( json.data !== undefined ) {\r\n\r\n\t\t\t\t\t// Geometry 4.0 spec\r\n\t\t\t\t\tjson = json.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.scale !== undefined ) {\r\n\r\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tjson.scale = 1.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar geometry = new Geometry();\r\n\r\n\t\t\t\tparseModel( json, geometry );\r\n\t\t\t\tparseSkin( json, geometry );\r\n\t\t\t\tparseMorphing( json, geometry );\r\n\t\t\t\tparseAnimations( json, geometry );\r\n\r\n\t\t\t\tgeometry.computeFaceNormals();\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\t\t\treturn { geometry: geometry };\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ObjectLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\r\n\t}\r\n\r\n\tObject.assign( ObjectLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json = null;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\r\n\r\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parse( json, onLoad );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetTexturePath: function ( value ) {\r\n\r\n\t\t\tthis.texturePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json, onLoad ) {\r\n\r\n\t\t\tvar shapes = this.parseShape( json.shapes );\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar textures = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\t\tif ( json.animations ) {\r\n\r\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t},\r\n\r\n\t\tparseShape: function ( json ) {\r\n\r\n\t\t\tvar shapes = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\r\n\r\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t},\r\n\r\n\t\tparseGeometries: function ( json, shapes ) {\r\n\r\n\t\t\tvar geometries = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar geometryLoader = new JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ConeGeometry':\r\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'LatheGeometry':\r\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\r\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.vertices,\r\n\t\t\t\t\t\t\t\tdata.indices,\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.details\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ShapeGeometry':\r\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.curveSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\r\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\r\n\r\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.options\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\r\n\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t},\r\n\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\t\tvar materials = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar loader = new MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\r\n\r\n\t\t\t\t\t\t// Deprecated\r\n\r\n\t\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t},\r\n\r\n\t\tparseAnimations: function ( json ) {\r\n\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tvar clip = AnimationClip.parse( data );\r\n\r\n\t\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\r\n\r\n\t\t\t\tanimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\r\n\t\t},\r\n\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\r\n\t\t\tfunction loadImage( url ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, undefined, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\t\tvar manager = new LoadingManager( onLoad );\r\n\r\n\t\t\t\tvar loader = new ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar url = image.url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\r\n\r\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\r\n\t\t},\r\n\r\n\t\tparseTextures: function ( json, images ) {\r\n\r\n\t\t\tfunction parseConstant( value, type ) {\r\n\r\n\t\t\t\tif ( typeof value === 'number' ) return value;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\t\treturn type[ value ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\r\n\r\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n\r\n\t\t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\r\n\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures;\r\n\r\n\t\t},\r\n\r\n\t\tparseObject: function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( Array.isArray( name ) ) {\r\n\r\n\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar uuid = name[ i ];\r\n\r\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\r\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SkinnedMesh':\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineLoop':\r\n\r\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineSegments':\r\n\r\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tobject.matrix.fromArray( data.matrix );\r\n\r\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.shadow ) {\r\n\r\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tvar children = data.children;\r\n\r\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TEXTURE_MAPPING = {\r\n\t\tUVMapping: UVMapping,\r\n\t\tCubeReflectionMapping: CubeReflectionMapping,\r\n\t\tCubeRefractionMapping: CubeRefractionMapping,\r\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\r\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\r\n\t};\r\n\r\n\tvar TEXTURE_WRAPPING = {\r\n\t\tRepeatWrapping: RepeatWrapping,\r\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n\t};\r\n\r\n\tvar TEXTURE_FILTER = {\r\n\t\tNearestFilter: NearestFilter,\r\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\r\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\r\n\t\tLinearFilter: LinearFilter,\r\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\r\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\r\n\t};\r\n\r\n\t/**\r\n\t * @author thespite / http://clicktorelease.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageBitmapLoader( manager ) {\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n\t\tthis.options = undefined;\r\n\r\n\t}\r\n\r\n\tImageBitmapLoader.prototype = {\r\n\r\n\t\tconstructor: ImageBitmapLoader,\r\n\r\n\t\tsetOptions: function setOptions( options ) {\r\n\r\n\t\t\tthis.options = options;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfetch( url ).then( function ( res ) {\r\n\r\n\t\t\t\treturn res.blob();\r\n\r\n\t\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\t\treturn createImageBitmap( blob, scope.options );\r\n\r\n\t\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( /* value */ ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\r\n\t **/\r\n\r\n\tfunction ShapePath() {\r\n\r\n\t\tthis.type = 'ShapePath';\r\n\r\n\t\tthis.color = new Color();\r\n\r\n\t\tthis.subPaths = [];\r\n\t\tthis.currentPath = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( ShapePath.prototype, {\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath = new Path();\r\n\t\t\tthis.subPaths.push( this.currentPath );\r\n\t\t\tthis.currentPath.moveTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath.lineTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts ) {\r\n\r\n\t\t\tthis.currentPath.splineThru( pts );\r\n\r\n\t\t},\r\n\r\n\t\ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\t\tvar shapes = [];\r\n\r\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\t\tvar tmpShape = new Shape();\r\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\t\tvar inside = false;\r\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\r\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t// not parallel\r\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tinside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\r\n\r\n\t\t\tvar subPaths = this.subPaths;\r\n\t\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\t\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\t\ttmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\t\tvar betterShapeHoles = [];\r\n\t\t\tvar newShapes = [];\r\n\t\t\tvar newShapeHoles = [];\r\n\t\t\tvar mainIdx = 0;\r\n\t\t\tvar tmpPoints;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\t\tif ( solid ) {\r\n\r\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\t\tvar ambiguous = false;\r\n\t\t\t\tvar toChange = [];\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tmpHoles;\r\n\r\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction Font( data ) {\r\n\r\n\t\tthis.type = 'Font';\r\n\r\n\t\tthis.data = data;\r\n\r\n\t}\r\n\r\n\tObject.assign( Font.prototype, {\r\n\r\n\t\tisFont: true,\r\n\r\n\t\tgenerateShapes: function ( text, size ) {\r\n\r\n\t\t\tif ( size === undefined ) size = 100;\r\n\r\n\t\t\tvar shapes = [];\r\n\t\t\tvar paths = createPaths( text, size, this.data );\r\n\r\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction createPaths( text, size, data ) {\r\n\r\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\r\n\t\tvar scale = size / data.resolution;\r\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\r\n\r\n\t\tvar paths = [];\r\n\r\n\t\tvar offsetX = 0, offsetY = 0;\r\n\r\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\tvar char = chars[ i ];\r\n\r\n\t\t\tif ( char === '\\n' ) {\r\n\r\n\t\t\t\toffsetX = 0;\r\n\t\t\t\toffsetY -= line_height;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\r\n\t\t\t\toffsetX += ret.offsetX;\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn paths;\r\n\r\n\t}\r\n\r\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\r\n\r\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tvar path = new ShapePath();\r\n\r\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn { offsetX: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction FontLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FontLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar font = scope.parse( json );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( font );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\treturn new Font( json );\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar context;\r\n\r\n\tvar AudioContext = {\r\n\r\n\t\tgetContext: function () {\r\n\r\n\t\t\tif ( context === undefined ) {\r\n\r\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\r\n\t\t},\r\n\r\n\t\tsetContext: function ( value ) {\r\n\r\n\t\t\tcontext = value;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction AudioLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\r\n\r\n\t\t\t\tvar context = AudioContext.getContext();\r\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n\r\n\t\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction StereoCamera() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( StereoCamera.prototype, {\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\r\n\r\n\t\t\tvar eyeRight = new Matrix4();\r\n\t\t\tvar eyeLeft = new Matrix4();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\r\n\r\n\t\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t\tinstance = this;\r\n\t\t\t\t\tfocus = camera.focus;\r\n\t\t\t\t\tfov = camera.fov;\r\n\t\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\t\tnear = camera.near;\r\n\t\t\t\t\tfar = camera.far;\r\n\t\t\t\t\tzoom = camera.zoom;\r\n\r\n\t\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\t\teyeSep = this.eyeSep / 2;\r\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\r\n\t\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t\t// for left eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t\t// for right eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction CubeCamera( near, far, cubeResolution ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\tvar fov = 90, aspect = 1;\r\n\r\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\r\n\r\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\r\n\r\n\t\tthis.update = function ( renderer, scene ) {\r\n\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderTarget.activeCubeFace = i;\r\n\t\t\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\r\n\tCubeCamera.prototype.constructor = CubeCamera;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioListener() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'AudioListener';\r\n\r\n\t\tthis.context = AudioContext.getContext();\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\r\n\t\tthis.filter = null;\r\n\r\n\t}\r\n\r\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: AudioListener,\r\n\r\n\t\tgetInput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tremoveFilter: function ( ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\t\tthis.filter = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.filter;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( value ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.gain.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMasterVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetMasterVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tvar listener = this.context.listener;\r\n\t\t\t\tvar up = this.up;\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tif ( listener.positionX ) {\r\n\r\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\r\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction Audio( listener ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Audio';\r\n\r\n\t\tthis.context = listener.context;\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\r\n\t\tthis.autoplay = false;\r\n\r\n\t\tthis.buffer = null;\r\n\t\tthis.loop = false;\r\n\t\tthis.startTime = 0;\r\n\t\tthis.offset = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.sourceType = 'empty';\r\n\r\n\t\tthis.filters = [];\r\n\r\n\t}\r\n\r\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Audio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tsetNodeSource: function ( audioNode ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'audioNode';\r\n\t\t\tthis.source = audioNode;\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMediaElementSource: function ( mediaElement ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaNode';\r\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetBuffer: function ( audioBuffer ) {\r\n\r\n\t\t\tthis.buffer = audioBuffer;\r\n\t\t\tthis.sourceType = 'buffer';\r\n\r\n\t\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar source = this.context.createBufferSource();\r\n\r\n\t\t\tsource.buffer = this.buffer;\r\n\t\t\tsource.loop = this.loop;\r\n\t\t\tsource.onended = this.onEnded.bind( this );\r\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\r\n\t\t\tthis.startTime = this.context.currentTime;\r\n\t\t\tsource.start( this.startTime, this.offset );\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\tthis.source = source;\r\n\r\n\t\t\treturn this.connect();\r\n\r\n\t\t},\r\n\r\n\t\tpause: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis.source.onended = null;\r\n\t\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\r\n\t\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\t\t\tthis.offset = 0;\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdisconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilters: function () {\r\n\r\n\t\t\treturn this.filters;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilters: function ( value ) {\r\n\r\n\t\t\tif ( ! value ) value = [];\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.filters = value;\r\n\t\t\t\tthis.connect();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.filters = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( filter ) {\r\n\r\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t\t},\r\n\r\n\t\tsetPlaybackRate: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.playbackRate = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetPlaybackRate: function () {\r\n\r\n\t\t\treturn this.playbackRate;\r\n\r\n\t\t},\r\n\r\n\t\tonEnded: function () {\r\n\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetLoop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.loop;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.loop = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.loop = this.loop;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PositionalAudio( listener ) {\r\n\r\n\t\tAudio.call( this, listener );\r\n\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\r\n\r\n\t\tconstructor: PositionalAudio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.panner;\r\n\r\n\t\t},\r\n\r\n\t\tgetRefDistance: function () {\r\n\r\n\t\t\treturn this.panner.refDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetRefDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.refDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetRolloffFactor: function () {\r\n\r\n\t\t\treturn this.panner.rolloffFactor;\r\n\r\n\t\t},\r\n\r\n\t\tsetRolloffFactor: function ( value ) {\r\n\r\n\t\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetDistanceModel: function () {\r\n\r\n\t\t\treturn this.panner.distanceModel;\r\n\r\n\t\t},\r\n\r\n\t\tsetDistanceModel: function ( value ) {\r\n\r\n\t\t\tthis.panner.distanceModel = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxDistance: function () {\r\n\r\n\t\t\treturn this.panner.maxDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetMaxDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.maxDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n\r\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tvar panner = this.panner;\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\r\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioAnalyser( audio, fftSize ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioAnalyser.prototype, {\r\n\r\n\t\tgetFrequencyData: function () {\r\n\r\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\t\treturn this.data;\r\n\r\n\t\t},\r\n\r\n\t\tgetAverageFrequency: function () {\r\n\r\n\t\t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tvalue += data[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value / data.length;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Buffered scene graph property that allows weighted accumulation.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\r\n\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\r\n\t\tvar bufferType = Float64Array,\r\n\t\t\tmixFunction;\r\n\r\n\t\tswitch ( typeName ) {\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\t\t\tbufferType = Array;\r\n\t\t\t\tmixFunction = this._select;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t\t}\r\n\r\n\t\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyMixer.prototype, {\r\n\r\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\t\taccumulate: function ( accuIndex, weight ) {\r\n\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentWeight = weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tvar mix = weight / currentWeight;\r\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\t\tapply: function ( accuIndex ) {\r\n\r\n\t\t\tvar stride = this.valueSize,\r\n\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\t\tbinding = this.binding;\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remember the state of the bound property and copy it to both accus\r\n\t\tsaveOriginalState: function () {\r\n\r\n\t\t\tvar binding = this.binding;\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\t\trestoreOriginalState: function () {\r\n\r\n\t\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// mix functions\r\n\r\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\r\n\r\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t\t},\r\n\r\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tvar s = 1 - t;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A reference to a real property in the scene graph.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\t// Characters [].:/ are reserved for track binding syntax.\r\n\tvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\r\n\r\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n\t}\r\n\r\n\tObject.assign( Composite.prototype, {\r\n\r\n\t\tgetValue: function ( array, offset ) {\r\n\r\n\t\t\tthis.bind(); // bind all binding\r\n\r\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t\t// and only call .getValue on the first\r\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function ( array, offset ) {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].bind();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\r\n\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\t\tthis.rootNode = rootNode;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyBinding, {\r\n\r\n\t\tComposite: Composite,\r\n\r\n\t\tcreate: function ( root, path, parsedPath ) {\r\n\r\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n\r\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t\t * node names, to ensure compatibility with parseTrackName().\r\n\t\t *\r\n\t\t * @param  {string} name Node name to be sanitized.\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tsanitizeNodeName: ( function () {\r\n\r\n\t\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\r\n\r\n\t\t\treturn function sanitizeNodeName( name ) {\r\n\r\n\t\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tparseTrackName: function () {\r\n\r\n\t\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n\t\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n\t\t\t// instead, we exclude reserved characters and match everything else.\r\n\t\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\r\n\t\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n\r\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n\t\t\t// be matched to parse the rest of the track name.\r\n\t\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\t\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\r\n\r\n\t\t\t// Object on target node, and accessor. May not contain reserved\r\n\t\t\t// characters. Accessor may contain any character except closing bracket.\r\n\t\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Property and accessor. May not contain reserved characters. Accessor may\r\n\t\t\t// contain any non-bracket characters.\r\n\t\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\tvar trackRe = new RegExp( ''\r\n\t\t\t\t+ '^'\r\n\t\t\t\t+ directoryRe\r\n\t\t\t\t+ nodeRe\r\n\t\t\t\t+ objectRe\r\n\t\t\t\t+ propertyRe\r\n\t\t\t\t+ '$'\r\n\t\t\t);\r\n\r\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\r\n\r\n\t\t\treturn function parseTrackName( trackName ) {\r\n\r\n\t\t\t\tvar matches = trackRe.exec( trackName );\r\n\r\n\t\t\t\tif ( ! matches ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar results = {\r\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t\t\tnodeName: matches[ 2 ],\r\n\t\t\t\t\tobjectName: matches[ 3 ],\r\n\t\t\t\t\tobjectIndex: matches[ 4 ],\r\n\t\t\t\t\tpropertyName: matches[ 5 ], // required\r\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n\r\n\t\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\r\n\r\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\r\n\r\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\r\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t\t\t// include '.' characters).\r\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\t\t\tresults.objectName = objectName;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfindNode: function ( root, nodeName ) {\r\n\r\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\t\t\treturn root;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into skeleton bones.\r\n\t\t\tif ( root.skeleton ) {\r\n\r\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\r\n\r\n\t\t\t\tif ( bone !== undefined ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into node subtree.\r\n\t\t\tif ( root.children ) {\r\n\r\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar childNode = children[ i ];\r\n\r\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\t\t\tif ( result ) return result;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\t\t\tif ( subTreeNode ) {\r\n\r\n\t\t\t\t\treturn subTreeNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t\t// these are used to \"bind\" a nonexistent property\r\n\t\t_getValue_unavailable: function () {},\r\n\t\t_setValue_unavailable: function () {},\r\n\r\n\t\tBindingType: {\r\n\t\t\tDirect: 0,\r\n\t\t\tEntireArray: 1,\r\n\t\t\tArrayElement: 2,\r\n\t\t\tHasFromToArray: 3\r\n\t\t},\r\n\r\n\t\tVersioning: {\r\n\t\t\tNone: 0,\r\n\t\t\tNeedsUpdate: 1,\r\n\t\t\tMatrixWorldNeedsUpdate: 2\r\n\t\t},\r\n\r\n\t\tGetterByBindingType: [\r\n\r\n\t\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t],\r\n\r\n\t\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t\t[\r\n\t\t\t\t// Direct\r\n\r\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// EntireArray\r\n\r\n\t\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// ArrayElement\r\n\r\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// HasToFromArray\r\n\r\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t]\r\n\r\n\t\t],\r\n\r\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t\t// prototype version of these methods with one that represents\r\n\t\t\t// the bound state. When the property is not found, the methods\r\n\t\t\t// become no-ops.\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t\t},\r\n\r\n\t\t// create getter / setter pair for a property in the scene graph\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar targetObject = this.node,\r\n\t\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\t\tthis.node = targetObject;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set fail state so we can just 'return' on error\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n\t\t\t// ensure there is a value node\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( objectName ) {\r\n\r\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// resolve property\r\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\t\tif ( nodeProperty === undefined ) {\r\n\r\n\t\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine versioning scheme\r\n\t\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine how the property gets bound\r\n\t\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\t\tif ( propertyIndex !== undefined ) {\r\n\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\r\n\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select getter / setter\r\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tthis.node = null;\r\n\r\n\t\t\t// back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( PropertyBinding.prototype, {\r\n\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\r\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t * \t-\tInstead pass this object as 'root'.\r\n\t *\r\n\t * \t-\tYou can also add and remove objects later when the mixer\r\n\t * \t\tis running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *  \tObjects of this class appear as one object to the mixer,\r\n\t *  \tso cache control of the individual objects must be done\r\n\t *  \ton the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t * \t- \tThe animated properties must be compatible among the\r\n\t * \t\tall objects in the group.\r\n\t *\r\n\t *  -\tA single property can either be controlled through a\r\n\t *  \ttarget group or directly, but not both.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationObjectGroup() {\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\tvar indices = {};\r\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t\t}\r\n\r\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._objects.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget bindingsPerObject() {\r\n\r\n\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationObjectGroup.prototype, {\r\n\r\n\t\tisAnimationObjectGroup: true,\r\n\r\n\t\tadd: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tpaths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length,\r\n\t\t\t\tknownObject = undefined;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\t\tindex = nObjects ++;\r\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\tknownObject = objects[ index ];\r\n\r\n\t\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// remove & forget\r\n\t\tuncache: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} // cached or active\r\n\r\n\t\t\t\t} // if object is known\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\t\tsubscribe_: function ( path, parsedPath ) {\r\n\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ],\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tobjects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\t\tindex = bindings.length;\r\n\r\n\t\t\tindicesByPath[ path ] = index;\r\n\r\n\t\t\tpaths.push( path );\r\n\t\t\tparsedPaths.push( parsedPath );\r\n\t\t\tbindings.push( bindingsForPath );\r\n\r\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = objects[ i ];\r\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bindingsForPath;\r\n\r\n\t\t},\r\n\r\n\t\tunsubscribe_: function ( path ) {\r\n\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar paths = this._paths,\r\n\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\r\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\t\tparsedPaths.pop();\r\n\r\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\t\tpaths.pop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\r\n\t * objects.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t *\r\n\t */\r\n\r\n\tfunction AnimationAction( mixer, clip, localRoot ) {\r\n\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot || null;\r\n\r\n\t\tvar tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\r\n\t\tvar interpolantSettings = {\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t\t}\r\n\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\r\n\t\tthis.loop = LoopRepeat;\r\n\t\tthis._loopCount = - 1;\r\n\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\r\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\r\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\r\n\r\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationAction.prototype, {\r\n\r\n\t\t// State & Scheduling\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tthis._mixer._activateAction( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\t\treturn this.reset();\r\n\r\n\t\t},\r\n\r\n\t\treset: function () {\r\n\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\r\n\t\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\t\tthis._loopCount = - 1;\t// forget previous loops\r\n\t\t\tthis._startTime = null;\t// forget scheduling\r\n\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tisRunning: function () {\r\n\r\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\t// return true when play has been called\r\n\t\tisScheduled: function () {\r\n\r\n\t\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\tstartAt: function ( time ) {\r\n\r\n\t\t\tthis._startTime = time;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( mode, repetitions ) {\r\n\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Weight\r\n\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\t\tsetEffectiveWeight: function ( weight ) {\r\n\r\n\t\t\tthis.weight = weight;\r\n\r\n\t\t\t// note: same logic as when updated at runtime\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\t\treturn this.stopFading();\r\n\r\n\t\t},\r\n\r\n\t\t// return the weight considering fading and .enabled\r\n\t\tgetEffectiveWeight: function () {\r\n\r\n\t\t\treturn this._effectiveWeight;\r\n\r\n\t\t},\r\n\r\n\t\tfadeIn: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tfadeOut: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\r\n\r\n\t\t\tfadeOutAction.fadeOut( duration );\r\n\t\t\tthis.fadeIn( duration );\r\n\r\n\t\t\tif ( warp ) {\r\n\r\n\t\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\r\n\r\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t\t},\r\n\r\n\t\tstopFading: function () {\r\n\r\n\t\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Time Scale Control\r\n\r\n\t\t// set the time scale stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\r\n\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\t// return the time scale considering warping and .paused\r\n\t\tgetEffectiveTimeScale: function () {\r\n\r\n\t\t\treturn this._effectiveTimeScale;\r\n\r\n\t\t},\r\n\r\n\t\tsetDuration: function ( duration ) {\r\n\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tsyncWith: function ( action ) {\r\n\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\thalt: function ( duration ) {\r\n\r\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t\t},\r\n\r\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now;\r\n\t\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstopWarping: function () {\r\n\r\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Object Accessors\r\n\r\n\t\tgetMixer: function () {\r\n\r\n\t\t\treturn this._mixer;\r\n\r\n\t\t},\r\n\r\n\t\tgetClip: function () {\r\n\r\n\t\t\treturn this._clip;\r\n\r\n\t\t},\r\n\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t\t},\r\n\r\n\t\t// Interna\r\n\r\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\r\n\r\n\t\t\t// called by the mixer\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\r\n\t\t\t\tthis._updateWeight( time );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar startTime = this._startTime;\r\n\r\n\t\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t\t// check for scheduled start of action\r\n\r\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply time scale and advance time\r\n\r\n\t\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t\t// note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\r\n\t\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\t\tif ( weight > 0 ) {\r\n\r\n\t\t\t\tvar interpolants = this._interpolants;\r\n\t\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_updateWeight: function ( time ) {\r\n\r\n\t\t\tvar weight = 0;\r\n\r\n\t\t\tif ( this.enabled ) {\r\n\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTimeScale: function ( time ) {\r\n\r\n\t\t\tvar timeScale = 0;\r\n\r\n\t\t\tif ( ! this.paused ) {\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTime: function ( deltaTime ) {\r\n\r\n\t\t\tvar time = this.time + deltaTime;\r\n\t\t\tvar duration = this._clip.duration;\r\n\t\t\tvar loop = this.loop;\r\n\t\t\tvar loopCount = this._loopCount;\r\n\r\n\t\t\tvar pingPong = ( loop === LoopPingPong );\r\n\r\n\t\t\tif ( deltaTime === 0 ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) return time;\r\n\r\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( loop === LoopOnce ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tthis._loopCount = 0;\r\n\t\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_stop: {\r\n\r\n\t\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t\t} else break handle_stop;\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t\t// wrap around\r\n\r\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif ( pending <= 0 ) {\r\n\r\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\t\tif ( pending === 1 ) {\r\n\r\n\t\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\t\t\t\t\treturn duration - time;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.time = time;\r\n\t\t\treturn time;\r\n\r\n\t\t},\r\n\r\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\r\n\r\n\t\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\t\tif ( pingPong ) {\r\n\r\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Player for AnimationClips.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationMixer( root ) {\r\n\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1.0;\r\n\r\n\t}\r\n\r\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: AnimationMixer,\r\n\r\n\t\t_bindAction: function ( action, prototypeAction ) {\r\n\r\n\t\t\tvar root = action._localRoot || this._root,\r\n\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\t\tvar track = tracks[ i ],\r\n\t\t\t\t\ttrackName = track.name,\r\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\t\tbinding = new PropertyMixer(\r\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_activateAction: function ( action ) {\r\n\r\n\t\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// increment reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lendAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_deactivateAction: function ( action ) {\r\n\r\n\t\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// decrement reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Memory manager\r\n\r\n\t\t_initMemoryManager: function () {\r\n\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\t\tthis._nActiveActions = 0;\r\n\r\n\t\t\tthis._actionsByClip = {};\r\n\t\t\t// inside:\r\n\t\t\t// {\r\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\r\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tthis.stats = {\r\n\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._actions.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveActions;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveBindings;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for AnimationAction objects\r\n\r\n\t\t_isActiveAction: function ( action ) {\r\n\r\n\t\t\tvar index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t\t},\r\n\r\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\t\tactionsForClip = {\r\n\r\n\t\t\t\t\tknownActions: [ action ],\r\n\t\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push( action );\r\n\r\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveAction: function ( action ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\r\n\t\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\t\tvar clipUuid = action._clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\t\tlastKnownAction =\r\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\r\n\t\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\r\n\r\n\t\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBindingsForAction: function ( action ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendAction: function ( action ) {\r\n\r\n\t\t\t// [ active actions |  inactive actions  ]\r\n\t\t\t// [  active actions >| inactive actions ]\r\n\t\t\t//                 s        a\r\n\t\t\t//                  <-swap->\r\n\t\t\t//                 a        s\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackAction: function ( action ) {\r\n\r\n\t\t\t// [  active actions  | inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions  ]\r\n\t\t\t//        a        s\r\n\t\t\t//         <-swap->\r\n\t\t\t//        s        a\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for PropertyMixer objects\r\n\r\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push( binding );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\t\tremove_empty_map: {\r\n\r\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\r\n\r\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t\t_lendControlInterpolant: function () {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\t\tinterpolant = new LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn interpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\r\n\r\n\t\t// return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\t\tclipAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n\t\t\t\tprototypeAction = null;\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\tvar existingAction =\r\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\t\treturn existingAction;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t\t// also, take the clip from the prototype action\r\n\t\t\t\tif ( clipObject === null )\r\n\t\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip must be known when specified via string\r\n\t\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t\t// allocate all resources required to run it\r\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\r\n\r\n\t\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t\t// and make the action known to the memory manager\r\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\t\treturn newAction;\r\n\r\n\t\t},\r\n\r\n\t\t// get an existing action\r\n\t\texistingAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// deactivates all previously scheduled actions\r\n\t\tstopAllAction: function () {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tactions[ i ].reset();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// advance the time and update apply the animation\r\n\t\tupdate: function ( deltaTime ) {\r\n\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t\t// run active actions\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// return this mixer's root target object\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._root;\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular clip\r\n\t\tuncacheClip: function ( clip ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tclipUuid = clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\r\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular root target object\r\n\t\tuncacheRoot: function ( root ) {\r\n\r\n\t\t\tvar rootUuid = root.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remove a targeted clip from the cache\r\n\t\tuncacheAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\t\tif ( action !== null ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Uniform( value ) {\r\n\r\n\t\tif ( typeof value === 'string' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\t\tvalue = arguments[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tUniform.prototype.clone = function () {\r\n\r\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferGeometry() {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\r\n\t}\r\n\r\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferGeometry,\r\n\r\n\t\tisInstancedBufferGeometry: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\r\n\r\n\t\tInterleavedBuffer.call( this, array, stride );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\r\n\r\n\t\tconstructor: InstancedInterleavedBuffer,\r\n\r\n\t\tisInstancedInterleavedBuffer: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\r\n\r\n\t\tBufferAttribute.call( this, array, itemSize );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferAttribute,\r\n\r\n\t\tisInstancedBufferAttribute: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://clara.io/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\r\n\tfunction Raycaster( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Raycaster.prototype, {\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Clock( autoStart ) {\r\n\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( Clock.prototype, {\r\n\r\n\t\tstart: function () {\r\n\r\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\r\n\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = true;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.autoStart = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetElapsedTime: function () {\r\n\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\r\n\t\t},\r\n\r\n\t\tgetDelta: function () {\r\n\r\n\t\t\tvar diff = 0;\r\n\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\t\tthis.start();\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.running ) {\r\n\r\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\r\n\r\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn diff;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\r\n\t */\r\n\r\n\tfunction Spherical( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Spherical.prototype, {\r\n\r\n\t\tset: function ( radius, phi, theta ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.phi = other.phi;\r\n\t\t\tthis.theta = other.theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// restrict phi to be betwee EPS and PI-EPS\r\n\t\tmakeSafe: function () {\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n\t *\r\n\t */\r\n\r\n\tfunction Cylindrical( radius, theta, y ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Cylindrical.prototype, {\r\n\r\n\t\tset: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.theta = theta;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\tthis.y = other.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Box2( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Line3( start, end ) {\r\n\r\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Line3.prototype, {\r\n\r\n\t\tset: function ( start, end ) {\r\n\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( line ) {\r\n\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tdelta: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSq: function () {\r\n\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tdistance: function () {\r\n\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPointParameter: function () {\r\n\r\n\t\t\tvar startP = new Vector3();\r\n\t\t\tvar startEnd = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn t;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\r\n\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( line ) {\r\n\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction ImmediateRenderObject( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.material = material;\r\n\t\tthis.render = function ( /* renderCallback */ ) {};\r\n\r\n\t}\r\n\r\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\r\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\r\n\r\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n\r\n\tVertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction SpotLightHelper( light, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = [\r\n\t\t\t0, 0, 0, \t0, 0, 1,\r\n\t\t\t0, 0, 0, \t1, 0, 1,\r\n\t\t\t0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t0, 0, 0, \t0, 1, 1,\r\n\t\t\t0, 0, 0, \t0, - 1, 1\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\t\tpositions.push(\r\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.cone = new LineSegments( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\r\n\r\n\tSpotLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t};\r\n\r\n\tSpotLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\t\tvar vector2 = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.cone.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction getBoneList( object ) {\r\n\r\n\t\tvar boneList = [];\r\n\r\n\t\tif ( object && object.isBone ) {\r\n\r\n\t\t\tboneList.push( object );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn boneList;\r\n\r\n\t}\r\n\r\n\tfunction SkeletonHelper( object ) {\r\n\r\n\t\tvar bones = getBoneList( object );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar color1 = new Color( 0, 0, 1 );\r\n\t\tvar color2 = new Color( 0, 1, 0 );\r\n\r\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.root = object;\r\n\t\tthis.bones = bones;\r\n\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\r\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\r\n\r\n\tSkeletonHelper.prototype.updateMatrixWorld = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar boneMatrix = new Matrix4();\r\n\t\tvar matrixWorldInv = new Matrix4();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tvar bones = this.bones;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tj += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PointLightHelper( light, sphereSize, color ) {\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\t\tvar d = light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\r\n\t}\r\n\r\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\r\n\tPointLightHelper.prototype.constructor = PointLightHelper;\r\n\r\n\tPointLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t};\r\n\r\n\tPointLightHelper.prototype.update = function () {\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction RectAreaLightHelper( light, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\r\n\r\n\t\tthis.line = new Line( geometry, material );\r\n\t\tthis.add( this.line );\r\n\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\r\n\r\n\tRectAreaLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\r\n\r\n\tRectAreaLightHelper.prototype.update = function () {\r\n\r\n\t\t// calculate new dimensions of the helper\r\n\r\n\t\tvar hx = this.light.width * 0.5;\r\n\t\tvar hy = this.light.height * 0.5;\r\n\r\n\t\tvar position = this.line.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\t// update vertices\r\n\r\n\t\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\r\n\t\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\r\n\t\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\r\n\t\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\r\n\t\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.line.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.line.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction HemisphereLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new OctahedronBufferGeometry( size );\r\n\t\tgeometry.rotateY( Math.PI * 0.5 );\r\n\r\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\r\n\r\n\t\tvar position = geometry.getAttribute( 'position' );\r\n\t\tvar colors = new Float32Array( position.count * 3 );\r\n\r\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n\t\tthis.add( new Mesh( geometry, this.material ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\r\n\r\n\tHemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\r\n\r\n\tHemisphereLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar color1 = new Color();\r\n\t\tvar color2 = new Color();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar mesh = this.children[ 0 ];\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\r\n\r\n\t\t\t\tcolor1.copy( this.light.color );\r\n\t\t\t\tcolor2.copy( this.light.groundColor );\r\n\r\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\r\n\r\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolors.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction GridHelper( size, divisions, color1, color2 ) {\r\n\r\n\t\tsize = size || 10;\r\n\t\tdivisions = divisions || 10;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar center = divisions / 2;\r\n\t\tvar step = size / divisions;\r\n\t\tvar halfSize = size / 2;\r\n\r\n\t\tvar vertices = [], colors = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n\r\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n\r\n\t\t\tvar color = i === center ? color1 : color2;\r\n\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\r\n\tGridHelper.prototype.constructor = GridHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author Hectate / http://www.github.com/Hectate\r\n\t */\r\n\r\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\r\n\r\n\t\tradius = radius || 10;\r\n\t\tradials = radials || 16;\r\n\t\tcircles = circles || 8;\r\n\t\tdivisions = divisions || 64;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar x, z;\r\n\t\tvar v, i, j, r, color;\r\n\r\n\t\t// create the radials\r\n\r\n\t\tfor ( i = 0; i <= radials; i ++ ) {\r\n\r\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\r\n\r\n\t\t\tx = Math.sin( v ) * radius;\r\n\t\t\tz = Math.cos( v ) * radius;\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tvertices.push( x, 0, z );\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t}\r\n\r\n\t\t// create the circles\r\n\r\n\t\tfor ( i = 0; i <= circles; i ++ ) {\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tr = radius - ( radius / circles * i );\r\n\r\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\r\n\r\n\t\t\t\t// first vertex\r\n\r\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t\t// second vertex\r\n\r\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\r\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\r\n\r\n\tFaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction DirectionalLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tif ( size === undefined ) size = 1;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t- size, size, 0,\r\n\t\t\tsize, size, 0,\r\n\t\t\tsize, - size, 0,\r\n\t\t\t- size, - size, 0,\r\n\t\t\t- size, size, 0\r\n\t\t], 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.lightPlane = new Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\r\n\t\tgeometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\t\tthis.targetLine = new Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\r\n\r\n\tDirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\r\n\t};\r\n\r\n\tDirectionalLightHelper.prototype.update = function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar v3 = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\r\n\t\t\t\tthis.targetLine.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\r\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLine.lookAt( v3 );\r\n\t\t\tthis.targetLine.scale.z = v3.length();\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\r\n\tfunction CameraHelper( camera ) {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar pointMap = {};\r\n\r\n\t\t// colors\r\n\r\n\t\tvar colorFrustum = new Color( 0xffaa00 );\r\n\t\tvar colorCone = new Color( 0xff0000 );\r\n\t\tvar colorUp = new Color( 0x00aaff );\r\n\t\tvar colorTarget = new Color( 0xffffff );\r\n\t\tvar colorCross = new Color( 0x333333 );\r\n\r\n\t\t// near\r\n\r\n\t\taddLine( 'n1', 'n2', colorFrustum );\r\n\t\taddLine( 'n2', 'n4', colorFrustum );\r\n\t\taddLine( 'n4', 'n3', colorFrustum );\r\n\t\taddLine( 'n3', 'n1', colorFrustum );\r\n\r\n\t\t// far\r\n\r\n\t\taddLine( 'f1', 'f2', colorFrustum );\r\n\t\taddLine( 'f2', 'f4', colorFrustum );\r\n\t\taddLine( 'f4', 'f3', colorFrustum );\r\n\t\taddLine( 'f3', 'f1', colorFrustum );\r\n\r\n\t\t// sides\r\n\r\n\t\taddLine( 'n1', 'f1', colorFrustum );\r\n\t\taddLine( 'n2', 'f2', colorFrustum );\r\n\t\taddLine( 'n3', 'f3', colorFrustum );\r\n\t\taddLine( 'n4', 'f4', colorFrustum );\r\n\r\n\t\t// cone\r\n\r\n\t\taddLine( 'p', 'n1', colorCone );\r\n\t\taddLine( 'p', 'n2', colorCone );\r\n\t\taddLine( 'p', 'n3', colorCone );\r\n\t\taddLine( 'p', 'n4', colorCone );\r\n\r\n\t\t// up\r\n\r\n\t\taddLine( 'u1', 'u2', colorUp );\r\n\t\taddLine( 'u2', 'u3', colorUp );\r\n\t\taddLine( 'u3', 'u1', colorUp );\r\n\r\n\t\t// target\r\n\r\n\t\taddLine( 'c', 't', colorTarget );\r\n\t\taddLine( 'p', 'c', colorCross );\r\n\r\n\t\t// cross\r\n\r\n\t\taddLine( 'cn1', 'cn2', colorCross );\r\n\t\taddLine( 'cn3', 'cn4', colorCross );\r\n\r\n\t\taddLine( 'cf1', 'cf2', colorCross );\r\n\t\taddLine( 'cf3', 'cf4', colorCross );\r\n\r\n\t\tfunction addLine( a, b, color ) {\r\n\r\n\t\t\taddPoint( a, color );\r\n\t\t\taddPoint( b, color );\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPoint( id, color ) {\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.camera = camera;\r\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.pointMap = pointMap;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\r\n\tCameraHelper.prototype.constructor = CameraHelper;\r\n\r\n\tCameraHelper.prototype.update = function () {\r\n\r\n\t\tvar geometry, pointMap;\r\n\r\n\t\tvar vector = new Vector3();\r\n\t\tvar camera = new Camera();\r\n\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\t\tvar points = pointMap[ point ];\r\n\r\n\t\t\tif ( points !== undefined ) {\r\n\r\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\r\n\t\t\tvar w = 1, h = 1;\r\n\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t\t// center / target\r\n\r\n\t\t\tsetPoint( 'c', 0, 0, - 1 );\r\n\t\t\tsetPoint( 't', 0, 0, 1 );\r\n\r\n\t\t\t// near\r\n\r\n\t\t\tsetPoint( 'n1', - w, - h, - 1 );\r\n\t\t\tsetPoint( 'n2', w, - h, - 1 );\r\n\t\t\tsetPoint( 'n3', - w, h, - 1 );\r\n\t\t\tsetPoint( 'n4', w, h, - 1 );\r\n\r\n\t\t\t// far\r\n\r\n\t\t\tsetPoint( 'f1', - w, - h, 1 );\r\n\t\t\tsetPoint( 'f2', w, - h, 1 );\r\n\t\t\tsetPoint( 'f3', - w, h, 1 );\r\n\t\t\tsetPoint( 'f4', w, h, 1 );\r\n\r\n\t\t\t// up\r\n\r\n\t\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u3', 0, h * 2, - 1 );\r\n\r\n\t\t\t// cross\r\n\r\n\t\t\tsetPoint( 'cf1', - w, 0, 1 );\r\n\t\t\tsetPoint( 'cf2', w, 0, 1 );\r\n\t\t\tsetPoint( 'cf3', 0, - h, 1 );\r\n\t\t\tsetPoint( 'cf4', 0, h, 1 );\r\n\r\n\t\t\tsetPoint( 'cn1', - w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn2', w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn3', 0, - h, - 1 );\r\n\t\t\tsetPoint( 'cn4', 0, h, - 1 );\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction BoxHelper( object, color ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\r\n\tBoxHelper.prototype.constructor = BoxHelper;\r\n\r\n\tBoxHelper.prototype.update = ( function () {\r\n\r\n\t\tvar box = new Box3();\r\n\r\n\t\treturn function update( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\t\tbox.setFromObject( this.object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\r\n\t\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tBoxHelper.prototype.setFromObject = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.update();\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3Helper( box, hex ) {\r\n\r\n\t\tthis.type = 'Box3Helper';\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\r\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\r\n\tBox3Helper.prototype.constructor = Box3Helper;\r\n\r\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar box = this.box;\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tbox.getCenter( this.position );\r\n\r\n\t\tbox.getSize( this.scale );\r\n\r\n\t\tthis.scale.multiplyScalar( 0.5 );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction PlaneHelper( plane, size, hex ) {\r\n\r\n\t\tthis.type = 'PlaneHelper';\r\n\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis.size = ( size === undefined ) ? 1 : size;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\t//\r\n\r\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\r\n\r\n\t\tvar geometry2 = new BufferGeometry();\r\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\r\n\r\n\t}\r\n\r\n\tPlaneHelper.prototype = Object.create( Line.prototype );\r\n\tPlaneHelper.prototype.constructor = PlaneHelper;\r\n\r\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar scale = - this.plane.constant;\r\n\r\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\r\n\r\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\r\n\r\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n\t\tthis.lookAt( this.plane.normal );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\r\n\tvar lineGeometry, coneGeometry;\r\n\r\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tif ( lineGeometry === undefined ) {\r\n\r\n\t\t\tlineGeometry = new BufferGeometry();\r\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\r\n\tArrowHelper.prototype.constructor = ArrowHelper;\r\n\r\n\tArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\t\tvar axis = new Vector3();\r\n\t\tvar radians;\r\n\r\n\t\treturn function setDirection( dir ) {\r\n\r\n\t\t\t// dir is assumed to be normalized\r\n\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\t\tthis.line.updateMatrix();\r\n\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\r\n\t};\r\n\r\n\tArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\t\tthis.line.material.color.copy( color );\r\n\t\tthis.cone.material.color.copy( color );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AxesHelper( size ) {\r\n\r\n\t\tsize = size || 1;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t0, 0, 0,\tsize, 0, 0,\r\n\t\t\t0, 0, 0,\t0, size, 0,\r\n\t\t\t0, 0, 0,\t0, 0, size\r\n\t\t];\r\n\r\n\t\tvar colors = [\r\n\t\t\t1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t0, 0, 1,\t0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\r\n\tAxesHelper.prototype.constructor = AxesHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\r\n\r\n\t}\r\n\r\n\tvar LineStrip = 0;\r\n\r\n\tvar LinePieces = 1;\r\n\r\n\tfunction MeshFaceMaterial( materials ) {\r\n\r\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction MultiMaterial( materials ) {\r\n\r\n\t\tif ( materials === undefined ) materials = [];\r\n\r\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\r\n\t\tmaterials.isMultiMaterial = true;\r\n\t\tmaterials.materials = materials;\r\n\t\tmaterials.clone = function () {\r\n\r\n\t\t\treturn materials.slice();\r\n\r\n\t\t};\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction PointCloud( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction Particle( material ) {\r\n\r\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\r\n\t\treturn new Sprite( material );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystem( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction PointCloudMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleBasicMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystemMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction Vertex( x, y, z ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new Vector3( x, y, z );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction DynamicBufferAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n\t}\r\n\r\n\tfunction Int8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\r\n\t\treturn new Int8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\r\n\t\treturn new Uint8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\r\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\r\n\t\treturn new Int16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\r\n\t\treturn new Uint16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\r\n\t\treturn new Int32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\r\n\t\treturn new Uint32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\r\n\t\treturn new Float32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float64Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\r\n\t\treturn new Float64BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tCurve.create = function ( construct, getPoint ) {\r\n\r\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\r\n\r\n\t\tconstruct.prototype = Object.create( Curve.prototype );\r\n\t\tconstruct.prototype.constructor = construct;\r\n\t\tconstruct.prototype.getPoint = getPoint;\r\n\r\n\t\treturn construct;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.assign( CurvePath.prototype, {\r\n\r\n\t\tcreatePointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from path points (for Line or Points objects)\r\n\r\n\t\t\tvar pts = this.getPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from equidistant sampling along the path\r\n\r\n\t\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateGeometry: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\tvar geometry = new Geometry();\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Path.prototype, {\r\n\r\n\t\tfromPoints: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction ClosedSplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\t\tthis.closed = true;\r\n\r\n\t}\r\n\r\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction SplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction Spline( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\tObject.assign( Spline.prototype, {\r\n\r\n\t\tinitFromArray: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction AxisHelper( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\r\n\t\treturn new AxesHelper( size );\r\n\r\n\t}\r\n\r\n\tfunction BoundingBoxHelper( object, color ) {\r\n\r\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\r\n\t\treturn new BoxHelper( object, color );\r\n\r\n\t}\r\n\r\n\tfunction EdgesHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\r\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype.setColors = function () {\r\n\r\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n\t};\r\n\r\n\tSkeletonHelper.prototype.update = function () {\r\n\r\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\r\n\r\n\t};\r\n\r\n\tfunction WireframeHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\r\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\r\n\t\t\treturn LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction XHRLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\r\n\t\treturn new FileLoader( manager );\r\n\r\n\t}\r\n\r\n\tfunction BinaryTextureLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\r\n\t\treturn new DataTextureLoader( manager );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tLine3.prototype.center = function ( optionalTarget ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\r\n\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t};\r\n\r\n\tObject.assign( _Math, {\r\n\r\n\t\trandom16: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\r\n\t\t\treturn Math.random();\r\n\r\n\t\t},\r\n\r\n\t\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\r\n\t\t\treturn _Math.floorPowerOfTwo( value );\r\n\r\n\t\t},\r\n\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\r\n\t\t\treturn _Math.ceilPowerOfTwo( value );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\textractPosition: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\r\n\t\t},\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tgetPosition: function () {\r\n\r\n\t\t\tvar v1;\r\n\r\n\t\t\treturn function getPosition() {\r\n\r\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t\t},\r\n\t\tmultiplyToArray: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateAxis: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\t\tv.transformDirection( this );\r\n\r\n\t\t},\r\n\t\tcrossVector: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\ttranslate: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateX: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateY: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateByAxis: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\r\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tPlane.prototype.isIntersectionLine = function ( line ) {\r\n\r\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\treturn this.intersectsLine( line );\r\n\r\n\t};\r\n\r\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t};\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\t\treturn this.intersectsPlane( plane );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tarea: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\r\n\t\t\treturn this.getArea();\r\n\r\n\t\t},\r\n\t\tbarycoordFromPoint: function ( point, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn this.getBarycoord( point, target );\r\n\r\n\t\t},\r\n\t\tmidpoint: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\r\n\t\t\treturn this.getMidpoint( target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn this.getNormal( target );\r\n\r\n\t\t},\r\n\t\tplane: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\r\n\t\t\treturn this.getPlane( target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn Triangle.getNormal( a, b, c, target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Shape.prototype, {\r\n\r\n\t\textractAllPoints: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\r\n\t\t\treturn this.extractPoints( divisions );\r\n\r\n\t\t},\r\n\t\textrude: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\r\n\t\t\treturn new ExtrudeGeometry( this, options );\r\n\r\n\t\t},\r\n\t\tmakeGeometry: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\r\n\t\t\treturn new ShapeGeometry( this, options );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tsetEulerFromRotationMatrix: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t\t},\r\n\t\tsetEulerFromQuaternion: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t\t},\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t\t},\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t\t},\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\r\n\r\n\t\t},\r\n\t\tapplyProjection: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\r\n\t\t\treturn this.applyMatrix4( m );\r\n\r\n\t\t},\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Geometry.prototype, {\r\n\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeLineDistances: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Object3D.prototype, {\r\n\r\n\t\tgetChildByName: function ( name ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\r\n\t\t},\r\n\t\trenderDepth: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t\t},\r\n\t\ttranslate: function ( distance, axis ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t\t},\r\n\t\tgetWorldRotation: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Object3D.prototype, {\r\n\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\treturn this.rotation.order;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\tthis.rotation.order = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( LOD.prototype, {\r\n\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t},\r\n\t\tset: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\treturn this.arcLengthDivisions;\r\n\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\tthis.arcLengthDivisions = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\t\tthis.setFocalLength( focalLength );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\t\tthis.shadow.bias = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( BufferAttribute.prototype, {\r\n\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\r\n\t\t\t\treturn this.array.length;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcopyIndicesArray: function ( /* indices */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferGeometry.prototype, {\r\n\r\n\t\taddIndex: function ( index ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\r\n\t\t},\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t\t}\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\r\n\t\t},\r\n\t\tclearDrawCalls: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\r\n\t\t},\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeOffsets: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( BufferGeometry.prototype, {\r\n\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\r\n\r\n\t\tgetArrays: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShapeList: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShape: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Uniform.prototype, {\r\n\r\n\t\tdynamic: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate: {\r\n\t\t\tvalue: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Material.prototype, {\r\n\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\r\n\t\t\t\treturn new Color();\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshading: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\tthis.flatShading = ( value === FlatShading );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\r\n\r\n\t\tmetal: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( ShaderMaterial.prototype, {\r\n\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( WebGLRenderer.prototype, {\r\n\r\n\t\tanimate: function ( callback ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\r\n\t\t\tthis.setAnimationLoop( callback );\r\n\r\n\t\t},\r\n\r\n\t\tgetCurrentRenderTarget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\r\n\t\t\treturn this.getRenderTarget();\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxAnisotropy: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\r\n\t\t\treturn this.capabilities.getMaxAnisotropy();\r\n\r\n\t\t},\r\n\r\n\t\tgetPrecision: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\r\n\t\t\treturn this.capabilities.precision;\r\n\r\n\t\t},\r\n\r\n\t\tresetGLState: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\r\n\t\t\treturn this.state.reset();\r\n\r\n\t\t},\r\n\r\n\t\tsupportsFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\r\n\t\t},\r\n\t\tsupportsHalfFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t},\r\n\t\tsupportsStandardDerivatives: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTextureS3TC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTexturePVRTC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t},\r\n\t\tsupportsBlendMinMax: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t},\r\n\t\tsupportsVertexTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\r\n\t\t\treturn this.capabilities.vertexTextures;\r\n\r\n\t\t},\r\n\t\tsupportsInstancedArrays: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t},\r\n\t\tenableScissorTest: function ( boolean ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\t\tthis.setScissorTest( boolean );\r\n\r\n\t\t},\r\n\t\tinitMaterial: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPrePlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPostPlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\tupdateShadowMap: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetFaceCulling: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLRenderer.prototype, {\r\n\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLShadowMap.prototype, {\r\n\r\n\t\tcullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* cullFace */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderReverseSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSingleSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\r\n\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\treturn this.texture.wrapS;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\treturn this.texture.wrapT;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\treturn this.texture.magFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\treturn this.texture.minFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\treturn this.texture.offset;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\tthis.texture.offset = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\treturn this.texture.repeat;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\tthis.texture.repeat = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\treturn this.texture.format;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\tthis.texture.format = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\treturn this.texture.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\tthis.texture.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebVRManager.prototype, {\r\n\r\n\t\tstanding: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tAudio.prototype.load = function ( file ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\r\n\t\tvar scope = this;\r\n\t\tvar audioLoader = new AudioLoader();\r\n\t\taudioLoader.load( file, function ( buffer ) {\r\n\r\n\t\t\tscope.setBuffer( buffer );\r\n\r\n\t\t} );\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tAudioAnalyser.prototype.getData = function () {\r\n\r\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t\treturn this.getFrequencyData();\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\r\n\t\treturn this.update( renderer, scene );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar GeometryUtils = {\r\n\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\t\tvar matrix;\r\n\r\n\t\t\tif ( geometry2.isMesh ) {\r\n\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function ( geometry ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tImageUtils.crossOrigin = undefined;\r\n\r\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTexture = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTextureCube = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction Projector() {\r\n\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.pickingRay = function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CanvasRenderer() {\r\n\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar SceneUtils = {\r\n\r\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tdetach: function ( /* child, parent, scene */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tattach: function ( /* child, scene, parent */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction LensFlare() {\r\n\r\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\r\n\r\n\t}\r\n\r\n\tvar exports = {};\r\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n\texports.WebGLRenderTarget = WebGLRenderTarget;\r\n\texports.WebGLRenderer = WebGLRenderer;\r\n\texports.ShaderLib = ShaderLib;\r\n\texports.UniformsLib = UniformsLib;\r\n\texports.UniformsUtils = UniformsUtils;\r\n\texports.ShaderChunk = ShaderChunk;\r\n\texports.FogExp2 = FogExp2;\r\n\texports.Fog = Fog;\r\n\texports.Scene = Scene;\r\n\texports.Sprite = Sprite;\r\n\texports.LOD = LOD;\r\n\texports.SkinnedMesh = SkinnedMesh;\r\n\texports.Skeleton = Skeleton;\r\n\texports.Bone = Bone;\r\n\texports.Mesh = Mesh;\r\n\texports.LineSegments = LineSegments;\r\n\texports.LineLoop = LineLoop;\r\n\texports.Line = Line;\r\n\texports.Points = Points;\r\n\texports.Group = Group;\r\n\texports.VideoTexture = VideoTexture;\r\n\texports.DataTexture = DataTexture;\r\n\texports.CompressedTexture = CompressedTexture;\r\n\texports.CubeTexture = CubeTexture;\r\n\texports.CanvasTexture = CanvasTexture;\r\n\texports.DepthTexture = DepthTexture;\r\n\texports.Texture = Texture;\r\n\texports.CompressedTextureLoader = CompressedTextureLoader;\r\n\texports.DataTextureLoader = DataTextureLoader;\r\n\texports.CubeTextureLoader = CubeTextureLoader;\r\n\texports.TextureLoader = TextureLoader;\r\n\texports.ObjectLoader = ObjectLoader;\r\n\texports.MaterialLoader = MaterialLoader;\r\n\texports.BufferGeometryLoader = BufferGeometryLoader;\r\n\texports.DefaultLoadingManager = DefaultLoadingManager;\r\n\texports.LoadingManager = LoadingManager;\r\n\texports.JSONLoader = JSONLoader;\r\n\texports.ImageLoader = ImageLoader;\r\n\texports.ImageBitmapLoader = ImageBitmapLoader;\r\n\texports.FontLoader = FontLoader;\r\n\texports.FileLoader = FileLoader;\r\n\texports.Loader = Loader;\r\n\texports.LoaderUtils = LoaderUtils;\r\n\texports.Cache = Cache;\r\n\texports.AudioLoader = AudioLoader;\r\n\texports.SpotLightShadow = SpotLightShadow;\r\n\texports.SpotLight = SpotLight;\r\n\texports.PointLight = PointLight;\r\n\texports.RectAreaLight = RectAreaLight;\r\n\texports.HemisphereLight = HemisphereLight;\r\n\texports.DirectionalLightShadow = DirectionalLightShadow;\r\n\texports.DirectionalLight = DirectionalLight;\r\n\texports.AmbientLight = AmbientLight;\r\n\texports.LightShadow = LightShadow;\r\n\texports.Light = Light;\r\n\texports.StereoCamera = StereoCamera;\r\n\texports.PerspectiveCamera = PerspectiveCamera;\r\n\texports.OrthographicCamera = OrthographicCamera;\r\n\texports.CubeCamera = CubeCamera;\r\n\texports.ArrayCamera = ArrayCamera;\r\n\texports.Camera = Camera;\r\n\texports.AudioListener = AudioListener;\r\n\texports.PositionalAudio = PositionalAudio;\r\n\texports.AudioContext = AudioContext;\r\n\texports.AudioAnalyser = AudioAnalyser;\r\n\texports.Audio = Audio;\r\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n\texports.StringKeyframeTrack = StringKeyframeTrack;\r\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n\texports.PropertyMixer = PropertyMixer;\r\n\texports.PropertyBinding = PropertyBinding;\r\n\texports.KeyframeTrack = KeyframeTrack;\r\n\texports.AnimationUtils = AnimationUtils;\r\n\texports.AnimationObjectGroup = AnimationObjectGroup;\r\n\texports.AnimationMixer = AnimationMixer;\r\n\texports.AnimationClip = AnimationClip;\r\n\texports.Uniform = Uniform;\r\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n\texports.BufferGeometry = BufferGeometry;\r\n\texports.Geometry = Geometry;\r\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n\texports.InterleavedBuffer = InterleavedBuffer;\r\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n\texports.Face3 = Face3;\r\n\texports.Object3D = Object3D;\r\n\texports.Raycaster = Raycaster;\r\n\texports.Layers = Layers;\r\n\texports.EventDispatcher = EventDispatcher;\r\n\texports.Clock = Clock;\r\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n\texports.LinearInterpolant = LinearInterpolant;\r\n\texports.DiscreteInterpolant = DiscreteInterpolant;\r\n\texports.CubicInterpolant = CubicInterpolant;\r\n\texports.Interpolant = Interpolant;\r\n\texports.Triangle = Triangle;\r\n\texports.Math = _Math;\r\n\texports.Spherical = Spherical;\r\n\texports.Cylindrical = Cylindrical;\r\n\texports.Plane = Plane;\r\n\texports.Frustum = Frustum;\r\n\texports.Sphere = Sphere;\r\n\texports.Ray = Ray;\r\n\texports.Matrix4 = Matrix4;\r\n\texports.Matrix3 = Matrix3;\r\n\texports.Box3 = Box3;\r\n\texports.Box2 = Box2;\r\n\texports.Line3 = Line3;\r\n\texports.Euler = Euler;\r\n\texports.Vector4 = Vector4;\r\n\texports.Vector3 = Vector3;\r\n\texports.Vector2 = Vector2;\r\n\texports.Quaternion = Quaternion;\r\n\texports.Color = Color;\r\n\texports.ImmediateRenderObject = ImmediateRenderObject;\r\n\texports.VertexNormalsHelper = VertexNormalsHelper;\r\n\texports.SpotLightHelper = SpotLightHelper;\r\n\texports.SkeletonHelper = SkeletonHelper;\r\n\texports.PointLightHelper = PointLightHelper;\r\n\texports.RectAreaLightHelper = RectAreaLightHelper;\r\n\texports.HemisphereLightHelper = HemisphereLightHelper;\r\n\texports.GridHelper = GridHelper;\r\n\texports.PolarGridHelper = PolarGridHelper;\r\n\texports.FaceNormalsHelper = FaceNormalsHelper;\r\n\texports.DirectionalLightHelper = DirectionalLightHelper;\r\n\texports.CameraHelper = CameraHelper;\r\n\texports.BoxHelper = BoxHelper;\r\n\texports.Box3Helper = Box3Helper;\r\n\texports.PlaneHelper = PlaneHelper;\r\n\texports.ArrowHelper = ArrowHelper;\r\n\texports.AxesHelper = AxesHelper;\r\n\texports.Shape = Shape;\r\n\texports.Path = Path;\r\n\texports.ShapePath = ShapePath;\r\n\texports.Font = Font;\r\n\texports.CurvePath = CurvePath;\r\n\texports.Curve = Curve;\r\n\texports.ImageUtils = ImageUtils;\r\n\texports.ShapeUtils = ShapeUtils;\r\n\texports.WebGLUtils = WebGLUtils;\r\n\texports.WireframeGeometry = WireframeGeometry;\r\n\texports.ParametricGeometry = ParametricGeometry;\r\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\r\n\texports.TetrahedronGeometry = TetrahedronGeometry;\r\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\r\n\texports.OctahedronGeometry = OctahedronGeometry;\r\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\r\n\texports.IcosahedronGeometry = IcosahedronGeometry;\r\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\r\n\texports.DodecahedronGeometry = DodecahedronGeometry;\r\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\r\n\texports.PolyhedronGeometry = PolyhedronGeometry;\r\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\r\n\texports.TubeGeometry = TubeGeometry;\r\n\texports.TubeBufferGeometry = TubeBufferGeometry;\r\n\texports.TorusKnotGeometry = TorusKnotGeometry;\r\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\r\n\texports.TorusGeometry = TorusGeometry;\r\n\texports.TorusBufferGeometry = TorusBufferGeometry;\r\n\texports.TextGeometry = TextGeometry;\r\n\texports.TextBufferGeometry = TextBufferGeometry;\r\n\texports.SphereGeometry = SphereGeometry;\r\n\texports.SphereBufferGeometry = SphereBufferGeometry;\r\n\texports.RingGeometry = RingGeometry;\r\n\texports.RingBufferGeometry = RingBufferGeometry;\r\n\texports.PlaneGeometry = PlaneGeometry;\r\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\r\n\texports.LatheGeometry = LatheGeometry;\r\n\texports.LatheBufferGeometry = LatheBufferGeometry;\r\n\texports.ShapeGeometry = ShapeGeometry;\r\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\r\n\texports.ExtrudeGeometry = ExtrudeGeometry;\r\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\r\n\texports.EdgesGeometry = EdgesGeometry;\r\n\texports.ConeGeometry = ConeGeometry;\r\n\texports.ConeBufferGeometry = ConeBufferGeometry;\r\n\texports.CylinderGeometry = CylinderGeometry;\r\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\r\n\texports.CircleGeometry = CircleGeometry;\r\n\texports.CircleBufferGeometry = CircleBufferGeometry;\r\n\texports.BoxGeometry = BoxGeometry;\r\n\texports.BoxBufferGeometry = BoxBufferGeometry;\r\n\texports.ShadowMaterial = ShadowMaterial;\r\n\texports.SpriteMaterial = SpriteMaterial;\r\n\texports.RawShaderMaterial = RawShaderMaterial;\r\n\texports.ShaderMaterial = ShaderMaterial;\r\n\texports.PointsMaterial = PointsMaterial;\r\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n\texports.MeshStandardMaterial = MeshStandardMaterial;\r\n\texports.MeshPhongMaterial = MeshPhongMaterial;\r\n\texports.MeshToonMaterial = MeshToonMaterial;\r\n\texports.MeshNormalMaterial = MeshNormalMaterial;\r\n\texports.MeshLambertMaterial = MeshLambertMaterial;\r\n\texports.MeshDepthMaterial = MeshDepthMaterial;\r\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\r\n\texports.MeshBasicMaterial = MeshBasicMaterial;\r\n\texports.LineDashedMaterial = LineDashedMaterial;\r\n\texports.LineBasicMaterial = LineBasicMaterial;\r\n\texports.Material = Material;\r\n\texports.Float64BufferAttribute = Float64BufferAttribute;\r\n\texports.Float32BufferAttribute = Float32BufferAttribute;\r\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\r\n\texports.Int32BufferAttribute = Int32BufferAttribute;\r\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\r\n\texports.Int16BufferAttribute = Int16BufferAttribute;\r\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\r\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\r\n\texports.Int8BufferAttribute = Int8BufferAttribute;\r\n\texports.BufferAttribute = BufferAttribute;\r\n\texports.ArcCurve = ArcCurve;\r\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\r\n\texports.CubicBezierCurve = CubicBezierCurve;\r\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\r\n\texports.EllipseCurve = EllipseCurve;\r\n\texports.LineCurve = LineCurve;\r\n\texports.LineCurve3 = LineCurve3;\r\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\r\n\texports.SplineCurve = SplineCurve;\r\n\texports.REVISION = REVISION;\r\n\texports.MOUSE = MOUSE;\r\n\texports.CullFaceNone = CullFaceNone;\r\n\texports.CullFaceBack = CullFaceBack;\r\n\texports.CullFaceFront = CullFaceFront;\r\n\texports.CullFaceFrontBack = CullFaceFrontBack;\r\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\r\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\r\n\texports.BasicShadowMap = BasicShadowMap;\r\n\texports.PCFShadowMap = PCFShadowMap;\r\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n\texports.FrontSide = FrontSide;\r\n\texports.BackSide = BackSide;\r\n\texports.DoubleSide = DoubleSide;\r\n\texports.FlatShading = FlatShading;\r\n\texports.SmoothShading = SmoothShading;\r\n\texports.NoColors = NoColors;\r\n\texports.FaceColors = FaceColors;\r\n\texports.VertexColors = VertexColors;\r\n\texports.NoBlending = NoBlending;\r\n\texports.NormalBlending = NormalBlending;\r\n\texports.AdditiveBlending = AdditiveBlending;\r\n\texports.SubtractiveBlending = SubtractiveBlending;\r\n\texports.MultiplyBlending = MultiplyBlending;\r\n\texports.CustomBlending = CustomBlending;\r\n\texports.AddEquation = AddEquation;\r\n\texports.SubtractEquation = SubtractEquation;\r\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n\texports.MinEquation = MinEquation;\r\n\texports.MaxEquation = MaxEquation;\r\n\texports.ZeroFactor = ZeroFactor;\r\n\texports.OneFactor = OneFactor;\r\n\texports.SrcColorFactor = SrcColorFactor;\r\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n\texports.SrcAlphaFactor = SrcAlphaFactor;\r\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n\texports.DstAlphaFactor = DstAlphaFactor;\r\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n\texports.DstColorFactor = DstColorFactor;\r\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n\texports.NeverDepth = NeverDepth;\r\n\texports.AlwaysDepth = AlwaysDepth;\r\n\texports.LessDepth = LessDepth;\r\n\texports.LessEqualDepth = LessEqualDepth;\r\n\texports.EqualDepth = EqualDepth;\r\n\texports.GreaterEqualDepth = GreaterEqualDepth;\r\n\texports.GreaterDepth = GreaterDepth;\r\n\texports.NotEqualDepth = NotEqualDepth;\r\n\texports.MultiplyOperation = MultiplyOperation;\r\n\texports.MixOperation = MixOperation;\r\n\texports.AddOperation = AddOperation;\r\n\texports.NoToneMapping = NoToneMapping;\r\n\texports.LinearToneMapping = LinearToneMapping;\r\n\texports.ReinhardToneMapping = ReinhardToneMapping;\r\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\r\n\texports.CineonToneMapping = CineonToneMapping;\r\n\texports.UVMapping = UVMapping;\r\n\texports.CubeReflectionMapping = CubeReflectionMapping;\r\n\texports.CubeRefractionMapping = CubeRefractionMapping;\r\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\r\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n\texports.RepeatWrapping = RepeatWrapping;\r\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n\texports.NearestFilter = NearestFilter;\r\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n\texports.LinearFilter = LinearFilter;\r\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n\texports.UnsignedByteType = UnsignedByteType;\r\n\texports.ByteType = ByteType;\r\n\texports.ShortType = ShortType;\r\n\texports.UnsignedShortType = UnsignedShortType;\r\n\texports.IntType = IntType;\r\n\texports.UnsignedIntType = UnsignedIntType;\r\n\texports.FloatType = FloatType;\r\n\texports.HalfFloatType = HalfFloatType;\r\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n\texports.UnsignedShort565Type = UnsignedShort565Type;\r\n\texports.UnsignedInt248Type = UnsignedInt248Type;\r\n\texports.AlphaFormat = AlphaFormat;\r\n\texports.RGBFormat = RGBFormat;\r\n\texports.RGBAFormat = RGBAFormat;\r\n\texports.LuminanceFormat = LuminanceFormat;\r\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n\texports.RGBEFormat = RGBEFormat;\r\n\texports.DepthFormat = DepthFormat;\r\n\texports.DepthStencilFormat = DepthStencilFormat;\r\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\r\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\r\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\r\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\r\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\r\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\r\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\r\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\r\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\r\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\r\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\r\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\r\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\r\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\r\n\texports.LoopOnce = LoopOnce;\r\n\texports.LoopRepeat = LoopRepeat;\r\n\texports.LoopPingPong = LoopPingPong;\r\n\texports.InterpolateDiscrete = InterpolateDiscrete;\r\n\texports.InterpolateLinear = InterpolateLinear;\r\n\texports.InterpolateSmooth = InterpolateSmooth;\r\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n\texports.WrapAroundEnding = WrapAroundEnding;\r\n\texports.TrianglesDrawMode = TrianglesDrawMode;\r\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n\texports.LinearEncoding = LinearEncoding;\r\n\texports.sRGBEncoding = sRGBEncoding;\r\n\texports.GammaEncoding = GammaEncoding;\r\n\texports.RGBEEncoding = RGBEEncoding;\r\n\texports.LogLuvEncoding = LogLuvEncoding;\r\n\texports.RGBM7Encoding = RGBM7Encoding;\r\n\texports.RGBM16Encoding = RGBM16Encoding;\r\n\texports.RGBDEncoding = RGBDEncoding;\r\n\texports.BasicDepthPacking = BasicDepthPacking;\r\n\texports.RGBADepthPacking = RGBADepthPacking;\r\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\r\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\r\n\texports.CubeGeometry = BoxGeometry;\r\n\texports.Face4 = Face4;\r\n\texports.LineStrip = LineStrip;\r\n\texports.LinePieces = LinePieces;\r\n\texports.MeshFaceMaterial = MeshFaceMaterial;\r\n\texports.MultiMaterial = MultiMaterial;\r\n\texports.PointCloud = PointCloud;\r\n\texports.Particle = Particle;\r\n\texports.ParticleSystem = ParticleSystem;\r\n\texports.PointCloudMaterial = PointCloudMaterial;\r\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n\texports.Vertex = Vertex;\r\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n\texports.Int8Attribute = Int8Attribute;\r\n\texports.Uint8Attribute = Uint8Attribute;\r\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n\texports.Int16Attribute = Int16Attribute;\r\n\texports.Uint16Attribute = Uint16Attribute;\r\n\texports.Int32Attribute = Int32Attribute;\r\n\texports.Uint32Attribute = Uint32Attribute;\r\n\texports.Float32Attribute = Float32Attribute;\r\n\texports.Float64Attribute = Float64Attribute;\r\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\r\n\texports.SplineCurve3 = SplineCurve3;\r\n\texports.Spline = Spline;\r\n\texports.AxisHelper = AxisHelper;\r\n\texports.BoundingBoxHelper = BoundingBoxHelper;\r\n\texports.EdgesHelper = EdgesHelper;\r\n\texports.WireframeHelper = WireframeHelper;\r\n\texports.XHRLoader = XHRLoader;\r\n\texports.BinaryTextureLoader = BinaryTextureLoader;\r\n\texports.GeometryUtils = GeometryUtils;\r\n\texports.Projector = Projector;\r\n\texports.CanvasRenderer = CanvasRenderer;\r\n\texports.SceneUtils = SceneUtils;\r\n\texports.LensFlare = LensFlare;\r\n\r\n\treturn exports;\t\r\n\r\n});\r\n\ndefine('skylark-graphics-webgl/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./webgl\",\r\n    \"./primitives/three\"\r\n], function(langx,webgl,threejs) {\r\n    langx.mixin(webgl,threejs);\r\n\r\n    return webgl;\r\n});\r\n\ndefine('skylark-graphics-webgl', ['skylark-graphics-webgl/main'], function (main) { return main; });\n\n"]}