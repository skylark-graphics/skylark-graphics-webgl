{"version":3,"sources":["skylark-utils-webgl-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","compact","array","filter","item","each","callback","key","undef","this","flatten","result","j","inArray","indexOf","makeArray","offset","startWith","concat","slice","elements","values","uniq","idx","first","items","n","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","allKeys","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","target","deep","safe","undefined","_parseMixinArgs","params","shift","sources","mixin","removeItem","splice","fallback","prop","safeMixin","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","arrays","objects","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","arg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","webgl","EventDispatcher","Vector2","x","y","Matrix4","console","Quaternion","z","w","_x","_y","_z","_w","Vector3","Matrix3","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","textureId","uuid","_Math","generateUUID","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","version","onUpdate","Vector4","WebGLRenderTarget","width","height","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","NearestFilter","Box3","min","max","Sphere","radius","Plane","normal","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","Color","r","g","setRGB","WebGLAnimation","onAnimationFrame","time","frame","isAnimating","animationLoop","stop","setAnimationLoop","setContext","WebGLAttributes","gl","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","warn","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","buffers","deleteBuffer","WeakMap","Euler","order","_order","DefaultOrder","Layers","mask","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","object3DId","children","up","DefaultUp","position","scale","onChange","defineProperties","enumerable","modelViewMatrix","normalMatrix","matrixWorld","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","OrthographicCamera","left","right","top","bottom","near","far","zoom","view","updateProjectionMatrix","Face3","c","color","materialIndex","isVector3","vertexNormals","isColor","vertexColors","Geometry","geometryId","vertices","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","BufferGeometry","bufferGeometryId","morphAttributes","drawRange","BoxGeometry","depth","widthSegments","heightSegments","depthSegments","parameters","fromBufferGeometry","BoxBufferGeometry","mergeVertices","buildPlane","u","udir","vdir","gridX","gridY","ix","iy","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","numberOfVertices","indices","addGroup","groupStart","floor","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","Material","materialId","fog","lights","blending","NormalBlending","side","FrontSide","flatShading","NoColors","opacity","transparent","blendSrc","SrcAlphaFactor","blendDst","OneMinusSrcAlphaFactor","blendEquation","AddEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","LessEqualDepth","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","needsUpdate","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","uniforms","vertexShader","fragmentShader","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv","uv2","index0AttributeName","uniformsNeedUpdate","Ray","direction","Triangle","Mesh","geometry","material","drawMode","TrianglesDrawMode","updateMorphTargets","WebGLBackground","renderer","render","renderList","scene","camera","forceClear","background","setClear","clearColor","clearAlpha","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","boxMesh","ShaderLib","cube","BackSide","removeAttribute","onBeforeRender","copyPosition","tCube","isTexture","planeCamera","planeMesh","renderBufferDirect","alpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","capabilities","setMode","mode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","getMaxAnisotropy","maxAnisotropy","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","numIntersection","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","viewNormalMatrix","getNormalMatrix","i4","plane","applyMatrix4","toArray","localClippingEnabled","renderingShadows","enableLocalClipping","enabled","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","onGeometryDispose","buffergeometry","geometries","removeEventListener","wireframeAttributes","memory","addEventListener","isBufferGeometry","isGeometry","_bufferGeometry","setFromObject","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","instanceCount","calls","TRIANGLES","triangles","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","lines","LINE_STRIP","LINE_LOOP","POINTS","points","reset","textures","programs","autoReset","absNumericalSort","abs","WebGLMorphtargets","program","objectInfluences","morphTargetInfluences","influences","influencesList","influence","morphInfluences","getUniforms","setValue","WebGLObjects","updateList","updateFromObject","dispose","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","nBlocks","blockSize","firstElem","arrayCacheF32","arraysEqual","copyArray","allocTexUnits","arrayCacheI32","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","mat2array","setValue3fm","uniformMatrix3fv","mat3array","setValue4fm","uniformMatrix4fv","mat4array","setValueT1","unit","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","parseUniform","pathLength","RePathPart","lastIndex","exec","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","addLineNumbers","string","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","chunks","envMapCubeUV","bumpMap","normalMap","objectSpaceNormalMap","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","ShaderChunk","pattern","unrollLoops","end","snippet","unroll","parseInt","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","PCFShadowMap","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","emissiveMap","displacementMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","gradientMap","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","isWebGLRenderTarget","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","normalMapType","ObjectSpaceNormalMap","isFogExp2","maxMorphTargets","maxMorphNormals","directional","point","spot","rectArea","hemi","shadowMap","DoubleSide","getProgramCode","onBeforeCompile","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","properties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItemsIndex","opaque","group","renderItem","renderItems","WebGLRenderLists","list","lists","UniformsCache","light","shadow","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","shadowCameraNear","shadowCameraFar","skyColor","groundColor","halfWidth","halfHeight","WebGLLights","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","intensity","isAmbientLight","isDirectionalLight","multiplyScalar","setFromMatrixPosition","vector3","sub","transformDirection","bias","mapSize","directionalShadowMap","directionalShadowMatrix","isSpotLight","cos","angle","penumbra","spotShadowMap","spotShadowMatrix","isRectAreaLight","matrix42","identity","matrix4","premultiply","extractRotation","isPointLight","pointShadowMap","pointShadowMatrix","isHemisphereLight","normalize","ambient","stateID","shadowsLength","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderState","renderStates","BasicDepthPacking","displacementScale","displacementBias","referencePosition","nearDistance","farDistance","WebGLShadowMap","_renderer","_objects","getDepthMaterial","lightPositionWorld","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","isMesh","isLine","isPoints","_frustum","intersectsObject","multiplyMatrices","k","kl","groupMaterial","depthMaterial","_lightPositionWorld","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_NumberOfMaterialVariants","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","RGBADepthPacking","distanceMaterial","autoUpdate","_gl","_state","disable","BLEND","setTest","setScissorTest","faceCount","il","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","makeTranslation","lookAt","updateMatrixWorld","multiply","setRenderTarget","face","vpDimensions","setFromMatrix","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","equals","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","initAttributes","newAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enabledAttributes","enableVertexAttribArray","attributeDivisors","disableUnusedAttributes","disableVertexAttribArray","enabledCapabilities","getCompressedTextureFormats","compressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","currentProgram","setBlending","NoBlending","currentBlendingEnabled","CustomBlending","currentBlendEquation","currentBlendEquationAlpha","blendEquationSeparate","convert","currentBlendSrc","currentBlendDst","currentBlendSrcAlpha","currentBlendDstAlpha","blendFuncSeparate","currentBlending","currentPremultipledAlpha","FUNC_ADD","ONE","ONE_MINUS_SRC_ALPHA","AdditiveBlending","blendFunc","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","MultiplyBlending","SRC_COLOR","SRC_ALPHA","setMaterial","frontFaceCW","CULL_FACE","setFlipSided","colorBuffer","setPolygonOffset","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidthAvailable","lineWidth","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","currentTextureSlot","webglType","webglTexture","boundTexture","currentBoundTextures","emptyTextures","compressedTexImage2D","currentScissor","currentViewport","maxVertexAttributes","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glVersion","VERSION","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","WebGLTextures","clampToMaxSize","maxSize","canvas","createElementNS","getContext","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","ImageBitmap","_canvas","floorPowerOfTwo","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RGB","RGB32F","HALF_FLOAT","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","f","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","_videoTextures","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","isPowerOfTwoImage","glInternalFormat","setTextureParameters","mipmap","jl","RGBFormat","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","UnsignedIntType","DepthStencilFormat","DEPTH_STENCIL","UnsignedInt248Type","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","MinEquation","MaxEquation","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","Group","PerspectiveCamera","fov","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","isPresenting","device","onVRDisplayPresentChange","eyeParameters","getEyeParameters","renderWidth","renderHeight","currentPixelRatio","getPixelRatio","currentSize","getSize","setDrawingBufferSize","animation","findGamepad","gamepads","navigator","getGamepads","gamepad","updateControllers","controllers","controller","pose","hasPosition","fromArray","orientation","compose","standingMatrix","decompose","buttonId","triggers","buttons","pressed","dispatchEvent","frameData","poseTarget","standingMatrixInverse","VRFrameData","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","userHeight","getController","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","setFromRotationMatrix","applyQuaternion","leftViewMatrix","rightViewMatrix","getInverse","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfRef","onSessionEvent","inputSources","inputSource","onSessionEnd","setFramebuffer","updateCamera","getDevicePose","baseLayer","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","onAnimationFrameCallback","XRDevice","setCompatibleXRDevice","setSession","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","getInputSources","THREE","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","initGLContext","_currentScissor","_scissor","_currentViewport","_viewport","morphtargets","programCache","_this","renderLists","_premultipliedAlpha","bufferRenderer","indexedBufferRenderer","onContextLost","preventDefault","_isContextLost","onContextRestore","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","setupVertexAttributes","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","vr","projectObject","sortObjects","isLight","currentRenderState","isSprite","intersectsSprite","_vector3","currentRenderList","isImmediateRenderObject","renderObjects","overrideMaterial","isArrayCamera","_currentArrayCamera","camera2","_width","_height","setProgram","_currentGeometryProgram","onAfterRender","initMaterial","materialProperties","lightsHash","lightsStateHash","_clipping","programChange","UniformsUtils","numSupportedMorphTargets","numSupportedMorphNormals","ambientLightColor","directionalLights","spotLights","rectAreaLights","pointLights","hemisphereLights","progUniforms","uniformsList","seqWithValue","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","_currentCamera","useCache","_currentMaterialId","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","boneTexture","sqrt","ceilPowerOfTwo","boneMatrices","boneTextureSize","toneMappingExposure","toneMappingWhitePoint","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","UniformsLib","LTC_1","ltc_2","LTC_2","upload","diffuse","emissive","emissiveIntensity","flipEnvMap","maxMipLevel","uvScaleMap","updateMatrix","uvTransform","dashSize","totalSize","gapSize","fogColor","isFog","fogNear","fogFar","fogDensity","density","specular","shininess","bumpScale","normalScale","negate","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","textureUnit","REVISION","_context","_alpha","_depth","_stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","domElement","_framebuffer","_currentFramebuffer","_currentScissorTest","_scissorTest","contextAttributes","rangeMin","rangeMax","message","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","setSize","updateStyle","style","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","determinant","updateBuffers","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","TriangleStripDrawMode","TriangleFanDrawMode","isLineSegments","isLineLoop","compile","traverse","isCamera","opaqueObjects","transparentObjects","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge1","edge2","vertex","edge","edges","index1","index2","getX","fromBufferAttribute","ParametricGeometry","slices","stacks","ParametricBufferGeometry","EPS","pu","pv","sliceCount","subVectors","crossVectors","PolyhedronGeometry","detail","PolyhedronBufferGeometry","subdivide","getVertexByIndex","subdivideFace","cols","pow","aj","lerp","bj","rows","pushVertex","appplyRadius","vertexBuffer","generateUVs","azimuth","PI","inclination","uvBuffer","correctUVs","correctSeam","x0","x1","x2","centroid","uvA","uvB","uvC","divideScalar","azi","correctUV","atan2","computeVertexNormals","normalizeNormals","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","generateBufferData","generateSegment","generateIndices","P","getPointAt","N","frames","B","sin","computeFrenetFrames","TorusKnotGeometry","tube","q","heightScale","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","cs","P1","P2","T","addVectors","cx","cy","TorusGeometry","arc","TorusBufferGeometry","linkedList","dim","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","earcutLinked","ear","minX","minY","invSize","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","nextZ","prevZ","intersects","locallyInside","isValidDiagonal","splitPolygon","eliminateHoles","holeIndices","outerNode","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","m","hx","hy","qx","tan","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","px","py","intersectsPolygon","middleInside","q1","q2","inside","a2","b2","an","bp","sum","removeDupEndPts","addContour","contour","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShape","shape","scalePt2","pt","vec","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","Number","EPSILON","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","sign","buildLidFaces","verticesArray","bevelEnabled","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","h","hl","holes","ahole","s","sl","slen1","slen2","f4","placeholder","addVertex","nextIndex","uvgen","generateTopUV","addUV","generateSideWallUV","vector2","curveSegments","bevelThickness","bevelSize","extrudePath","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","ShapeUtils","isClockWise","triangulateShape","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","clamp","inverseSegments","phi","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","computeFaceNormals","sourceVertices","face1","face2","dot","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","generateTorso","slope","indexRow","theta","sinTheta","cosTheta","indexArray","generateCap","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","RawShaderMaterial","STANDARD","TangentSpaceNormalMap","PHYSICAL","TOON","LoadingManager","onLoad","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","FileLoader","manager","DefaultLoadingManager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","t0","t1","c0","c1","c2","c3","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","t3","CatmullRomCurve3","curveType","CatmullRom","v0","v1","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v2","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","curves","autoClose","Path","currentPoint","setFromPoints","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","times","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","getTrackTypeForValueTypeName","typeName","parseKeyframeTrack","trackType","flattenJSON","MaterialLoader","BufferGeometryLoader","Loader","JSONLoader","ObjectLoader","texturePath","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPaths","chars","from","resolution","line_height","yMax","yMin","underlineThickness","paths","offsetX","offsetY","char","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","FontLoader","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","AudioContext","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","startTime","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","LoopRepeat","_loopCount","_startTime","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","threshold","PointCloud","ascSort","intersectObject","raycaster","recursive","raycast","Clock","autoStart","oldTime","elapsedTime","running","Spherical","Cylindrical","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","hex","nNormals","objGeometry","positions","SpotLightHelper","cone","getBoneList","boneList","isBone","SkeletonHelper","color1","color2","bone","VertexColors","PointLightHelper","sphereSize","RectAreaLightHelper","line","HemisphereLightHelper","rotateY","getAttribute","GridHelper","divisions","step","halfSize","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","addLine","addPoint","pointMap","FaceColors","colorFrustum","colorCone","colorUp","colorTarget","colorCross","BoxHelper","Box3Helper","box","computeBoundingSphere","PlaneHelper","positions2","ArrowHelper","dir","headLength","headWidth","lineGeometry","coneGeometry","translate","setDirection","setLength","AxesHelper","Face4","MeshFaceMaterial","materials","MultiMaterial","isMultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","LensFlare","isInteger","isFinite","assign","output","nextKey","_listeners","hasEventListener","listenerArray","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FlatShading","SmoothShading","UVMapping","RGBEFormat","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","RAD2DEG","lut","d0","d1","d2","d3","euclideanModulo","mapLinear","a1","b1","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","ceil","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","divide","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","cross","lengthSq","manhattanLength","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","lerpVectors","getY","rotateAround","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","getZ","setXYZ","transpose","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","invSX","invSY","invSZ","makePerspective","makeOrthographic","slerp","qa","qb","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","tDir","onChangeCallback","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","setZ","multiplyVectors","applyEuler","applyAxisAngle","qy","qz","qw","iz","iw","az","bz","projectOnVector","projectOnPlane","planeNormal","reflect","dz","setFromSpherical","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","isMatrix3","setFromMatrix4","transposeIntoArray","setUvTransform","rotate","ImageUtils","getDataURL","ImageData","putImageData","toDataURL","meta","isRootObject","metadata","generator","wrap","transformUv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","isBox3","setFromArray","maxX","maxY","setFromBufferAttribute","makeEmpty","expandByPoint","setFromCenterAndSize","expandByObject","isEmpty","getCenter","expandByVector","expandByScalar","containsPoint","containsBox","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","intersectsTriangle","satForAxes","axes","testAxis","extents","f0","f2","triangleNormal","triangle","distanceToPoint","clampedPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","sprite","negRadius","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","merge","merged","uniforms_src","uniforms_dst","parameter_src","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setHex","setStyle","setHSL","hue2rgb","handleAlpha","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","lerpHSL","hslA","hslB","specularmap","envmap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","basic","lambert","phong","standard","dashed","tFlip","equirect","tEquirect","distanceRGBA","physical","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","library","element","extractFromCache","uuids","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","clearViewOffset","zoomW","zoomH","scaleW","scaleH","computeBoundingBox","addFace","tempNormals","tempUVs","tempUVs2","cb","ab","fl","vA","vB","vC","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","precisionPoints","faceIndicesToRemove","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","copyAt","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","getIndex","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","array2","morphAttribute","isMaterial","newValue","currentValue","isRoot","srcPlanes","dstPlanes","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","setDrawMode","morphTargetDictionary","ml","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","inverseMatrix","tempA","tempB","tempC","faceIndex","fvA","fvB","fvC","faceMaterial","tl","targets","uvs_f","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isInterleavedBuffer","transformVertex","vertexPosition","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","intersectPoint","worldScale","addLevel","getObjectForDistance","matrixPosition","offsetMatrix","identityMatrix","getBoneByName","gbone","pos","rotq","scl","sw","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","distanceToRay","localThreshold","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","triangulate","hasHoles","outerLen","pts","holeIndex","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","freeze","Materials","Cache","files","file","loading","load","cached","dataUriRegex","dataUriRegexResult","isBase64","decodeURIComponent","atob","responseType","charCodeAt","parser","DOMParser","parseFromString","callbacks","header","requestHeader","setPath","setResponseType","setWithCredentials","setMimeType","loadTexture","loader","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","tangent","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","arraySlice","to","isTypedArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","endTime","nKeys","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","extractUrlBase","lastIndexOf","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","setOptions","res","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","webkitAudioContext","bufferCopy","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","RESERVED_CHARS_RE","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","LineStrip","LinePieces","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","attach","CubeGeometry","threejs","main"],"mappings":"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","file":"../skylark-utils-webgl-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\n    var skylark = {\n\n    };\n    return skylark;\n});\n\ndefine('skylark-langx/types',[\n],function(){\n    var type = (function() {\n        var class2type = {};\n\n        // Populate the class2type map\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n        });\n\n        return function type(obj) {\n            return obj == null ? String(obj) :\n                class2type[toString.call(obj)] || \"object\";\n        };\n    })();\n\n    function isArray(object) {\n        return object && object.constructor === Array;\n    }\n\n    function isArrayLike(obj) {\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\n    }\n\n    function isBoolean(obj) {\n        return typeof(obj) === \"boolean\";\n    }\n\n    function isDefined(obj) {\n        return typeof obj !== 'undefined';\n    }\n\n    function isDocument(obj) {\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\n    }\n\n    function isEmptyObject(obj) {\n        var name;\n        for (name in obj) {\n            if (obj[name] !== null) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function isFunction(value) {\n        return type(value) == \"function\";\n    }\n\n    function isHtmlNode(obj) {\n        return obj && (obj instanceof Node);\n    }\n\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\n        //Tests whether the value is an instance of a type.\n        if (value === undefined) {\n            return false;\n        } else if (value === null || type == Object) {\n            return true;\n        } else if (typeof value === \"number\") {\n            return type === Number;\n        } else if (typeof value === \"string\") {\n            return type === String;\n        } else if (typeof value === \"boolean\") {\n            return type === Boolean;\n        } else if (typeof value === \"string\") {\n            return type === String;\n        } else {\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\n        }\n    }\n\n    function isNumber(obj) {\n        return typeof obj == 'number';\n    }\n\n    function isObject(obj) {\n        return type(obj) == \"object\";\n    }\n\n    function isPlainObject(obj) {\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n    }\n\n    function isString(obj) {\n        return typeof obj === 'string';\n    }\n\n    function isWindow(obj) {\n        return obj && obj == obj.window;\n    }\n\n    function isSameOrigin(href) {\n        if (href) {\n            var origin = location.protocol + '//' + location.hostname;\n            if (location.port) {\n                origin += ':' + location.port;\n            }\n            return href.startsWith(origin);\n        }\n    }\n\n    return {\n\n        isArray: isArray,\n\n        isArrayLike: isArrayLike,\n\n        isBoolean: isBoolean,\n\n        isDefined: isDefined,\n\n        isDocument: isDocument,\n\n        isEmptyObject: isEmptyObject,\n\n        isFunction: isFunction,\n\n        isHtmlNode: isHtmlNode,\n\n        isNumber: isNumber,\n\n        isObject: isObject,\n\n        isPlainObject: isPlainObject,\n\n        isString: isString,\n\n        isSameOrigin: isSameOrigin,\n\n        isWindow: isWindow,\n\n        type: type\n    };\n\n});\ndefine('skylark-langx/arrays',[\n\t\"./types\"\n],function(types){\n\tvar filter = Array.prototype.filter,\n\t\tisArrayLike = types.isArrayLike;\n\n    function compact(array) {\n        return filter.call(array, function(item) {\n            return item != null;\n        });\n    }\n\n    function each(obj, callback) {\n        var length, key, i, undef, value;\n\n        if (obj) {\n            length = obj.length;\n\n            if (length === undef) {\n                // Loop object items\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        value = obj[key];\n                        if (callback.call(value, key, value) === false) {\n                            break;\n                        }\n                    }\n                }\n            } else {\n                // Loop array items\n                for (i = 0; i < length; i++) {\n                    value = obj[i];\n                    if (callback.call(value, i, value) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    function flatten(array) {\n        if (isArrayLike(array)) {\n            var result = [];\n            for (var i = 0; i < array.length; i++) {\n                var item = array[i];\n                if (isArrayLike(item)) {\n                    for (var j = 0; j < item.length; j++) {\n                        result.push(item[j]);\n                    }\n                } else {\n                    result.push(item);\n                }\n            }\n            return result;\n        } else {\n            return array;\n        }\n        //return array.length > 0 ? concat.apply([], array) : array;\n    }\n\n    function grep(array, callback) {\n        var out = [];\n\n        each(array, function(i, item) {\n            if (callback(item, i)) {\n                out.push(item);\n            }\n        });\n\n        return out;\n    }\n\n    function inArray(item, array) {\n        if (!array) {\n            return -1;\n        }\n        var i;\n\n        if (array.indexOf) {\n            return array.indexOf(item);\n        }\n\n        i = array.length;\n        while (i--) {\n            if (array[i] === item) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function makeArray(obj, offset, startWith) {\n       if (isArrayLike(obj) ) {\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\n      }\n\n      // array of single index\n      return [ obj ];             \n    }\n\n    function map(elements, callback) {\n        var value, values = [],\n            i, key\n        if (isArrayLike(elements))\n            for (i = 0; i < elements.length; i++) {\n                value = callback.call(elements[i], elements[i], i);\n                if (value != null) values.push(value)\n            }\n        else\n            for (key in elements) {\n                value = callback.call(elements[key], elements[key], key);\n                if (value != null) values.push(value)\n            }\n        return flatten(values)\n    }\n\n    function uniq(array) {\n        return filter.call(array, function(item, idx) {\n            return array.indexOf(item) == idx;\n        })\n    }\n\n    return {\n        compact: compact,\n\n        first : function(items,n) {\n            if (n) {\n                return items.slice(0,n);\n            } else {\n                return items[0];\n            }\n        },\n\n\t    each: each,\n\n        flatten: flatten,\n\n        inArray: inArray,\n\n        makeArray: makeArray,\n\n        map : map,\n        \n        uniq : uniq\n\n    }\n});\ndefine('skylark-langx/objects',[\n\t\"./types\"\n],function(types){\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\n        slice = Array.prototype.slice,\n        isBoolean = types.isBoolean,\n        isFunction = types.isFunction,\n\t\tisObject = types.isObject,\n\t\tisPlainObject = types.isPlainObject,\n\t\tisArray = types.isArray;\n\n     // An internal function for creating assigner functions.\n    function createAssigner(keysFunc, defaults) {\n        return function(obj) {\n          var length = arguments.length;\n          if (defaults) obj = Object(obj);  \n          if (length < 2 || obj == null) return obj;\n          for (var index = 1; index < length; index++) {\n            var source = arguments[index],\n                keys = keysFunc(source),\n                l = keys.length;\n            for (var i = 0; i < l; i++) {\n              var key = keys[i];\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\n            }\n          }\n          return obj;\n       };\n    }\n\n    // Internal recursive comparison function for `isEqual`.\n    var eq, deepEq;\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n    eq = function(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\n        // `null` or `undefined` only equal to itself (strict comparison).\n        if (a == null || b == null) return false;\n        // `NaN`s are equivalent, but non-reflexive.\n        if (a !== a) return b !== b;\n        // Exhaust primitive checks\n        var type = typeof a;\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n        return deepEq(a, b, aStack, bStack);\n    };\n\n    // Internal recursive comparison function for `isEqual`.\n    deepEq = function(a, b, aStack, bStack) {\n        // Unwrap any wrapped objects.\n        //if (a instanceof _) a = a._wrapped;\n        //if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className !== toString.call(b)) return false;\n        switch (className) {\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n            case '[object RegExp]':\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n            case '[object String]':\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n                // equivalent to `new String(\"5\")`.\n                return '' + a === '' + b;\n            case '[object Number]':\n                // `NaN`s are equivalent, but non-reflexive.\n                // Object(NaN) is equivalent to NaN.\n                if (+a !== +a) return +b !== +b;\n                // An `egal` comparison is performed for other numeric values.\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n            case '[object Date]':\n            case '[object Boolean]':\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n                // millisecond representations. Note that invalid dates with millisecond representations\n                // of `NaN` are not equivalent.\n                return +a === +b;\n            case '[object Symbol]':\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n        }\n\n        var areArrays = className === '[object Array]';\n        if (!areArrays) {\n            if (typeof a != 'object' || typeof b != 'object') return false;\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n            // from different frames are.\n            var aCtor = a.constructor, bCtor = b.constructor;\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                               isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n                return false;\n            }\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        aStack = aStack || [];\n        bStack = bStack || [];\n        var length = aStack.length;\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] === a) return bStack[length] === b;\n        }\n\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n\n        // Recursively compare objects and arrays.\n        if (areArrays) {\n            // Compare array lengths to determine if a deep comparison is necessary.\n            length = a.length;\n            if (length !== b.length) return false;\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (length--) {\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\n            }\n        } else {\n            // Deep compare objects.\n            var keys = Object.keys(a), key;\n            length = keys.length;\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\n            if (Object.keys(b).length !== length) return false;\n            while (length--) {\n                // Deep compare each member\n                key = keys[length];\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return true;\n    };\n\n    // Retrieve all the property names of an object.\n    function allKeys(obj) {\n        if (!isObject(obj)) return [];\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n\n    // Retrieve the names of an object's own properties.\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\n    function keys(obj) {\n        if (isObject(obj)) return [];\n        var keys = [];\n        for (var key in obj) if (has(obj, key)) keys.push(key);\n        return keys;\n    }\n\n    function has(obj, path) {\n        if (!isArray(path)) {\n            return obj != null && hasOwnProperty.call(obj, path);\n        }\n        var length = path.length;\n        for (var i = 0; i < length; i++) {\n            var key = path[i];\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n            obj = obj[key];\n        }\n        return !!length;\n    }\n\n   // Perform a deep comparison to check if two objects are equal.\n    function isEqual(a, b) {\n        return eq(a, b);\n    }\n\n    // Returns whether an object has a given set of `key:value` pairs.\n    function isMatch(object, attrs) {\n        var keys = keys(attrs), length = keys.length;\n        if (object == null) return !length;\n        var obj = Object(object);\n        for (var i = 0; i < length; i++) {\n          var key = keys[i];\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\n        }\n        return true;\n    }    \n\n    function _mixin(target, source, deep, safe) {\n        for (var key in source) {\n            //if (!source.hasOwnProperty(key)) {\n            //    continue;\n            //}\n            if (safe && target[key] !== undefined) {\n                continue;\n            }\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                    target[key] = {};\n                }\n                if (isArray(source[key]) && !isArray(target[key])) {\n                    target[key] = [];\n                }\n                _mixin(target[key], source[key], deep, safe);\n            } else if (source[key] !== undefined) {\n                target[key] = source[key]\n            }\n        }\n        return target;\n    }\n\n    function _parseMixinArgs(args) {\n        var params = slice.call(arguments, 0),\n            target = params.shift(),\n            deep = false;\n        if (isBoolean(params[params.length - 1])) {\n            deep = params.pop();\n        }\n\n        return {\n            target: target,\n            sources: params,\n            deep: deep\n        };\n    }\n\n    function mixin() {\n        var args = _parseMixinArgs.apply(this, arguments);\n\n        args.sources.forEach(function(source) {\n            _mixin(args.target, source, args.deep, false);\n        });\n        return args.target;\n    }\n\n    function removeItem(items, item) {\n        if (isArray(items)) {\n            var idx = items.indexOf(item);\n            if (idx != -1) {\n                items.splice(idx, 1);\n            }\n        } else if (isPlainObject(items)) {\n            for (var key in items) {\n                if (items[key] == item) {\n                    delete items[key];\n                    break;\n                }\n            }\n        }\n\n        return this;\n    }\n\n    function result(obj, path, fallback) {\n        if (!isArray(path)) {\n            path = [path]\n        };\n        var length = path.length;\n        if (!length) {\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\n        }\n        for (var i = 0; i < length; i++) {\n          var prop = obj == null ? void 0 : obj[path[i]];\n          if (prop === void 0) {\n            prop = fallback;\n            i = length; // Ensure we don't continue iterating.\n          }\n          obj = isFunction(prop) ? prop.call(obj) : prop;\n        }\n\n        return obj;\n    }\n\n    function safeMixin() {\n        var args = _parseMixinArgs.apply(this, arguments);\n\n        args.sources.forEach(function(source) {\n            _mixin(args.target, source, args.deep, true);\n        });\n        return args.target;\n    }\n\n    // Retrieve the values of an object's properties.\n    function values(obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var values = Array(length);\n        for (var i = 0; i < length; i++) {\n            values[i] = obj[keys[i]];\n        }\n        return values;\n    }\n\n\n    \n    function clone( /*anything*/ src,checkCloneMethod) {\n        var copy;\n        if (src === undefined || src === null) {\n            copy = src;\n        } else if (checkCloneMethod && src.clone) {\n            copy = src.clone();\n        } else if (isArray(src)) {\n            copy = [];\n            for (var i = 0; i < src.length; i++) {\n                copy.push(clone(src[i]));\n            }\n        } else if (isPlainObject(src)) {\n            copy = {};\n            for (var key in src) {\n                copy[key] = clone(src[key]);\n            }\n        } else {\n            copy = src;\n        }\n\n        return copy;\n\n    }\n\n    return {\n        allKeys: allKeys,\n\n        clone: clone,\n\n        defaults : createAssigner(allKeys, true),\n\n        has: has,\n\n        isEqual: isEqual,\n\n        isMatch: isMatch,\n\n        keys: keys,\n\n        mixin: mixin,\n\n        removeItem: removeItem,\n\n        result : result,\n        \n        safeMixin: safeMixin,\n\n        values: values\n    };\n\n});\ndefine('skylark-langx/klass',[\n    \"./arrays\",\n    \"./objects\",\n    \"./types\"\n],function(arrays,objects,types){\n    var uniq = arrays.uniq,\n        has = objects.has,\n        mixin = objects.mixin,\n        isArray = types.isArray,\n        isDefined = types.isDefined;\n    \n    function inherit(ctor, base) {\n        var f = function() {};\n        f.prototype = base.prototype;\n\n        ctor.prototype = new f();\n    }\n\n\n    var f1 = function() {\n        function extendClass(ctor, props, options) {\n            // Copy the properties to the prototype of the class.\n            var proto = ctor.prototype,\n                _super = ctor.superclass.prototype,\n                noOverrided = options && options.noOverrided;\n\n            for (var name in props) {\n                if (name === \"constructor\") {\n                    continue;\n                }\n\n                // Check if we're overwriting an existing function\n                var prop = props[name];\n                if (typeof props[name] == \"function\") {\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\n                          (function(name, fn, superFn) {\n                            return function() {\n                                var tmp = this.overrided;\n\n                                // Add a new ._super() method that is the same method\n                                // but on the super-class\n                                this.overrided = superFn;\n\n                                // The method only need to be bound temporarily, so we\n                                // remove it when we're done executing\n                                var ret = fn.apply(this, arguments);\n\n                                this.overrided = tmp;\n\n                                return ret;\n                            };\n                        })(name, prop, _super[name]) :\n                        prop;\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\n                    Object.defineProperty(proto,name,prop);\n                } else {\n                    proto[name] = prop;\n                }\n            }\n            return ctor;\n        }\n\n        function serialMixins(ctor,mixins) {\n            var result = [];\n\n            mixins.forEach(function(mixin){\n                if (has(mixin,\"__mixins__\")) {\n                     throw new Error(\"nested mixins\");\n                }\n                var clss = [];\n                while (mixin) {\n                    clss.unshift(mixin);\n                    mixin = mixin.superclass;\n                }\n                result = result.concat(clss);\n            });\n\n            result = uniq(result);\n\n            result = result.filter(function(mixin){\n                var cls = ctor;\n                while (cls) {\n                    if (mixin === cls) {\n                        return false;\n                    }\n                    if (has(cls,\"__mixins__\")) {\n                        var clsMixines = cls[\"__mixins__\"];\n                        for (var i=0; i<clsMixines.length;i++) {\n                            if (clsMixines[i]===mixin) {\n                                return false;\n                            }\n                        }\n                    }\n                    cls = cls.superclass;\n                }\n                return true;\n            });\n\n            if (result.length>0) {\n                return result;\n            } else {\n                return false;\n            }\n        }\n\n        function mergeMixins(ctor,mixins) {\n            var newCtor =ctor;\n            for (var i=0;i<mixins.length;i++) {\n                var xtor = new Function();\n                xtor.prototype = Object.create(newCtor.prototype);\n                xtor.__proto__ = newCtor;\n                xtor.superclass = null;\n                mixin(xtor.prototype,mixins[i].prototype);\n                xtor.prototype.__mixin__ = mixins[i];\n                newCtor = xtor;\n            }\n\n            return newCtor;\n        }\n\n        return function createClass(props, parent, mixins,options) {\n            if (isArray(parent)) {\n                options = mixins;\n                mixins = parent;\n                parent = null;\n            }\n            parent = parent || Object;\n\n            if (isDefined(mixins) && !isArray(mixins)) {\n                options = mixins;\n                mixins = false;\n            }\n\n            var innerParent = parent;\n\n            if (mixins) {\n                mixins = serialMixins(innerParent,mixins);\n            }\n\n            if (mixins) {\n                innerParent = mergeMixins(innerParent,mixins);\n            }\n\n\n            var _constructor = props.constructor;\n            if (_constructor === Object) {\n                _constructor = function() {\n                    if (this.init) {\n                        return this.init.apply(this, arguments);\n                    }\n                };\n            };\n\n            var klassName = props.klassName || \"\",\n                ctor = new Function(\n                    \"return function \" + klassName + \"() {\" +\n                    \"var inst = this,\" +\n                    \" ctor = arguments.callee;\" +\n                    \"if (!(inst instanceof ctor)) {\" +\n                    \"inst = Object.create(ctor.prototype);\" +\n                    \"}\" +\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \n                    \"}\"\n                )();\n\n\n            ctor._constructor = _constructor;\n            // Populate our constructed prototype object\n            ctor.prototype = Object.create(innerParent.prototype);\n\n            // Enforce the constructor to be what we expect\n            ctor.prototype.constructor = ctor;\n            ctor.superclass = parent;\n\n            // And make this class extendable\n            ctor.__proto__ = innerParent;\n\n            if (mixins) {\n                ctor.__mixins__ = mixins;\n            }\n\n            if (!ctor.partial) {\n                ctor.partial = function(props, options) {\n                    return extendClass(this, props, options);\n                };\n            }\n            if (!ctor.inherit) {\n                ctor.inherit = function(props, mixins,options) {\n                    return createClass(props, this, mixins,options);\n                };\n            }\n\n            ctor.partial(props, options);\n\n            return ctor;\n        };\n    }\n\n    var createClass = f1();\n\n    return createClass;\n});\ndefine('skylark-langx/ArrayStore',[\n    \"./klass\"\n],function(klass){\n    var SimpleQueryEngine = function(query, options){\n        // summary:\n        //      Simple query engine that matches using filter functions, named filter\n        //      functions or objects by name-value on a query object hash\n        //\n        // description:\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\n        //      the use of a simple object hash as a filter.  The hash will be used to\n        //      match properties on data objects with the corresponding value given. In\n        //      other words, only exact matches will be returned.\n        //\n        //      This function can be used as a template for more complex query engines;\n        //      for example, an engine can be created that accepts an object hash that\n        //      contains filtering functions, or a string that gets evaluated, etc.\n        //\n        //      When creating a new dojo.store, simply set the store's queryEngine\n        //      field as a reference to this function.\n        //\n        // query: Object\n        //      An object hash with fields that may match fields of items in the store.\n        //      Values in the hash will be compared by normal == operator, but regular expressions\n        //      or any object that provides a test() method are also supported and can be\n        //      used to match strings by more complex expressions\n        //      (and then the regex's or object's test() method will be used to match values).\n        //\n        // options: dojo/store/api/Store.QueryOptions?\n        //      An object that contains optional information such as sort, start, and count.\n        //\n        // returns: Function\n        //      A function that caches the passed query under the field \"matches\".  See any\n        //      of the \"query\" methods on dojo.stores.\n        //\n        // example:\n        //      Define a store with a reference to this engine, and set up a query method.\n        //\n        //  |   var myStore = function(options){\n        //  |       //  ...more properties here\n        //  |       this.queryEngine = SimpleQueryEngine;\n        //  |       //  define our query method\n        //  |       this.query = function(query, options){\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\n        //  |       };\n        //  |   };\n\n        // create our matching query function\n        switch(typeof query){\n            default:\n                throw new Error(\"Can not query with a \" + typeof query);\n            case \"object\": case \"undefined\":\n                var queryObject = query;\n                query = function(object){\n                    for(var key in queryObject){\n                        var required = queryObject[key];\n                        if(required && required.test){\n                            // an object can provide a test method, which makes it work with regex\n                            if(!required.test(object[key], object)){\n                                return false;\n                            }\n                        }else if(required != object[key]){\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n                break;\n            case \"string\":\n                // named query\n                if(!this[query]){\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\n                }\n                query = this[query];\n                // fall through\n            case \"function\":\n                // fall through\n        }\n        \n        function filter(arr, callback, thisObject){\n            // summary:\n            //      Returns a new Array with those items from arr that match the\n            //      condition implemented by callback.\n            // arr: Array\n            //      the array to iterate over.\n            // callback: Function|String\n            //      a function that is invoked with three arguments (item,\n            //      index, array). The return of this function is expected to\n            //      be a boolean which determines whether the passed-in item\n            //      will be included in the returned array.\n            // thisObject: Object?\n            //      may be used to scope the call to callback\n            // returns: Array\n            // description:\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\n            //      For more details, see:\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\n            // example:\n            //  | // returns [2, 3, 4]\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\n\n            // TODO: do we need \"Ctr\" here like in map()?\n            var i = 0, l = arr && arr.length || 0, out = [], value;\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\n            if(thisObject){\n                for(; i < l; ++i){\n                    value = arr[i];\n                    if(callback.call(thisObject, value, i, arr)){\n                        out.push(value);\n                    }\n                }\n            }else{\n                for(; i < l; ++i){\n                    value = arr[i];\n                    if(callback(value, i, arr)){\n                        out.push(value);\n                    }\n                }\n            }\n            return out; // Array\n        }\n\n        function execute(array){\n            // execute the whole query, first we filter\n            var results = filter(array, query);\n            // next we sort\n            var sortSet = options && options.sort;\n            if(sortSet){\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\n                    for(var sort, i=0; sort = sortSet[i]; i++){\n                        var aValue = a[sort.attribute];\n                        var bValue = b[sort.attribute];\n                        // valueOf enables proper comparison of dates\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\n                        if (aValue != bValue){\n                            // modified by lwf 2016/07/09\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\n                        }\n                    }\n                    return 0;\n                });\n            }\n            // now we paginate\n            if(options && (options.start || options.count)){\n                var total = results.length;\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\n                results.total = total;\n            }\n            return results;\n        }\n        execute.matches = query;\n        return execute;\n    };\n\n    var QueryResults = function(results){\n        // summary:\n        //      A function that wraps the results of a store query with additional\n        //      methods.\n        // description:\n        //      QueryResults is a basic wrapper that allows for array-like iteration\n        //      over any kind of returned data from a query.  While the simplest store\n        //      will return a plain array of data, other stores may return deferreds or\n        //      promises; this wrapper makes sure that *all* results can be treated\n        //      the same.\n        //\n        //      Additional methods include `forEach`, `filter` and `map`.\n        // results: Array|dojo/promise/Promise\n        //      The result set as an array, or a promise for an array.\n        // returns:\n        //      An array-like object that can be used for iterating over.\n        // example:\n        //      Query a store and iterate over the results.\n        //\n        //  |   store.query({ prime: true }).forEach(function(item){\n        //  |       //  do something\n        //  |   });\n\n        if(!results){\n            return results;\n        }\n\n        var isPromise = !!results.then;\n        // if it is a promise it may be frozen\n        if(isPromise){\n            results = Object.delegate(results);\n        }\n        function addIterativeMethod(method){\n            // Always add the iterative methods so a QueryResults is\n            // returned whether the environment is ES3 or ES5\n            results[method] = function(){\n                var args = arguments;\n                var result = Deferred.when(results, function(results){\n                    //Array.prototype.unshift.call(args, results);\n                    return QueryResults(Array.prototype[method].apply(results, args));\n                });\n                // forEach should only return the result of when()\n                // when we're wrapping a promise\n                if(method !== \"forEach\" || isPromise){\n                    return result;\n                }\n            };\n        }\n\n        addIterativeMethod(\"forEach\");\n        addIterativeMethod(\"filter\");\n        addIterativeMethod(\"map\");\n        if(results.total == null){\n            results.total = Deferred.when(results, function(results){\n                return results.length;\n            });\n        }\n        return results; // Object\n    };\n\n    var ArrayStore = klass({\n        \"klassName\": \"ArrayStore\",\n\n        \"queryEngine\": SimpleQueryEngine,\n        \n        \"idProperty\": \"id\",\n\n\n        get: function(id){\n            // summary:\n            //      Retrieves an object by its identity\n            // id: Number\n            //      The identity to use to lookup the object\n            // returns: Object\n            //      The object in the store that matches the given id.\n            return this.data[this.index[id]];\n        },\n\n        getIdentity: function(object){\n            return object[this.idProperty];\n        },\n\n        put: function(object, options){\n            var data = this.data,\n                index = this.index,\n                idProperty = this.idProperty;\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\n            if(id in index){\n                // object exists\n                if(options && options.overwrite === false){\n                    throw new Error(\"Object already exists\");\n                }\n                // replace the entry in data\n                data[index[id]] = object;\n            }else{\n                // add the new object\n                index[id] = data.push(object) - 1;\n            }\n            return id;\n        },\n\n        add: function(object, options){\n            (options = options || {}).overwrite = false;\n            // call put with overwrite being false\n            return this.put(object, options);\n        },\n\n        remove: function(id){\n            // summary:\n            //      Deletes an object by its identity\n            // id: Number\n            //      The identity to use to delete the object\n            // returns: Boolean\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\n            var index = this.index;\n            var data = this.data;\n            if(id in index){\n                data.splice(index[id], 1);\n                // now we have to reindex\n                this.setData(data);\n                return true;\n            }\n        },\n        query: function(query, options){\n            // summary:\n            //      Queries the store for objects.\n            // query: Object\n            //      The query to use for retrieving objects from the store.\n            // options: dojo/store/api/Store.QueryOptions?\n            //      The optional arguments to apply to the resultset.\n            // returns: dojo/store/api/Store.QueryResults\n            //      The results of the query, extended with iterative methods.\n            //\n            // example:\n            //      Given the following store:\n            //\n            //  |   var store = new Memory({\n            //  |       data: [\n            //  |           {id: 1, name: \"one\", prime: false },\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\n            //  |           {id: 3, name: \"three\", prime: true},\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\n            //  |           {id: 5, name: \"five\", prime: true}\n            //  |       ]\n            //  |   });\n            //\n            //  ...find all items where \"prime\" is true:\n            //\n            //  |   var results = store.query({ prime: true });\n            //\n            //  ...or find all items where \"even\" is true:\n            //\n            //  |   var results = store.query({ even: true });\n            return QueryResults(this.queryEngine(query, options)(this.data));\n        },\n\n        setData: function(data){\n            // summary:\n            //      Sets the given data as the source for this store, and indexes it\n            // data: Object[]\n            //      An array of objects to use as the source of data.\n            if(data.items){\n                // just for convenience with the data format IFRS expects\n                this.idProperty = data.identifier || this.idProperty;\n                data = this.data = data.items;\n            }else{\n                this.data = data;\n            }\n            this.index = {};\n            for(var i = 0, l = data.length; i < l; i++){\n                this.index[data[i][this.idProperty]] = i;\n            }\n        },\n\n        init: function(options) {\n            for(var i in options){\n                this[i] = options[i];\n            }\n            this.setData(this.data || []);\n        }\n\n    });\n\n\treturn ArrayStore;\n});\ndefine('skylark-langx/aspect',[\n],function(){\n\n  var undefined, nextId = 0;\n    function advise(dispatcher, type, advice, receiveArguments){\n        var previous = dispatcher[type];\n        var around = type == \"around\";\n        var signal;\n        if(around){\n            var advised = advice(function(){\n                return previous.advice(this, arguments);\n            });\n            signal = {\n                remove: function(){\n                    if(advised){\n                        advised = dispatcher = advice = null;\n                    }\n                },\n                advice: function(target, args){\n                    return advised ?\n                        advised.apply(target, args) :  // called the advised function\n                        previous.advice(target, args); // cancelled, skip to next one\n                }\n            };\n        }else{\n            // create the remove handler\n            signal = {\n                remove: function(){\n                    if(signal.advice){\n                        var previous = signal.previous;\n                        var next = signal.next;\n                        if(!next && !previous){\n                            delete dispatcher[type];\n                        }else{\n                            if(previous){\n                                previous.next = next;\n                            }else{\n                                dispatcher[type] = next;\n                            }\n                            if(next){\n                                next.previous = previous;\n                            }\n                        }\n\n                        // remove the advice to signal that this signal has been removed\n                        dispatcher = advice = signal.advice = null;\n                    }\n                },\n                id: nextId++,\n                advice: advice,\n                receiveArguments: receiveArguments\n            };\n        }\n        if(previous && !around){\n            if(type == \"after\"){\n                // add the listener to the end of the list\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\n                while(previous.next && (previous = previous.next)){}\n                previous.next = signal;\n                signal.previous = previous;\n            }else if(type == \"before\"){\n                // add to beginning\n                dispatcher[type] = signal;\n                signal.next = previous;\n                previous.previous = signal;\n            }\n        }else{\n            // around or first one just replaces\n            dispatcher[type] = signal;\n        }\n        return signal;\n    }\n    function aspect(type){\n        return function(target, methodName, advice, receiveArguments){\n            var existing = target[methodName], dispatcher;\n            if(!existing || existing.target != target){\n                // no dispatcher in place\n                target[methodName] = dispatcher = function(){\n                    var executionId = nextId;\n                    // before advice\n                    var args = arguments;\n                    var before = dispatcher.before;\n                    while(before){\n                        args = before.advice.apply(this, args) || args;\n                        before = before.next;\n                    }\n                    // around advice\n                    if(dispatcher.around){\n                        var results = dispatcher.around.advice(this, args);\n                    }\n                    // after advice\n                    var after = dispatcher.after;\n                    while(after && after.id < executionId){\n                        if(after.receiveArguments){\n                            var newResults = after.advice.apply(this, args);\n                            // change the return value only if a new value was returned\n                            results = newResults === undefined ? results : newResults;\n                        }else{\n                            results = after.advice.call(this, results, args);\n                        }\n                        after = after.next;\n                    }\n                    return results;\n                };\n                if(existing){\n                    dispatcher.around = {advice: function(target, args){\n                        return existing.apply(target, args);\n                    }};\n                }\n                dispatcher.target = target;\n            }\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\n            advice = null;\n            return results;\n        };\n    }\n\n    return {\n        after: aspect(\"after\"),\n \n        around: aspect(\"around\"),\n        \n        before: aspect(\"before\")\n    };\n});\ndefine('skylark-langx/funcs',[\n    \"./objects\",\n\t\"./types\"\n],function(objects,types){\n\tvar mixin = objects.mixin,\n        isFunction = types.isFunction,\n        isString = types.isString;\n\n    function defer(fn) {\n        if (requestAnimationFrame) {\n            requestAnimationFrame(fn);\n        } else {\n            setTimeoutout(fn);\n        }\n        return this;\n    }\n\n    function noop() {\n    }\n\n    function proxy(fn, context) {\n        var args = (2 in arguments) && slice.call(arguments, 2)\n        if (isFunction(fn)) {\n            var proxyFn = function() {\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\n            }\n            return proxyFn;\n        } else if (isString(context)) {\n            if (args) {\n                args.unshift(fn[context], fn)\n                return proxy.apply(null, args)\n            } else {\n                return proxy(fn[context], fn);\n            }\n        } else {\n            throw new TypeError(\"expected function\");\n        }\n    }\n\n    function debounce(fn, wait) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                fn.apply(context, args);\n            };\n            if (timeout) clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n   \n    var delegate = (function() {\n        // boodman/crockford delegation w/ cornford optimization\n        function TMP() {}\n        return function(obj, props) {\n            TMP.prototype = obj;\n            var tmp = new TMP();\n            TMP.prototype = null;\n            if (props) {\n                mixin(tmp, props);\n            }\n            return tmp; // Object\n        };\n    })();\n\n\n    return {\n        debounce: debounce,\n\n        delegate: delegate,\n\n        defer: defer,\n\n        noop : noop,\n\n        proxy: proxy,\n\n        returnTrue: function() {\n            return true;\n        },\n\n        returnFalse: function() {\n            return false;\n        }\n    };\n});\ndefine('skylark-langx/Deferred',[\n    \"./arrays\",\n\t\"./funcs\",\n    \"./objects\"\n],function(arrays,funcs,objects){\n    \"use strict\";\n    \n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\n\n    var slice = Array.prototype.slice,\n        proxy = funcs.proxy,\n        makeArray = arrays.makeArray,\n        result = objects.result,\n        mixin = objects.mixin;\n\n    mixin(Promise.prototype,{\n        always: function(handler) {\n            //this.done(handler);\n            //this.fail(handler);\n            this.then(handler,handler);\n            return this;\n        },\n        done : function(handler) {\n            this.then(handler);\n            return this;\n        },\n        fail : function(handler) { \n            //return mixin(Promise.prototype.catch.call(this,handler),added);\n            //return this.then(null,handler);\n            this.catch(handler);\n            return this;\n        }\n    });\n\n\n    var Deferred = function() {\n        var self = this,\n            p = this.promise = new Promise(function(resolve, reject) {\n                self._resolve = resolve;\n                self._reject = reject;\n            });\n\n        wrapPromise(p,self);\n\n        this[PGLISTENERS] = [];\n\n        //this.resolve = Deferred.prototype.resolve.bind(this);\n        //this.reject = Deferred.prototype.reject.bind(this);\n        //this.progress = Deferred.prototype.progress.bind(this);\n\n    };\n\n    function wrapPromise(p,d) {\n        var   added = {\n                state : function() {\n                    if (d.isResolved()) {\n                        return 'resolved';\n                    }\n                    if (d.isRejected()) {\n                        return 'rejected';\n                    }\n                    return 'pending';\n                },\n                then : function(onResolved,onRejected,onProgress) {\n                    if (onProgress) {\n                        this.progress(onProgress);\n                    }\n                    return mixin(Promise.prototype.then.call(this,\n                            onResolved && function(args) {\n                                if (args && args.__ctx__ !== undefined) {\n                                    return onResolved.apply(args.__ctx__,args);\n                                } else {\n                                    return onResolved(args);\n                                }\n                            },\n                            onRejected && function(args){\n                                if (args && args.__ctx__ !== undefined) {\n                                    return onRejected.apply(args.__ctx__,args);\n                                } else {\n                                    return onRejected(args);\n                                }\n                            }),added);\n                },\n                progress : function(handler) {\n                    d[PGLISTENERS].push(handler);\n                    return this;\n                }\n\n            };\n\n        added.pipe = added.then;\n        return mixin(p,added);\n\n    }\n\n    Deferred.prototype.resolve = function(value) {\n        var args = slice.call(arguments);\n        return this.resolveWith(null,args);\n    };\n\n    Deferred.prototype.resolveWith = function(context,args) {\n        args = args ? makeArray(args) : []; \n        args.__ctx__ = context;\n        this._resolve(args);\n        this._resolved = true;\n        return this;\n    };\n\n    Deferred.prototype.progress = function(value) {\n        try {\n          return this[PGLISTENERS].forEach(function (listener) {\n            return listener(value);\n          });\n        } catch (error) {\n          this.reject(error);\n        }\n        return this;\n    };\n\n    Deferred.prototype.reject = function(reason) {\n        var args = slice.call(arguments);\n        return this.rejectWith(null,args);\n    };\n\n    Deferred.prototype.rejectWith = function(context,args) {\n        args = args ? makeArray(args) : []; \n        args.__ctx__ = context;\n        this._reject(args);\n        this._rejected = true;\n        return this;\n    };\n\n    Deferred.prototype.isResolved = function() {\n        return !!this._resolved;\n    };\n\n    Deferred.prototype.isRejected = function() {\n        return !!this._rejected;\n    };\n\n    Deferred.prototype.then = function(callback, errback, progback) {\n        var p = result(this,\"promise\");\n        return p.then(callback, errback, progback);\n    };\n\n    Deferred.prototype.done  = Deferred.prototype.then;\n\n    Deferred.all = function(array) {\n        return wrapPromise(Promise.all(array));\n    };\n\n    Deferred.first = function(array) {\n        return wrapPromise(Promise.race(array));\n    };\n\n\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\n\n        if (!receivedPromise) {\n            if (arguments.length > 1) {\n                return callback ? callback(valueOrPromise) : valueOrPromise;\n            } else {\n                return new Deferred().resolve(valueOrPromise);\n            }\n        } else if (!nativePromise) {\n            var deferred = new Deferred(valueOrPromise.cancel);\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\n            valueOrPromise = deferred.promise;\n        }\n\n        if (callback || errback || progback) {\n            return valueOrPromise.then(callback, errback, progback);\n        }\n        return valueOrPromise;\n    };\n\n    Deferred.reject = function(err) {\n        var d = new Deferred();\n        d.reject(err);\n        return d.promise;\n    };\n\n    Deferred.resolve = function(data) {\n        var d = new Deferred();\n        d.resolve.apply(d,arguments);\n        return d.promise;\n    };\n\n    Deferred.immediate = Deferred.resolve;\n\n    return Deferred;\n});\ndefine('skylark-langx/async',[\n    \"./Deferred\",\n    \"./arrays\"\n],function(Deferred,arrays){\n    var each = arrays.each;\n    \n    var async = {\n        parallel : function(arr,args,ctx) {\n            var rets = [];\n            ctx = ctx || null;\n            args = args || [];\n\n            each(arr,function(i,func){\n                rets.push(func.apply(ctx,args));\n            });\n\n            return Deferred.all(rets);\n        },\n\n        series : function(arr,args,ctx) {\n            var rets = [],\n                d = new Deferred(),\n                p = d.promise;\n\n            ctx = ctx || null;\n            args = args || [];\n\n            d.resolve();\n            each(arr,function(i,func){\n                p = p.then(function(){\n                    return func.apply(ctx,args);\n                });\n                rets.push(p);\n            });\n\n            return Deferred.all(rets);\n        },\n\n        waterful : function(arr,args,ctx) {\n            var d = new Deferred(),\n                p = d.promise;\n\n            ctx = ctx || null;\n            args = args || [];\n\n            d.resolveWith(ctx,args);\n\n            each(arr,function(i,func){\n                p = p.then(func);\n            });\n            return p;\n        }\n    };\n\n\treturn async;\t\n});\ndefine('skylark-langx/Evented',[\n    \"./klass\",\n    \"./objects\",\n\t\"./types\"\n],function(klass,objects,types){\n\tvar slice = Array.prototype.slice,\n        isDefined = types.isDefined,\n        isPlainObject = types.isPlainObject,\n\t\tisFunction = types.isFunction,\n\t\tisString = types.isString,\n\t\tisEmptyObject = types.isEmptyObject,\n\t\tmixin = objects.mixin;\n\n    var Evented = klass({\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\n            var self = this,\n                _hub = this._hub || (this._hub = {});\n\n            if (isPlainObject(events)) {\n                ctx = callback;\n                each(events, function(type, fn) {\n                    self.on(type, selector, data, fn, ctx, one);\n                });\n                return this;\n            }\n\n            if (!isString(selector) && !isFunction(callback)) {\n                ctx = callback;\n                callback = data;\n                data = selector;\n                selector = undefined;\n            }\n\n            if (isFunction(data)) {\n                ctx = callback;\n                callback = data;\n                data = null;\n            }\n\n            if (isString(events)) {\n                events = events.split(/\\s/)\n            }\n\n            events.forEach(function(name) {\n                (_hub[name] || (_hub[name] = [])).push({\n                    fn: callback,\n                    selector: selector,\n                    data: data,\n                    ctx: ctx,\n                    one: one\n                });\n            });\n\n            return this;\n        },\n\n        one: function(events, selector, data, callback, ctx) {\n            return this.on(events, selector, data, callback, ctx, 1);\n        },\n\n        trigger: function(e /*,argument list*/ ) {\n            if (!this._hub) {\n                return this;\n            }\n\n            var self = this;\n\n            if (isString(e)) {\n                e = new CustomEvent(e);\n            }\n\n            Object.defineProperty(e,\"target\",{\n                value : this\n            });\n\n            var args = slice.call(arguments, 1);\n            if (isDefined(args)) {\n                args = [e].concat(args);\n            } else {\n                args = [e];\n            }\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\n                var listeners = self._hub[eventName];\n                if (!listeners) {\n                    return;\n                }\n\n                var len = listeners.length,\n                    reCompact = false;\n\n                for (var i = 0; i < len; i++) {\n                    var listener = listeners[i];\n                    if (e.data) {\n                        if (listener.data) {\n                            e.data = mixin({}, listener.data, e.data);\n                        }\n                    } else {\n                        e.data = listener.data || null;\n                    }\n                    listener.fn.apply(listener.ctx, args);\n                    if (listener.one) {\n                        listeners[i] = null;\n                        reCompact = true;\n                    }\n                }\n\n                if (reCompact) {\n                    self._hub[eventName] = compact(listeners);\n                }\n\n            });\n            return this;\n        },\n\n        listened: function(event) {\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\n            return evtArr.length > 0;\n        },\n\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\n            if (!obj) {\n                return this;\n            }\n\n            // Bind callbacks on obj,\n            if (isString(callback)) {\n                callback = this[callback];\n            }\n\n            if (one) {\n                obj.one(event, callback, this);\n            } else {\n                obj.on(event, callback, this);\n            }\n\n            //keep track of them on listening.\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\n                listening;\n\n            for (var i = 0; i < listeningTo.length; i++) {\n                if (listeningTo[i].obj == obj) {\n                    listening = listeningTo[i];\n                    break;\n                }\n            }\n            if (!listening) {\n                listeningTo.push(\n                    listening = {\n                        obj: obj,\n                        events: {}\n                    }\n                );\n            }\n            var listeningEvents = listening.events,\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\n            if (listeningEvent.indexOf(callback) == -1) {\n                listeningEvent.push(callback);\n            }\n\n            return this;\n        },\n\n        listenToOnce: function(obj, event, callback) {\n            return this.listenTo(obj, event, callback, 1);\n        },\n\n        off: function(events, callback) {\n            var _hub = this._hub || (this._hub = {});\n            if (isString(events)) {\n                events = events.split(/\\s/)\n            }\n\n            events.forEach(function(name) {\n                var evts = _hub[name];\n                var liveEvents = [];\n\n                if (evts && callback) {\n                    for (var i = 0, len = evts.length; i < len; i++) {\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n                            liveEvents.push(evts[i]);\n                    }\n                }\n\n                if (liveEvents.length) {\n                    _hub[name] = liveEvents;\n                } else {\n                    delete _hub[name];\n                }\n            });\n\n            return this;\n        },\n        unlistenTo: function(obj, event, callback) {\n            var listeningTo = this._listeningTo;\n            if (!listeningTo) {\n                return this;\n            }\n            for (var i = 0; i < listeningTo.length; i++) {\n                var listening = listeningTo[i];\n\n                if (obj && obj != listening.obj) {\n                    continue;\n                }\n\n                var listeningEvents = listening.events;\n                for (var eventName in listeningEvents) {\n                    if (event && event != eventName) {\n                        continue;\n                    }\n\n                    var listeningEvent = listeningEvents[eventName];\n\n                    for (var j = 0; j < listeningEvent.length; j++) {\n                        if (!callback || callback == listeningEvent[i]) {\n                            listening.obj.off(eventName, listeningEvent[i], this);\n                            listeningEvent[i] = null;\n                        }\n                    }\n\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\n\n                    if (isEmptyObject(listeningEvent)) {\n                        listeningEvents[eventName] = null;\n                    }\n\n                }\n\n                if (isEmptyObject(listeningEvents)) {\n                    listeningTo[i] = null;\n                }\n            }\n\n            listeningTo = this._listeningTo = compact(listeningTo);\n            if (isEmptyObject(listeningTo)) {\n                this._listeningTo = null;\n            }\n\n            return this;\n        }\n    });\n\n\treturn Evented;\n\n});\ndefine('skylark-langx/strings',[\n],function(){\n\n     /*\n     * Converts camel case into dashes.\n     * @param {String} str\n     * @return {String}\n     * @exapmle marginTop -> margin-top\n     */\n    function dasherize(str) {\n        return str.replace(/::/g, '/')\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n            .replace(/_/g, '-')\n            .toLowerCase();\n    }\n\n    function deserializeValue(value) {\n        try {\n            return value ?\n                value == \"true\" ||\n                (value == \"false\" ? false :\n                    value == \"null\" ? null :\n                    +value + \"\" == value ? +value :\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\n                    value) : value;\n        } catch (e) {\n            return value;\n        }\n    }\n\n    function trim(str) {\n        return str == null ? \"\" : String.prototype.trim.call(str);\n    }\n    function substitute( /*String*/ template,\n        /*Object|Array*/\n        map,\n        /*Function?*/\n        transform,\n        /*Object?*/\n        thisObject) {\n        // summary:\n        //    Performs parameterized substitutions on a string. Throws an\n        //    exception if any parameter is unmatched.\n        // template:\n        //    a string with expressions in the form `${key}` to be replaced or\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\n        // map:\n        //    hash to search for substitutions\n        // transform:\n        //    a function to process all parameters before substitution takes\n\n\n        thisObject = thisObject || window;\n        transform = transform ?\n            proxy(thisObject, transform) : function(v) {\n                return v;\n            };\n\n        function getObject(key, map) {\n            if (key.match(/\\./)) {\n                var retVal,\n                    getValue = function(keys, obj) {\n                        var _k = keys.pop();\n                        if (_k) {\n                            if (!obj[_k]) return null;\n                            return getValue(keys, retVal = obj[_k]);\n                        } else {\n                            return retVal;\n                        }\n                    };\n                return getValue(key.split(\".\").reverse(), map);\n            } else {\n                return map[key];\n            }\n        }\n\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\n            function(match, key, format) {\n                var value = getObject(key, map);\n                if (format) {\n                    value = getObject(format, thisObject).call(thisObject, value, key);\n                }\n                return transform(value, key).toString();\n            }); // String\n    }\n\n\treturn {\n        camelCase: function(str) {\n            return str.replace(/-([\\da-z])/g, function(a) {\n                return a.toUpperCase().replace('-', '');\n            });\n        },\n\n\n        dasherize: dasherize,\n\n        deserializeValue: deserializeValue,\n\n        lowerFirst: function(str) {\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        },\n\n        serializeValue: function(value) {\n            return JSON.stringify(value)\n        },\n\n\n        substitute: substitute,\n\n        trim: trim,\n\n        upperFirst: function(str) {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\t} ; \n\n});\ndefine('skylark-langx/Xhr',[\n    \"./arrays\",\n    \"./Deferred\",\n    \"./Evented\",\n    \"./objects\",\n    \"./funcs\",\n    \"./types\"\n],function(arrays,Deferred,Evented,objects,funcs,types){\n    var each = arrays.each,\n        mixin = objects.mixin,\n        noop = funcs.noop,\n        isArray = types.isArray,\n        isFunction = types.isFunction,\n        isPlainObject = types.isPlainObject,\n        type = types.type;\n \n     var getAbsoluteUrl = (function() {\n        var a;\n\n        return function(url) {\n            if (!a) a = document.createElement('a');\n            a.href = url;\n\n            return a.href;\n        };\n    })();\n   \n    var Xhr = (function(){\n        var jsonpID = 0,\n            key,\n            name,\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\n            jsonType = 'application/json',\n            htmlType = 'text/html',\n            blankRE = /^\\s*$/;\n\n        var XhrDefaultOptions = {\n            async: true,\n\n            // Default type of request\n            type: 'GET',\n            // Callback that is executed before request\n            beforeSend: noop,\n            // Callback that is executed if the request succeeds\n            success: noop,\n            // Callback that is executed the the server drops error\n            error: noop,\n            // Callback that is executed on request complete (both: error and success)\n            complete: noop,\n            // The context for the callbacks\n            context: null,\n            // Whether to trigger \"global\" Ajax events\n            global: true,\n\n            // MIME types mapping\n            // IIS returns Javascript as \"application/x-javascript\"\n            accepts: {\n                script: 'text/javascript, application/javascript, application/x-javascript',\n                json: 'application/json',\n                xml: 'application/xml, text/xml',\n                html: 'text/html',\n                text: 'text/plain'\n            },\n            // Whether the request is to another domain\n            crossDomain: false,\n            // Default timeout\n            timeout: 0,\n            // Whether data should be serialized to string\n            processData: true,\n            // Whether the browser should be allowed to cache GET responses\n            cache: true,\n\n            xhrFields : {\n                withCredentials : true\n            }\n        };\n\n        function mimeToDataType(mime) {\n            if (mime) {\n                mime = mime.split(';', 2)[0];\n            }\n            if (mime) {\n                if (mime == htmlType) {\n                    return \"html\";\n                } else if (mime == jsonType) {\n                    return \"json\";\n                } else if (scriptTypeRE.test(mime)) {\n                    return \"script\";\n                } else if (xmlTypeRE.test(mime)) {\n                    return \"xml\";\n                }\n            }\n            return \"text\";\n        }\n\n        function appendQuery(url, query) {\n            if (query == '') return url\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n        }\n\n        // serialize payload and append it to the URL for GET requests\n        function serializeData(options) {\n            options.data = options.data || options.query;\n            if (options.processData && options.data && type(options.data) != \"string\") {\n                options.data = param(options.data, options.traditional);\n            }\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\n                options.url = appendQuery(options.url, options.data);\n                options.data = undefined;\n            }\n        }\n\n        function serialize(params, obj, traditional, scope) {\n            var t, array = isArray(obj),\n                hash = isPlainObject(obj)\n            each(obj, function(key, value) {\n                t =type(value);\n                if (scope) key = traditional ? scope :\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\n                // handle data in serializeArray() format\n                if (!scope && array) params.add(value.name, value.value)\n                // recurse into nested objects\n                else if (t == \"array\" || (!traditional && t == \"object\"))\n                    serialize(params, value, traditional, key)\n                else params.add(key, value)\n            })\n        }\n\n        var param = function(obj, traditional) {\n            var params = []\n            params.add = function(key, value) {\n                if (isFunction(value)) value = value()\n                if (value == null) value = \"\"\n                this.push(escape(key) + '=' + escape(value))\n            }\n            serialize(params, obj, traditional)\n            return params.join('&').replace(/%20/g, '+')\n        };\n\n        var Xhr = Evented.inherit({\n            klassName : \"Xhr\",\n\n            _request  : function(args) {\n                var _ = this._,\n                    self = this,\n                    options = mixin({},XhrDefaultOptions,_.options,args),\n                    xhr = _.xhr = new XMLHttpRequest();\n\n                serializeData(options)\n\n                var dataType = options.dataType || options.handleAs,\n                    mime = options.mimeType || options.accepts[dataType],\n                    headers = options.headers,\n                    xhrFields = options.xhrFields,\n                    isFormData = options.data && options.data instanceof FormData,\n                    basicAuthorizationToken = options.basicAuthorizationToken,\n                    type = options.type,\n                    url = options.url,\n                    async = options.async,\n                    user = options.user , \n                    password = options.password,\n                    deferred = new Deferred(),\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\n\n                if (xhrFields) {\n                    for (name in xhrFields) {\n                        xhr[name] = xhrFields[name];\n                    }\n                }\n\n                if (mime && mime.indexOf(',') > -1) {\n                    mime = mime.split(',', 2)[0];\n                }\n                if (mime && xhr.overrideMimeType) {\n                    xhr.overrideMimeType(mime);\n                }\n\n                //if (dataType) {\n                //    xhr.responseType = dataType;\n                //}\n\n                var finish = function() {\n                    xhr.onloadend = noop;\n                    xhr.onabort = noop;\n                    xhr.onprogress = noop;\n                    xhr.ontimeout = noop;\n                    xhr = null;\n                }\n                var onloadend = function() {\n                    var result, error = false\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\n\n                        result = xhr.responseText;\n                        try {\n                            if (dataType == 'script') {\n                                eval(result);\n                            } else if (dataType == 'xml') {\n                                result = xhr.responseXML;\n                            } else if (dataType == 'json') {\n                                result = blankRE.test(result) ? null : JSON.parse(result);\n                            } else if (dataType == \"blob\") {\n                                result = Blob([xhrObj.response]);\n                            } else if (dataType == \"arraybuffer\") {\n                                result = xhr.reponse;\n                            }\n                        } catch (e) { \n                            error = e;\n                        }\n\n                        if (error) {\n                            deferred.reject(error,xhr.status,xhr);\n                        } else {\n                            deferred.resolve(result,xhr.status,xhr);\n                        }\n                    } else {\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\n                    }\n                    finish();\n                };\n\n                var onabort = function() {\n                    if (deferred) {\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\n                    }\n                    finish();                 \n                }\n \n                var ontimeout = function() {\n                    if (deferred) {\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\n                    }\n                    finish();                 \n                }\n\n                var onprogress = function(evt) {\n                    if (deferred) {\n                        deferred.progress(evt,xhr.status,xhr);\n                    }\n                }\n\n                xhr.onloadend = onloadend;\n                xhr.onabort = onabort;\n                xhr.ontimeout = ontimeout;\n                xhr.onprogress = onprogress;\n\n                xhr.open(type, url, async, user, password);\n               \n                if (headers) {\n                    for ( var key in headers) {\n                        var value = headers[key];\n \n                        if(key.toLowerCase() === 'content-type'){\n                            contentType = headers[hdr];\n                        } else {\n                           xhr.setRequestHeader(key, value);\n                        }\n                    }\n                }   \n\n                if  (contentType && contentType !== false){\n                    xhr.setRequestHeader('Content-Type', contentType);\n                }\n\n                if(!headers || !('X-Requested-With' in headers)){\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                }\n\n\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\n                if (basicAuthorizationToken) {\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\n                }\n\n                xhr.send(options.data ? options.data : null);\n\n                return deferred.promise;\n\n            },\n\n            \"abort\": function() {\n                var _ = this._,\n                    xhr = _.xhr;\n\n                if (xhr) {\n                    xhr.abort();\n                }    \n            },\n\n\n            \"request\": function(args) {\n                return this._request(args);\n            },\n\n            get : function(args) {\n                args = args || {};\n                args.type = \"GET\";\n                return this._request(args);\n            },\n\n            post : function(args) {\n                args = args || {};\n                args.type = \"POST\";\n                return this._request(args);\n            },\n\n            patch : function(args) {\n                args = args || {};\n                args.type = \"PATCH\";\n                return this._request(args);\n            },\n\n            put : function(args) {\n                args = args || {};\n                args.type = \"PUT\";\n                return this._request(args);\n            },\n\n            del : function(args) {\n                args = args || {};\n                args.type = \"DELETE\";\n                return this._request(args);\n            },\n\n            \"init\": function(options) {\n                this._ = {\n                    options : options || {}\n                };\n            }\n        });\n\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\n            Xhr[name] = function(url,args) {\n                var xhr = new Xhr({\"url\" : url});\n                return xhr[name](args);\n            };\n        });\n\n        Xhr.defaultOptions = XhrDefaultOptions;\n        Xhr.param = param;\n\n        return Xhr;\n    })();\n\n\treturn Xhr;\t\n});\ndefine('skylark-langx/Restful',[\n    \"./Evented\",\n    \"./objects\",\n    \"./strings\",\n    \"./Xhr\"\n],function(Evented,objects,strings,Xhr){\n    var mixin = objects.mixin,\n        substitute = strings.substitute;\n\n    var Restful = Evented.inherit({\n        \"klassName\" : \"Restful\",\n\n        \"idAttribute\": \"id\",\n        \n        getBaseUrl : function(args) {\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\n            var baseEndpoint = substitute(this.baseEndpoint,args),\n                baseUrl = this.server + this.basePath + baseEndpoint;\n            if (args[this.idAttribute]!==undefined) {\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \n            }\n            return baseUrl;\n        },\n        _head : function(args) {\n            //get resource metadata .\n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, required\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}\n        },\n        _get : function(args) {\n            //get resource ,one or list .\n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, null if list\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}\n            return Xhr.get(this.getBaseUrl(args),args);\n        },\n        _post  : function(args,verb) {\n            //create or move resource .\n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, required\n            //  \"data\" : body // the own data,required\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\n            var url = this.getBaseUrl(args);\n            if (verb) {\n                url = url + \"/\" + verb;\n            }\n            return Xhr.post(url, args);\n        },\n\n        _put  : function(args,verb) {\n            //update resource .\n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, required\n            //  \"data\" : body // the own data,required\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\n            var url = this.getBaseUrl(args);\n            if (verb) {\n                url = url + \"/\" + verb;\n            }\n            return Xhr.put(url, args);\n        },\n\n        _delete : function(args) {\n            //delete resource . \n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, required\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}         \n\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\n            var url = this.getBaseUrl(args);\n            return Xhr.del(url);\n        },\n\n        _patch : function(args){\n            //update resource metadata. \n            //args : id and other info for the resource ,ex\n            //{\n            //  \"id\" : 234,  // the own id, required\n            //  \"data\" : body // the own data,required\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\n            //}\n            var url = this.getBaseUrl(args);\n            return Xhr.patch(url, args);\n        },\n        query: function(params) {\n            \n            return this._post(params);\n        },\n\n        retrieve: function(params) {\n            return this._get(params);\n        },\n\n        create: function(params) {\n            return this._post(params);\n        },\n\n        update: function(params) {\n            return this._put(params);\n        },\n\n        delete: function(params) {\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\n            return this._delete(params);\n        },\n\n        patch: function(params) {\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\n            return this._patch(params);\n        },\n        init: function(params) {\n            mixin(this,params);\n //           this._xhr = XHRx();\n       }\n    });\n\n    return Restful;\n});\ndefine('skylark-langx/Stateful',[\n\t\"./Evented\"\n],function(Evented){\n    var Stateful = Evented.inherit({\n        init : function(attributes, options) {\n            var attrs = attributes || {};\n            options || (options = {});\n            this.cid = uniqueId(this.cidPrefix);\n            this.attributes = {};\n            if (options.collection) this.collection = options.collection;\n            if (options.parse) attrs = this.parse(attrs, options) || {};\n            var defaults = result(this, 'defaults');\n            attrs = mixin({}, defaults, attrs);\n            this.set(attrs, options);\n            this.changed = {};\n        },\n\n        // A hash of attributes whose current and previous value differ.\n        changed: null,\n\n        // The value returned during the last failed validation.\n        validationError: null,\n\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n        // CouchDB users may want to set this to `\"_id\"`.\n        idAttribute: 'id',\n\n        // The prefix is used to create the client id which is used to identify models locally.\n        // You may want to override this if you're experiencing name clashes with model ids.\n        cidPrefix: 'c',\n\n\n        // Return a copy of the model's `attributes` object.\n        toJSON: function(options) {\n          return clone(this.attributes);\n        },\n\n\n        // Get the value of an attribute.\n        get: function(attr) {\n          return this.attributes[attr];\n        },\n\n        // Returns `true` if the attribute contains a value that is not null\n        // or undefined.\n        has: function(attr) {\n          return this.get(attr) != null;\n        },\n\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\n        // the core primitive operation of a model, updating the data and notifying\n        // anyone who needs to know about the change in state. The heart of the beast.\n        set: function(key, val, options) {\n          if (key == null) return this;\n\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\n          var attrs;\n          if (typeof key === 'object') {\n            attrs = key;\n            options = val;\n          } else {\n            (attrs = {})[key] = val;\n          }\n\n          options || (options = {});\n\n          // Run validation.\n          if (!this._validate(attrs, options)) return false;\n\n          // Extract attributes and options.\n          var unset      = options.unset;\n          var silent     = options.silent;\n          var changes    = [];\n          var changing   = this._changing;\n          this._changing = true;\n\n          if (!changing) {\n            this._previousAttributes = clone(this.attributes);\n            this.changed = {};\n          }\n\n          var current = this.attributes;\n          var changed = this.changed;\n          var prev    = this._previousAttributes;\n\n          // For each `set` attribute, update or delete the current value.\n          for (var attr in attrs) {\n            val = attrs[attr];\n            if (!isEqual(current[attr], val)) changes.push(attr);\n            if (!isEqual(prev[attr], val)) {\n              changed[attr] = val;\n            } else {\n              delete changed[attr];\n            }\n            unset ? delete current[attr] : current[attr] = val;\n          }\n\n          // Update the `id`.\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n          // Trigger all relevant attribute changes.\n          if (!silent) {\n            if (changes.length) this._pending = options;\n            for (var i = 0; i < changes.length; i++) {\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\n            }\n          }\n\n          // You might be wondering why there's a `while` loop here. Changes can\n          // be recursively nested within `\"change\"` events.\n          if (changing) return this;\n          if (!silent) {\n            while (this._pending) {\n              options = this._pending;\n              this._pending = false;\n              this.trigger('change', this, options);\n            }\n          }\n          this._pending = false;\n          this._changing = false;\n          return this;\n        },\n\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n        // if the attribute doesn't exist.\n        unset: function(attr, options) {\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\n        },\n\n        // Clear all attributes on the model, firing `\"change\"`.\n        clear: function(options) {\n          var attrs = {};\n          for (var key in this.attributes) attrs[key] = void 0;\n          return this.set(attrs, mixin({}, options, {unset: true}));\n        },\n\n        // Determine if the model has changed since the last `\"change\"` event.\n        // If you specify an attribute name, determine if that attribute has changed.\n        hasChanged: function(attr) {\n          if (attr == null) return !isEmptyObject(this.changed);\n          return this.changed[attr] !== undefined;\n        },\n\n        // Return an object containing all the attributes that have changed, or\n        // false if there are no changed attributes. Useful for determining what\n        // parts of a view need to be updated and/or what attributes need to be\n        // persisted to the server. Unset attributes will be set to undefined.\n        // You can also pass an attributes object to diff against the model,\n        // determining if there *would be* a change.\n        changedAttributes: function(diff) {\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\n          var old = this._changing ? this._previousAttributes : this.attributes;\n          var changed = {};\n          for (var attr in diff) {\n            var val = diff[attr];\n            if (isEqual(old[attr], val)) continue;\n            changed[attr] = val;\n          }\n          return !isEmptyObject(changed) ? changed : false;\n        },\n\n        // Get the previous value of an attribute, recorded at the time the last\n        // `\"change\"` event was fired.\n        previous: function(attr) {\n          if (attr == null || !this._previousAttributes) return null;\n          return this._previousAttributes[attr];\n        },\n\n        // Get all of the attributes of the model at the time of the previous\n        // `\"change\"` event.\n        previousAttributes: function() {\n          return clone(this._previousAttributes);\n        },\n\n        // Create a new model with identical attributes to this one.\n        clone: function() {\n          return new this.constructor(this.attributes);\n        },\n\n        // A model is new if it has never been saved to the server, and lacks an id.\n        isNew: function() {\n          return !this.has(this.idAttribute);\n        },\n\n        // Check if the model is currently in a valid state.\n        isValid: function(options) {\n          return this._validate({}, mixin({}, options, {validate: true}));\n        },\n\n        // Run validation against the next complete set of model attributes,\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n        _validate: function(attrs, options) {\n          if (!options.validate || !this.validate) return true;\n          attrs = mixin({}, this.attributes, attrs);\n          var error = this.validationError = this.validate(attrs, options) || null;\n          if (!error) return true;\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\n          return false;\n        }\n    });\n\n\treturn Stateful;\n});\ndefine('skylark-langx/langx',[\n    \"./skylark\",\n    \"./arrays\",\n    \"./ArrayStore\",\n    \"./aspect\",\n    \"./async\",\n    \"./Deferred\",\n    \"./Evented\",\n    \"./funcs\",\n    \"./klass\",\n    \"./objects\",\n    \"./Restful\",\n    \"./Stateful\",\n    \"./strings\",\n    \"./types\",\n    \"./Xhr\"\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\n    \"use strict\";\n    var toString = {}.toString,\n        concat = Array.prototype.concat,\n        indexOf = Array.prototype.indexOf,\n        slice = Array.prototype.slice,\n        filter = Array.prototype.filter,\n        mixin = objects.mixin,\n        safeMixin = objects.safeMixin,\n        isFunction = types.isFunction;\n\n\n    function createEvent(type, props) {\n        var e = new CustomEvent(type, props);\n\n        return safeMixin(e, props);\n    }\n    \n\n    function funcArg(context, arg, idx, payload) {\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\n    }\n\n    function getQueryParams(url) {\n        var url = url || window.location.href,\n            segs = url.split(\"?\"),\n            params = {};\n\n        if (segs.length > 1) {\n            segs[1].split(\"&\").forEach(function(queryParam) {\n                var nv = queryParam.split('=');\n                params[nv[0]] = nv[1];\n            });\n        }\n        return params;\n    }\n\n\n    function toPixel(value) {\n        // style values can be floats, client code may want\n        // to round for integer pixels.\n        return parseFloat(value) || 0;\n    }\n\n\n    var _uid = 1;\n\n    function uid(obj) {\n        return obj._uid || (obj._uid = _uid++);\n    }\n\n    var idCounter = 0;\n    function uniqueId (prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n    }\n\n\n    function langx() {\n        return langx;\n    }\n\n    mixin(langx, {\n        createEvent : createEvent,\n\n        funcArg: funcArg,\n\n        getQueryParams: getQueryParams,\n\n        toPixel: toPixel,\n\n        uid: uid,\n\n        uniqueId: uniqueId,\n\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\n\n    });\n\n\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\n        ArrayStore : ArrayStore,\n\n        async : async,\n        \n        Deferred: Deferred,\n\n        Evented: Evented,\n\n        klass : klass,\n\n        Restful: Restful,\n        \n        Stateful: Stateful,\n\n        Xhr: Xhr\n\n    });\n\n    return skylark.langx = langx;\n});\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\n    return skylark;\n});\n\ndefine('skylark-utils-webgl/webgl',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n\treturn skylark.webgl = skylark.webgl || {};\r\n});\ndefine('skylark-utils-webgl/primitives/three',[],function() {\r\n\t'use strict';\r\n\r\n\t// Polyfills\r\n\r\n\tif ( Number.EPSILON === undefined ) {\r\n\r\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n\t}\r\n\r\n\tif ( Number.isInteger === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n\r\n\t\tNumber.isInteger = function ( value ) {\r\n\r\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tif ( Math.sign === undefined ) {\r\n\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\t\tMath.sign = function ( x ) {\r\n\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tif ( 'name' in Function.prototype === false ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( Object.assign === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\t\t( function () {\r\n\r\n\t\t\tObject.assign = function ( target ) {\r\n\r\n\t\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar output = Object( target );\r\n\r\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n\t\t\t\t\tvar source = arguments[ index ];\r\n\r\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn output;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\r\n\tfunction EventDispatcher() {}\r\n\r\n\tObject.assign( EventDispatcher.prototype, {\r\n\r\n\t\taddEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\thasEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t\t},\r\n\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdispatchEvent: function ( event ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tevent.target = this;\r\n\r\n\t\t\t\tvar array = listenerArray.slice( 0 );\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar REVISION = '96dev';\r\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\tvar CullFaceNone = 0;\r\n\tvar CullFaceBack = 1;\r\n\tvar CullFaceFront = 2;\r\n\tvar CullFaceFrontBack = 3;\r\n\tvar FrontFaceDirectionCW = 0;\r\n\tvar FrontFaceDirectionCCW = 1;\r\n\tvar BasicShadowMap = 0;\r\n\tvar PCFShadowMap = 1;\r\n\tvar PCFSoftShadowMap = 2;\r\n\tvar FrontSide = 0;\r\n\tvar BackSide = 1;\r\n\tvar DoubleSide = 2;\r\n\tvar FlatShading = 1;\r\n\tvar SmoothShading = 2;\r\n\tvar NoColors = 0;\r\n\tvar FaceColors = 1;\r\n\tvar VertexColors = 2;\r\n\tvar NoBlending = 0;\r\n\tvar NormalBlending = 1;\r\n\tvar AdditiveBlending = 2;\r\n\tvar SubtractiveBlending = 3;\r\n\tvar MultiplyBlending = 4;\r\n\tvar CustomBlending = 5;\r\n\tvar AddEquation = 100;\r\n\tvar SubtractEquation = 101;\r\n\tvar ReverseSubtractEquation = 102;\r\n\tvar MinEquation = 103;\r\n\tvar MaxEquation = 104;\r\n\tvar ZeroFactor = 200;\r\n\tvar OneFactor = 201;\r\n\tvar SrcColorFactor = 202;\r\n\tvar OneMinusSrcColorFactor = 203;\r\n\tvar SrcAlphaFactor = 204;\r\n\tvar OneMinusSrcAlphaFactor = 205;\r\n\tvar DstAlphaFactor = 206;\r\n\tvar OneMinusDstAlphaFactor = 207;\r\n\tvar DstColorFactor = 208;\r\n\tvar OneMinusDstColorFactor = 209;\r\n\tvar SrcAlphaSaturateFactor = 210;\r\n\tvar NeverDepth = 0;\r\n\tvar AlwaysDepth = 1;\r\n\tvar LessDepth = 2;\r\n\tvar LessEqualDepth = 3;\r\n\tvar EqualDepth = 4;\r\n\tvar GreaterEqualDepth = 5;\r\n\tvar GreaterDepth = 6;\r\n\tvar NotEqualDepth = 7;\r\n\tvar MultiplyOperation = 0;\r\n\tvar MixOperation = 1;\r\n\tvar AddOperation = 2;\r\n\tvar NoToneMapping = 0;\r\n\tvar LinearToneMapping = 1;\r\n\tvar ReinhardToneMapping = 2;\r\n\tvar Uncharted2ToneMapping = 3;\r\n\tvar CineonToneMapping = 4;\r\n\tvar UVMapping = 300;\r\n\tvar CubeReflectionMapping = 301;\r\n\tvar CubeRefractionMapping = 302;\r\n\tvar EquirectangularReflectionMapping = 303;\r\n\tvar EquirectangularRefractionMapping = 304;\r\n\tvar SphericalReflectionMapping = 305;\r\n\tvar CubeUVReflectionMapping = 306;\r\n\tvar CubeUVRefractionMapping = 307;\r\n\tvar RepeatWrapping = 1000;\r\n\tvar ClampToEdgeWrapping = 1001;\r\n\tvar MirroredRepeatWrapping = 1002;\r\n\tvar NearestFilter = 1003;\r\n\tvar NearestMipMapNearestFilter = 1004;\r\n\tvar NearestMipMapLinearFilter = 1005;\r\n\tvar LinearFilter = 1006;\r\n\tvar LinearMipMapNearestFilter = 1007;\r\n\tvar LinearMipMapLinearFilter = 1008;\r\n\tvar UnsignedByteType = 1009;\r\n\tvar ByteType = 1010;\r\n\tvar ShortType = 1011;\r\n\tvar UnsignedShortType = 1012;\r\n\tvar IntType = 1013;\r\n\tvar UnsignedIntType = 1014;\r\n\tvar FloatType = 1015;\r\n\tvar HalfFloatType = 1016;\r\n\tvar UnsignedShort4444Type = 1017;\r\n\tvar UnsignedShort5551Type = 1018;\r\n\tvar UnsignedShort565Type = 1019;\r\n\tvar UnsignedInt248Type = 1020;\r\n\tvar AlphaFormat = 1021;\r\n\tvar RGBFormat = 1022;\r\n\tvar RGBAFormat = 1023;\r\n\tvar LuminanceFormat = 1024;\r\n\tvar LuminanceAlphaFormat = 1025;\r\n\tvar RGBEFormat = RGBAFormat;\r\n\tvar DepthFormat = 1026;\r\n\tvar DepthStencilFormat = 1027;\r\n\tvar RGB_S3TC_DXT1_Format = 33776;\r\n\tvar RGBA_S3TC_DXT1_Format = 33777;\r\n\tvar RGBA_S3TC_DXT3_Format = 33778;\r\n\tvar RGBA_S3TC_DXT5_Format = 33779;\r\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\r\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\r\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\tvar RGB_ETC1_Format = 36196;\r\n\tvar RGBA_ASTC_4x4_Format = 37808;\r\n\tvar RGBA_ASTC_5x4_Format = 37809;\r\n\tvar RGBA_ASTC_5x5_Format = 37810;\r\n\tvar RGBA_ASTC_6x5_Format = 37811;\r\n\tvar RGBA_ASTC_6x6_Format = 37812;\r\n\tvar RGBA_ASTC_8x5_Format = 37813;\r\n\tvar RGBA_ASTC_8x6_Format = 37814;\r\n\tvar RGBA_ASTC_8x8_Format = 37815;\r\n\tvar RGBA_ASTC_10x5_Format = 37816;\r\n\tvar RGBA_ASTC_10x6_Format = 37817;\r\n\tvar RGBA_ASTC_10x8_Format = 37818;\r\n\tvar RGBA_ASTC_10x10_Format = 37819;\r\n\tvar RGBA_ASTC_12x10_Format = 37820;\r\n\tvar RGBA_ASTC_12x12_Format = 37821;\r\n\tvar LoopOnce = 2200;\r\n\tvar LoopRepeat = 2201;\r\n\tvar LoopPingPong = 2202;\r\n\tvar InterpolateDiscrete = 2300;\r\n\tvar InterpolateLinear = 2301;\r\n\tvar InterpolateSmooth = 2302;\r\n\tvar ZeroCurvatureEnding = 2400;\r\n\tvar ZeroSlopeEnding = 2401;\r\n\tvar WrapAroundEnding = 2402;\r\n\tvar TrianglesDrawMode = 0;\r\n\tvar TriangleStripDrawMode = 1;\r\n\tvar TriangleFanDrawMode = 2;\r\n\tvar LinearEncoding = 3000;\r\n\tvar sRGBEncoding = 3001;\r\n\tvar GammaEncoding = 3007;\r\n\tvar RGBEEncoding = 3002;\r\n\tvar LogLuvEncoding = 3003;\r\n\tvar RGBM7Encoding = 3004;\r\n\tvar RGBM16Encoding = 3005;\r\n\tvar RGBDEncoding = 3006;\r\n\tvar BasicDepthPacking = 3200;\r\n\tvar RGBADepthPacking = 3201;\r\n\tvar TangentSpaceNormalMap = 0;\r\n\tvar ObjectSpaceNormalMap = 1;\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar _Math = {\r\n\r\n\t\tDEG2RAD: Math.PI / 180,\r\n\t\tRAD2DEG: 180 / Math.PI,\r\n\r\n\t\tgenerateUUID: ( function () {\r\n\r\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\t\t\tvar lut = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function generateUUID() {\r\n\r\n\t\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\r\n\r\n\t\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\t\t\t\treturn uuid.toUpperCase();\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclamp: function ( value, min, max ) {\r\n\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t\t},\r\n\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t\t},\r\n\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t\t},\r\n\r\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\t\tlerp: function ( x, y, t ) {\r\n\r\n\t\t\treturn ( 1 - t ) * x + t * y;\r\n\r\n\t\t},\r\n\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t\t},\r\n\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t\t},\r\n\r\n\t\t// Random integer from <low, high> interval\r\n\r\n\t\trandInt: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <low, high> interval\r\n\r\n\t\trandFloat: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\r\n\t\trandFloatSpread: function ( range ) {\r\n\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t\t},\r\n\r\n\t\tdegToRad: function ( degrees ) {\r\n\r\n\t\t\treturn degrees * _Math.DEG2RAD;\r\n\r\n\t\t},\r\n\r\n\t\tradToDeg: function ( radians ) {\r\n\r\n\t\t\treturn radians * _Math.RAD2DEG;\r\n\r\n\t\t},\r\n\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t\t},\r\n\r\n\t\tceilPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloorPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tisVector2: true,\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector2();\r\n\t\t\tvar max = new Vector2();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Matrix4() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\tisMatrix4: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyPosition: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements, me = m.elements;\r\n\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractRotation: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function extractRotation( m ) {\r\n\r\n\t\t\t\t// this method does not support reflection matrices\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\r\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\t\t\tte[ 3 ] = 0;\r\n\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\t\t\tte[ 7 ] = 0;\r\n\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t\tte[ 12 ] = 0;\r\n\t\t\t\tte[ 13 ] = 0;\r\n\t\t\t\tte[ 14 ] = 0;\r\n\t\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bottom row\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t// last column\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationFromQuaternion: function () {\r\n\r\n\t\t\tvar zero = new Vector3( 0, 0, 0 );\r\n\t\t\tvar one = new Vector3( 1, 1, 1 );\r\n\r\n\t\t\treturn function makeRotationFromQuaternion( q ) {\r\n\r\n\t\t\t\treturn this.compose( zero, q, one );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar x = new Vector3();\r\n\t\t\tvar y = new Vector3();\r\n\t\t\tvar z = new Vector3();\r\n\r\n\t\t\treturn function lookAt( eye, target, up ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tz.subVectors( eye, target );\r\n\r\n\t\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t\t\tz.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tz.normalize();\r\n\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// up and z are parallel\r\n\r\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t\t\tz.x += 0.0001;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz.z += 0.0001;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tz.normalize();\r\n\t\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx.normalize();\r\n\t\t\t\ty.crossVectors( z, x );\r\n\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m, n ) {\r\n\r\n\t\t\tif ( n !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPosition: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements,\r\n\t\t\t\tme = m.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 4 ] = t12 * detInv;\r\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 8 ] = t13 * detInv;\r\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 12 ] = t14 * detInv;\r\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t\t},\r\n\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationX: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s, c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationY: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts, c, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\t return this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeShear: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, y, z, 0,\r\n\t\t\t\tx, 1, z, 0,\r\n\t\t\t\tx, y, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\t        te[ 1 ] = ( xy + wz ) * sx;\r\n\t\t        te[ 2 ] = ( xz - wy ) * sx;\r\n\t\t        te[ 3 ] = 0;\r\n\r\n\t\t        te[ 4 ] = ( xy - wz ) * sy;\r\n\t\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\t        te[ 6 ] = ( yz + wx ) * sy;\r\n\t\t        te[ 7 ] = 0;\r\n\r\n\t\t        te[ 8 ] = ( xz + wy ) * sz;\r\n\t\t        te[ 9 ] = ( yz - wx ) * sz;\r\n\t\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\t        te[ 11 ] = 0;\r\n\r\n\t\t        te[ 12 ] = position.x;\r\n\t\t        te[ 13 ] = position.y;\r\n\t\t        te[ 14 ] = position.z;\r\n\t\t        te[ 15 ] = 1;\r\n\r\n\t\t        return this;\r\n\r\n\t\t},\r\n\r\n\t\tdecompose: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function decompose( position, quaternion, scale ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t\t// scale the rotation part\r\n\t\t\t\tmatrix.copy( this );\r\n\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tif ( far === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = 1.0 / ( right - left );\r\n\t\t\tvar h = 1.0 / ( top - bottom );\r\n\t\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\t\tvar x = ( right + left ) * w;\r\n\t\t\tvar y = ( top + bottom ) * h;\r\n\t\t\tvar z = ( far + near ) * p;\r\n\r\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Quaternion( x, y, z, w ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Quaternion, {\r\n\r\n\t\tslerp: function ( qa, qb, qm, t ) {\r\n\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t\t},\r\n\r\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Quaternion.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tw: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._w;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._w = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Quaternion.prototype, {\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( quaternion ) {\r\n\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c1 = cos( x / 2 );\r\n\t\t\tvar c2 = cos( y / 2 );\r\n\t\t\tvar c3 = cos( z / 2 );\r\n\r\n\t\t\tvar s1 = sin( x / 2 );\r\n\t\t\tvar s2 = sin( y / 2 );\r\n\t\t\tvar s3 = sin( z / 2 );\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\r\n\t\t\tif ( trace > 0 ) {\r\n\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromUnitVectors: function () {\r\n\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar r;\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\r\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\t\tr = 0;\r\n\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\treturn this.normalize();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tangleTo: function ( q ) {\r\n\r\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t\t},\r\n\r\n\t\trotateTowards: function ( q, step ) {\r\n\r\n\t\t\tvar angle = this.angleTo( q );\r\n\r\n\t\t\tif ( angle === 0 ) return this;\r\n\r\n\t\t\tvar t = Math.min( 1, step / angle );\r\n\r\n\t\t\tthis.slerp( q, t );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tinverse: function () {\r\n\r\n\t\t\t// quaternion is assumed to have unit length\r\n\r\n\t\t\treturn this.conjugate();\r\n\r\n\t\t},\r\n\r\n\t\tconjugate: function () {\r\n\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tvar l = this.length();\r\n\r\n\t\t\tif ( l === 0 ) {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl = 1 / l;\r\n\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( q, p ) {\r\n\r\n\t\t\tif ( p !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( q ) {\r\n\r\n\t\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tslerp: function ( qb, t ) {\r\n\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.copy( qb );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\t\tvar s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\t\treturn this.normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( quaternion ) {\r\n\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector3( x, y, z ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tisVector3: true,\r\n\r\n\t\tset: function ( x, y, z ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyEuler: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyAxisAngle: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t\t// calculate quat * vector\r\n\r\n\t\t\tvar ix = qw * x + qy * z - qz * y;\r\n\t\t\tvar iy = qw * y + qz * x - qx * z;\r\n\t\t\tvar iz = qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t\t// calculate result * inverse quat\r\n\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tproject: function ( camera ) {\r\n\r\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tunproject: function () {\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function unproject( camera ) {\r\n\r\n\t\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttransformDirection: function ( m ) {\r\n\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector3();\r\n\t\t\tvar max = new Vector3();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t\t},\r\n\r\n\t\t// TODO lengthSquared?\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.crossVectors( this, v );\r\n\r\n\t\t},\r\n\r\n\t\tcrossVectors: function ( a, b ) {\r\n\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnVector: function ( vector ) {\r\n\r\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\r\n\r\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnPlane: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\t\treturn this.sub( v1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\treflect: function () {\r\n\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function reflect( normal ) {\r\n\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tangleTo: function ( v ) {\r\n\r\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t\t// clamp, to handle numerical problems\r\n\r\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSpherical: function ( s ) {\r\n\r\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\r\n\r\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindrical: function ( c ) {\r\n\r\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.x = radius * Math.sin( theta );\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 12 ];\r\n\t\t\tthis.y = e[ 13 ];\r\n\t\t\tthis.z = e[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Matrix3() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tisMatrix3: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix4: function ( m ) {\r\n\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar me = matrix.elements,\r\n\t\t\t\tte = this.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\t\tte[ 3 ] = t12 * detInv;\r\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\t\tte[ 6 ] = t13 * detInv;\r\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar tmp, m = this.elements;\r\n\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t\t},\r\n\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\t\tvar m = this.elements;\r\n\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\t\tvar c = Math.cos( rotation );\r\n\t\t\tvar s = Math.sin( rotation );\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t\t0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( sx, sy ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\r\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotate: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta );\r\n\t\t\tvar s = Math.sin( theta );\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\r\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\r\n\r\n\t\t\tte[ 0 ] = c * a11 + s * a21;\r\n\t\t\tte[ 3 ] = c * a12 + s * a22;\r\n\t\t\tte[ 6 ] = c * a13 + s * a23;\r\n\r\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\r\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\r\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( tx, ty ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\r\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar ImageUtils = {\r\n\r\n\t\tgetDataURL: function ( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\r\n\t\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar textureId = 0;\r\n\r\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\r\n\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\r\n\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.matrixAutoUpdate = true;\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t//\r\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\r\n\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\r\n\t}\r\n\r\n\tTexture.DEFAULT_IMAGE = undefined;\r\n\tTexture.DEFAULT_MAPPING = UVMapping;\r\n\r\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Texture,\r\n\r\n\t\tisTexture: true,\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\t\tthis.mapping = source.mapping;\r\n\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\t\tthis.center.copy( source.center );\r\n\t\t\tthis.rotation = source.rotation;\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar output = {\r\n\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\r\n\t\t\t\tmapping: this.mapping,\r\n\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\t\trotation: this.rotation,\r\n\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\t\tformat: this.format,\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\t\tflipY: this.flipY\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\t\tvar image = this.image;\r\n\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tvar url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( image ) ) {\r\n\r\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\r\n\r\n\t\t\t\t\t\turl = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// process single image\r\n\r\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: url\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.image = image.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t},\r\n\r\n\t\ttransformUv: function ( uv ) {\r\n\r\n\t\t\tif ( this.mapping !== UVMapping ) return;\r\n\r\n\t\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.flipY ) {\r\n\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector4( x, y, z, w ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tisVector4: true,\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( w ) {\r\n\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t\t// q is assumed to be normalized\r\n\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t\tthis.x = 1;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.x = q.x / s;\r\n\t\t\t\tthis.y = q.y / s;\r\n\t\t\t\tthis.z = q.z / s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\t\tte = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\t\tangle = Math.PI;\r\n\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\t\tmin = new Vector4();\r\n\t\t\t\t\tmax = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\t\t\tthis.w = attribute.getW( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Marius Kintel / https://github.com/kintel\r\n\t */\r\n\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\tfunction WebGLRenderTarget( width, height, options ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\r\n\r\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\r\n\t}\r\n\r\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: WebGLRenderTarget,\r\n\r\n\t\tisWebGLRenderTarget: true,\r\n\r\n\t\tsetSize: function ( width, height ) {\r\n\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\r\n\t\t\t\tthis.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\t\tthis.texture = source.texture.clone();\r\n\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\r\n\tfunction WebGLRenderTargetCube( width, height, options ) {\r\n\r\n\t\tWebGLRenderTarget.call( this, width, height, options );\r\n\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\tthis.activeMipMapLevel = 0;\r\n\r\n\t}\r\n\r\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\r\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\r\n\r\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n\tDataTexture.prototype = Object.create( Texture.prototype );\r\n\tDataTexture.prototype.constructor = DataTexture;\r\n\r\n\tDataTexture.prototype.isDataTexture = true;\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tisBox3: true,\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromArray: function ( array ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar x = array[ i ];\r\n\t\t\t\tvar y = array[ i + 1 ];\r\n\t\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromBufferAttribute: function ( attribute ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar x = attribute.getX( i );\r\n\t\t\t\tvar y = attribute.getY( i );\r\n\t\t\t\tvar z = attribute.getZ( i );\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\treturn this.expandByObject( object );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByObject: function () {\r\n\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\t\tvar scope, i, l;\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\tfunction traverse( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\r\n\r\n\t\t\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function expandByObject( object ) {\r\n\r\n\t\t\t\tscope = this;\r\n\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\t\tobject.traverse( traverse );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: ( function () {\r\n\r\n\t\t\tvar closestPoint = new Vector3();\r\n\r\n\t\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsTriangle: ( function () {\r\n\r\n\t\t\t// triangle centered vertices\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\t// triangle edge vectors\r\n\t\t\tvar f0 = new Vector3();\r\n\t\t\tvar f1 = new Vector3();\r\n\t\t\tvar f2 = new Vector3();\r\n\r\n\t\t\tvar testAxis = new Vector3();\r\n\r\n\t\t\tvar center = new Vector3();\r\n\t\t\tvar extents = new Vector3();\r\n\r\n\t\t\tvar triangleNormal = new Vector3();\r\n\r\n\t\t\tfunction satForAxes( axes ) {\r\n\r\n\t\t\t\tvar i, j;\r\n\r\n\t\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t\t\t\ttestAxis.fromArray( axes, i );\r\n\t\t\t\t\t// project the aabb onto the seperating axis\r\n\t\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\r\n\t\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\r\n\t\t\t\t\tvar p0 = v0.dot( testAxis );\r\n\t\t\t\t\tvar p1 = v1.dot( testAxis );\r\n\t\t\t\t\tvar p2 = v2.dot( testAxis );\r\n\t\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t\t\t\t// the axis is seperating and we can exit\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function intersectsTriangle( triangle ) {\r\n\r\n\t\t\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// compute box center and extents\r\n\t\t\t\tthis.getCenter( center );\r\n\t\t\t\textents.subVectors( this.max, center );\r\n\r\n\t\t\t\t// translate triangle to aabb origin\r\n\t\t\t\tv0.subVectors( triangle.a, center );\r\n\t\t\t\tv1.subVectors( triangle.b, center );\r\n\t\t\t\tv2.subVectors( triangle.c, center );\r\n\r\n\t\t\t\t// compute edge vectors for triangle\r\n\t\t\t\tf0.subVectors( v1, v0 );\r\n\t\t\t\tf1.subVectors( v2, v1 );\r\n\t\t\t\tf2.subVectors( v0, v2 );\r\n\r\n\t\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\t\t\tvar axes = [\r\n\t\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\r\n\t\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\r\n\t\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\r\n\t\t\t\t];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// test 3 face normals from the aabb\r\n\t\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// finally testing the face normal of the triangle\r\n\t\t\t\t// use already existing triangle edge vectors here\r\n\t\t\t\ttriangleNormal.crossVectors( f0, f1 );\r\n\t\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\r\n\t\t\t\treturn satForAxes( axes );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetBoundingSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getBoundingSphere( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\r\n\t\t\t\t\ttarget = new Sphere();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar points = [\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3()\r\n\t\t\t];\r\n\r\n\t\t\treturn function applyMatrix4( matrix ) {\r\n\r\n\t\t\t\t// transform of empty box is an empty box.\r\n\t\t\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Sphere( center, radius ) {\r\n\r\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Sphere.prototype, {\r\n\r\n\t\tset: function ( center, radius ) {\r\n\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\r\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( sphere ) {\r\n\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tempty: function () {\r\n\r\n\t\t\treturn ( this.radius <= 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsSphere( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.copy( point );\r\n\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetBoundingBox: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\r\n\t\t\t\ttarget = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.set( this.center, this.center );\r\n\t\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.center.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Plane( normal, constant ) {\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Plane.prototype, {\r\n\r\n\t\tset: function ( normal, constant ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCoplanarPoints: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( plane ) {\r\n\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t\t},\r\n\r\n\t\tprojectPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\r\n\r\n\t\t},\r\n\r\n\t\tintersectLine: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectLine( line, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsLine: function ( line ) {\r\n\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tcoplanarPoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar m1 = new Matrix3();\r\n\r\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\r\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( plane ) {\r\n\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tthis.planes = [\r\n\r\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tObject.assign( Frustum.prototype, {\r\n\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( frustum ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix: function ( m ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsObject: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsObject( object ) {\r\n\r\n\t\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere )\r\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSprite: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsSprite( sprite ) {\r\n\r\n\t\t\t\tsphere.center.set( 0, 0, 0 );\r\n\t\t\t\tsphere.radius = 0.7071067811865476;\r\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function () {\r\n\r\n\t\t\tvar p = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\tvar planes = this.planes;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\t\t// corner at max distance\r\n\r\n\t\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\r\n\r\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\r\n\r\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\r\n\r\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\r\n\r\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogPosition = mvPosition.xyz;\\n#endif\\n\";\r\n\r\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying vec3 vFogPosition;\\n#endif\\n\";\r\n\r\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\tfloat fogDepth = length( vFogPosition );\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying vec3 vFogPosition;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\r\n\r\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\r\n\r\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\r\n\r\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\r\n\r\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\r\n\r\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\r\n\r\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\r\n\r\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\r\n\r\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n\r\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\r\n\r\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\r\n\r\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\r\n\r\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\r\n\r\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\r\n\r\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\r\n\r\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\r\n\r\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\r\n\r\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\r\n\r\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\r\n\r\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\r\n\r\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\r\n\r\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\r\n\r\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\r\n\r\n\tvar ShaderChunk = {\r\n\t\talphamap_fragment: alphamap_fragment,\r\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\t\talphatest_fragment: alphatest_fragment,\r\n\t\taomap_fragment: aomap_fragment,\r\n\t\taomap_pars_fragment: aomap_pars_fragment,\r\n\t\tbegin_vertex: begin_vertex,\r\n\t\tbeginnormal_vertex: beginnormal_vertex,\r\n\t\tbsdfs: bsdfs,\r\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t\tclipping_planes_fragment: clipping_planes_fragment,\r\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t\tclipping_planes_vertex: clipping_planes_vertex,\r\n\t\tcolor_fragment: color_fragment,\r\n\t\tcolor_pars_fragment: color_pars_fragment,\r\n\t\tcolor_pars_vertex: color_pars_vertex,\r\n\t\tcolor_vertex: color_vertex,\r\n\t\tcommon: common,\r\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t\tdisplacementmap_vertex: displacementmap_vertex,\r\n\t\temissivemap_fragment: emissivemap_fragment,\r\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t\tencodings_fragment: encodings_fragment,\r\n\t\tencodings_pars_fragment: encodings_pars_fragment,\r\n\t\tenvmap_fragment: envmap_fragment,\r\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t\tenvmap_vertex: envmap_vertex,\r\n\t\tfog_vertex: fog_vertex,\r\n\t\tfog_pars_vertex: fog_pars_vertex,\r\n\t\tfog_fragment: fog_fragment,\r\n\t\tfog_pars_fragment: fog_pars_fragment,\r\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t\tlightmap_fragment: lightmap_fragment,\r\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\t\tlights_lambert_vertex: lights_lambert_vertex,\r\n\t\tlights_pars_begin: lights_pars_begin,\r\n\t\tlights_phong_fragment: lights_phong_fragment,\r\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t\tlights_physical_fragment: lights_physical_fragment,\r\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t\tlights_fragment_begin: lights_fragment_begin,\r\n\t\tlights_fragment_maps: lights_fragment_maps,\r\n\t\tlights_fragment_end: lights_fragment_end,\r\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\t\tmap_fragment: map_fragment,\r\n\t\tmap_pars_fragment: map_pars_fragment,\r\n\t\tmap_particle_fragment: map_particle_fragment,\r\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t\tmorphnormal_vertex: morphnormal_vertex,\r\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t\tmorphtarget_vertex: morphtarget_vertex,\r\n\t\tnormal_fragment_begin: normal_fragment_begin,\r\n\t\tnormal_fragment_maps: normal_fragment_maps,\r\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\t\tpacking: packing,\r\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t\tproject_vertex: project_vertex,\r\n\t\tdithering_fragment: dithering_fragment,\r\n\t\tdithering_pars_fragment: dithering_pars_fragment,\r\n\t\troughnessmap_fragment: roughnessmap_fragment,\r\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t\tshadowmap_vertex: shadowmap_vertex,\r\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t\tskinbase_vertex: skinbase_vertex,\r\n\t\tskinning_pars_vertex: skinning_pars_vertex,\r\n\t\tskinning_vertex: skinning_vertex,\r\n\t\tskinnormal_vertex: skinnormal_vertex,\r\n\t\tspecularmap_fragment: specularmap_fragment,\r\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\t\ttonemapping_fragment: tonemapping_fragment,\r\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t\tuv_pars_fragment: uv_pars_fragment,\r\n\t\tuv_pars_vertex: uv_pars_vertex,\r\n\t\tuv_vertex: uv_vertex,\r\n\t\tuv2_pars_fragment: uv2_pars_fragment,\r\n\t\tuv2_pars_vertex: uv2_pars_vertex,\r\n\t\tuv2_vertex: uv2_vertex,\r\n\t\tworldpos_vertex: worldpos_vertex,\r\n\r\n\t\tcube_frag: cube_frag,\r\n\t\tcube_vert: cube_vert,\r\n\t\tdepth_frag: depth_frag,\r\n\t\tdepth_vert: depth_vert,\r\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\r\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\r\n\t\tequirect_frag: equirect_frag,\r\n\t\tequirect_vert: equirect_vert,\r\n\t\tlinedashed_frag: linedashed_frag,\r\n\t\tlinedashed_vert: linedashed_vert,\r\n\t\tmeshbasic_frag: meshbasic_frag,\r\n\t\tmeshbasic_vert: meshbasic_vert,\r\n\t\tmeshlambert_frag: meshlambert_frag,\r\n\t\tmeshlambert_vert: meshlambert_vert,\r\n\t\tmeshphong_frag: meshphong_frag,\r\n\t\tmeshphong_vert: meshphong_vert,\r\n\t\tmeshphysical_frag: meshphysical_frag,\r\n\t\tmeshphysical_vert: meshphysical_vert,\r\n\t\tnormal_frag: normal_frag,\r\n\t\tnormal_vert: normal_vert,\r\n\t\tpoints_frag: points_frag,\r\n\t\tpoints_vert: points_vert,\r\n\t\tshadow_frag: shadow_frag,\r\n\t\tshadow_vert: shadow_vert,\r\n\t\tsprite_frag: sprite_frag,\r\n\t\tsprite_vert: sprite_vert\r\n\t};\r\n\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\r\n\tvar UniformsUtils = {\r\n\r\n\t\tmerge: function ( uniforms ) {\r\n\r\n\t\t\tvar merged = {};\r\n\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn merged;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function ( uniforms_src ) {\r\n\r\n\t\t\tvar uniforms_dst = {};\r\n\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\r\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\r\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\r\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uniforms_dst;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n\tfunction Color( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\t\t\treturn this.set( r );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.setRGB( r, g, b );\r\n\r\n\t}\r\n\r\n\tObject.assign( Color.prototype, {\r\n\r\n\t\tisColor: true,\r\n\r\n\t\tr: 1, g: 1, b: 1,\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHex: function ( hex ) {\r\n\r\n\t\t\thex = Math.floor( hex );\r\n\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHSL: function () {\r\n\r\n\t\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function setHSL( h, s, l ) {\r\n\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\r\n\r\n\t\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetStyle: function ( style ) {\r\n\r\n\t\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar m;\r\n\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t\t// rgb / hsl\r\n\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t\t// hex color\r\n\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\r\n\t\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = ColorKeywords[ style ];\r\n\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( color ) {\r\n\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopySRGBToLinear: function () {\r\n\r\n\t\t\tfunction SRGBToLinear( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copySRGBToLinear( color ) {\r\n\r\n\t\t\t\tthis.r = SRGBToLinear( color.r );\r\n\t\t\t\tthis.g = SRGBToLinear( color.g );\r\n\t\t\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcopyLinearToSRGB: function () {\r\n\r\n\t\t\tfunction LinearToSRGB( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copyLinearToSRGB( color ) {\r\n\r\n\t\t\t\tthis.r = LinearToSRGB( color.r );\r\n\t\t\t\tthis.g = LinearToSRGB( color.g );\r\n\t\t\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tconvertSRGBToLinear: function () {\r\n\r\n\t\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToSRGB: function () {\r\n\r\n\t\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetHex: function () {\r\n\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t\t},\r\n\r\n\t\tgetHexString: function () {\r\n\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t\t},\r\n\r\n\t\tgetHSL: function ( target ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\r\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\t\tif ( min === max ) {\r\n\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar delta = max - min;\r\n\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thue /= 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.h = hue;\r\n\t\t\ttarget.s = saturation;\r\n\t\t\ttarget.l = lightness;\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetStyle: function () {\r\n\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t\t},\r\n\r\n\t\toffsetHSL: function () {\r\n\r\n\t\t\tvar hsl = {};\r\n\r\n\t\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t\tthis.getHSL( hsl );\r\n\r\n\t\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( color ) {\r\n\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddColors: function ( color1, color2 ) {\r\n\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( color ) {\r\n\r\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( color ) {\r\n\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( color, alpha ) {\r\n\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpHSL: function () {\r\n\r\n\t\t\tvar hslA = { h: 0, s: 0, l: 0 };\r\n\t\t\tvar hslB = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\treturn function lerpHSL( color, alpha ) {\r\n\r\n\t\t\t\tthis.getHSL( hslA );\r\n\t\t\t\tcolor.getHSL( hslB );\r\n\r\n\t\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\r\n\t\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\r\n\t\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\r\n\r\n\t\t\t\tthis.setHSL( h, s, l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( c ) {\r\n\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.r = array[ offset ];\r\n\t\t\tthis.g = array[ offset + 1 ];\r\n\t\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\treturn this.getHex();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\r\n\tvar UniformsLib = {\r\n\r\n\t\tcommon: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() },\r\n\r\n\t\t\talphaMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tspecularmap: {\r\n\r\n\t\t\tspecularMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tenvmap: {\r\n\r\n\t\t\tenvMap: { value: null },\r\n\t\t\tflipEnvMap: { value: - 1 },\r\n\t\t\treflectivity: { value: 1.0 },\r\n\t\t\trefractionRatio: { value: 0.98 },\r\n\t\t\tmaxMipLevel: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\taomap: {\r\n\r\n\t\t\taoMap: { value: null },\r\n\t\t\taoMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tlightmap: {\r\n\r\n\t\t\tlightMap: { value: null },\r\n\t\t\tlightMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\temissivemap: {\r\n\r\n\t\t\temissiveMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tbumpmap: {\r\n\r\n\t\t\tbumpMap: { value: null },\r\n\t\t\tbumpScale: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tnormalmap: {\r\n\r\n\t\t\tnormalMap: { value: null },\r\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\r\n\r\n\t\t},\r\n\r\n\t\tdisplacementmap: {\r\n\r\n\t\t\tdisplacementMap: { value: null },\r\n\t\t\tdisplacementScale: { value: 1 },\r\n\t\t\tdisplacementBias: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\troughnessmap: {\r\n\r\n\t\t\troughnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tmetalnessmap: {\r\n\r\n\t\t\tmetalnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tgradientmap: {\r\n\r\n\t\t\tgradientMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tfog: {\r\n\r\n\t\t\tfogDensity: { value: 0.00025 },\r\n\t\t\tfogNear: { value: 1 },\r\n\t\t\tfogFar: { value: 2000 },\r\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\r\n\r\n\t\t},\r\n\r\n\t\tlights: {\r\n\r\n\t\t\tambientLightColor: { value: [] },\r\n\r\n\t\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tcolor: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tdirectionalShadowMap: { value: [] },\r\n\t\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\t\tspotLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tdistance: {},\r\n\t\t\t\tconeCos: {},\r\n\t\t\t\tpenumbraCos: {},\r\n\t\t\t\tdecay: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tspotShadowMap: { value: [] },\r\n\t\t\tspotShadowMatrix: { value: [] },\r\n\r\n\t\t\tpointLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdecay: {},\r\n\t\t\t\tdistance: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {},\r\n\t\t\t\tshadowCameraNear: {},\r\n\t\t\t\tshadowCameraFar: {}\r\n\t\t\t} },\r\n\r\n\t\t\tpointShadowMap: { value: [] },\r\n\t\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\t\themisphereLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tskyColor: {},\r\n\t\t\t\tgroundColor: {}\r\n\t\t\t} },\r\n\r\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t\trectAreaLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\twidth: {},\r\n\t\t\t\theight: {}\r\n\t\t\t} }\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tsize: { value: 1.0 },\r\n\t\t\tscale: { value: 1.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\trotation: { value: 0.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\r\n\tvar ShaderLib = {\r\n\r\n\t\tbasic: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t\t},\r\n\r\n\t\tlambert: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t\t},\r\n\r\n\t\tphong: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.gradientmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\r\n\t\t\t\t\tshininess: { value: 30 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t\t},\r\n\r\n\t\tstandard: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.roughnessmap,\r\n\t\t\t\tUniformsLib.metalnessmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\troughness: { value: 0.5 },\r\n\t\t\t\t\tmetalness: { value: 0.5 },\r\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.points,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t\t},\r\n\r\n\t\tdashed: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tscale: { value: 1 },\r\n\t\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t\t},\r\n\r\n\t\tdepth: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t\t},\r\n\r\n\t\tnormal: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.normal_vert,\r\n\t\t\tfragmentShader: ShaderChunk.normal_frag\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.sprite,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t\t},\r\n\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\r\n\t\tcube: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttCube: { value: null },\r\n\t\t\t\ttFlip: { value: - 1 },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t\t},\r\n\r\n\t\tequirect: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t\t},\r\n\r\n\t\tdistanceRGBA: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\treferencePosition: { value: new Vector3() },\r\n\t\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t\t},\r\n\r\n\t\tshadow: {\r\n\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t},\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tShaderLib.physical = {\r\n\r\n\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\tShaderLib.standard.uniforms,\r\n\t\t\t{\r\n\t\t\t\tclearCoat: { value: 0 },\r\n\t\t\t\tclearCoatRoughness: { value: 0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAnimation() {\r\n\r\n\t\tvar context = null;\r\n\t\tvar isAnimating = false;\r\n\t\tvar animationLoop = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tif ( isAnimating === false ) return;\r\n\r\n\t\t\tanimationLoop( time, frame );\r\n\r\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tstart: function () {\r\n\r\n\t\t\t\tif ( isAnimating === true ) return;\r\n\t\t\t\tif ( animationLoop === null ) return;\r\n\r\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t\t\tisAnimating = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tstop: function () {\r\n\r\n\t\t\t\tisAnimating = false;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetAnimationLoop: function ( callback ) {\r\n\r\n\t\t\t\tanimationLoop = callback;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetContext: function ( value ) {\r\n\r\n\t\t\t\tcontext = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAttributes( gl ) {\r\n\r\n\t\tvar buffers = new WeakMap();\r\n\r\n\t\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\t\tvar buffer = gl.createBuffer();\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\t\tattribute.onUploadCallback();\r\n\r\n\t\t\tvar type = gl.FLOAT;\r\n\r\n\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\t\ttype = gl.FLOAT;\r\n\r\n\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\r\n\r\n\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\t\ttype = gl.SHORT;\r\n\r\n\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_INT;\r\n\r\n\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\t\ttype = gl.INT;\r\n\r\n\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\t\ttype = gl.BYTE;\r\n\r\n\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t\tversion: attribute.version\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar updateRange = attribute.updateRange;\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\t\tif ( attribute.dynamic === false ) {\r\n\r\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\r\n\r\n\t\t\t} else if ( updateRange.count === - 1 ) {\r\n\r\n\t\t\t\t// Not using update ranges\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t\t} else if ( updateRange.count === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\r\n\r\n\t\t\t\tupdateRange.count = - 1; // reset range\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction get( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\treturn buffers.get( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data ) {\r\n\r\n\t\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( attribute, bufferType ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data === undefined ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\t\tdata.version = attribute.version;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Euler( x, y, z, order ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || Euler.DefaultOrder;\r\n\r\n\t}\r\n\r\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\n\tEuler.DefaultOrder = 'XYZ';\r\n\r\n\tObject.defineProperties( Euler.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\torder: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._order;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._order = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Euler.prototype, {\r\n\r\n\t\tisEuler: true,\r\n\r\n\t\tset: function ( x, y, z, order ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( euler ) {\r\n\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\t\tvar clamp = _Math.clamp;\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\torder = order || this._order;\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._order = order;\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromQuaternion: function () {\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function setFromQuaternion( q, order, update ) {\r\n\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t\t},\r\n\r\n\t\treorder: function () {\r\n\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t\tvar q = new Quaternion();\r\n\r\n\t\t\treturn function reorder( newOrder ) {\r\n\r\n\t\t\t\tq.setFromEuler( this );\r\n\r\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( euler ) {\r\n\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array ) {\r\n\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\t\tif ( optionalResult ) {\r\n\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Layers() {\r\n\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Layers.prototype, {\r\n\r\n\t\tset: function ( channel ) {\r\n\r\n\t\t\tthis.mask = 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tenable: function ( channel ) {\r\n\r\n\t\t\tthis.mask |= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\ttoggle: function ( channel ) {\r\n\r\n\t\t\tthis.mask ^= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tdisable: function ( channel ) {\r\n\r\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\r\n\r\n\t\t},\r\n\r\n\t\ttest: function ( layers ) {\r\n\r\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\r\n\tvar object3DId = 0;\r\n\r\n\tfunction Object3D() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\r\n\t\tthis.up = Object3D.DefaultUp.clone();\r\n\r\n\t\tvar position = new Vector3();\r\n\t\tvar rotation = new Euler();\r\n\t\tvar quaternion = new Quaternion();\r\n\t\tvar scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tthis.layers = new Layers();\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\r\n\tObject3D.DefaultMatrixAutoUpdate = true;\r\n\r\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Object3D,\r\n\r\n\t\tisObject3D: true,\r\n\r\n\t\tonBeforeRender: function () {},\r\n\t\tonAfterRender: function () {},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// assumes q is normalized\r\n\r\n\t\t\tthis.quaternion.copy( q );\r\n\r\n\t\t},\r\n\r\n\t\trotateOnAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateOnWorldAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in world space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t// method assumes no rotated parent\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.premultiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateOnAxis: function () {\r\n\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function translateOnAxis( axis, distance ) {\r\n\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function translateX( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function translateY( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function translateZ( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlocalToWorld: function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tworldToLocal: function () {\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function worldToLocal( vector ) {\r\n\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function lookAt( x, y, z ) {\r\n\r\n\t\t\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t\t\tvector.copy( x );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvector.set( x, y, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.isCamera ) {\r\n\r\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object === this ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( object && object.isObject3D ) ) {\r\n\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\t\tthis.children.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tobject.parent = null;\r\n\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectById: function ( id ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByName: function ( name ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\t\treturn object;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldPosition: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldQuaternion: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\treturn function getWorldQuaternion( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\r\n\t\t\t\t\ttarget = new Quaternion();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, target, scale );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldScale: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function getWorldScale( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\traycast: function () {},\r\n\r\n\t\ttraverse: function ( callback ) {\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseVisible: function ( callback ) {\r\n\r\n\t\t\tif ( this.visible === false ) return;\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\t\tvar parent = this.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tcallback( parent );\r\n\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\t\tforce = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update children\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\t// meta is a string when called from JSON.stringify\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tvar output = {};\r\n\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {},\r\n\t\t\t\t\tshapes: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// standard Object3D serialization\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t\tif ( this.visible === false ) object.visible = false;\r\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\r\n\t\t\tobject.layers = this.layers.mask;\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn element.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\t\tvar parameters = this.geometry.parameters;\r\n\r\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\t\tvar shapes = parameters.shapes;\r\n\r\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\t\tvar uuids = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\t\tobject.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\r\n\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.object = object;\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function ( recursive ) {\r\n\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.up.copy( source.up );\r\n\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\t\tthis.layers.mask = source.layers.mask;\r\n\t\t\tthis.visible = source.visible;\r\n\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\r\n\tfunction Camera() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t}\r\n\r\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Camera,\r\n\r\n\t\tisCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author arose / http://github.com/arose\r\n\t */\r\n\r\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: OrthographicCamera,\r\n\r\n\t\tisOrthographicCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.left = source.left;\r\n\t\t\tthis.right = source.right;\r\n\t\t\tthis.top = source.top;\r\n\t\t\tthis.bottom = source.bottom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\t\tvar left = cx - dx;\r\n\t\t\tvar right = cx + dx;\r\n\t\t\tvar top = cy + dy;\r\n\t\t\tvar bottom = cy - dy;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\r\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\r\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\r\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\r\n\r\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\r\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\r\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\r\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.left = this.left;\r\n\t\t\tdata.object.right = this.right;\r\n\t\t\tdata.object.top = this.top;\r\n\t\t\tdata.object.bottom = this.bottom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Face3.prototype, {\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tvar geometryId = 0; // Geometry uses even numbers as Id\r\n\r\n\tfunction Geometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [[]];\r\n\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphNormals = [];\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\tthis.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Geometry,\r\n\r\n\t\tisGeometry: true,\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\tthis.applyMatrix( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tcb.normalize();\r\n\r\n\t\t\t\tface.normal.copy( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ] = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFlatVertexNormals: function () {\r\n\r\n\t\t\tvar f, fl, face;\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeMorphNormals: function () {\r\n\r\n\t\t\tvar i, il, f, fl, face;\r\n\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\t\tvar tmpGeo = new Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// create on first access\r\n\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tfaceNormal = new Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\r\n\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t\t// set vertices to morph target\r\n\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t// compute morph normals\r\n\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t\t// store morph normals\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restore original normals\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normalMatrix,\r\n\t\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\t\tvertices1 = this.vertices,\r\n\t\t\t\tvertices2 = geometry.vertices,\r\n\t\t\t\tfaces1 = this.faces,\r\n\t\t\t\tfaces2 = geometry.faces,\r\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\r\n\t\t\t\tcolors1 = this.colors,\r\n\t\t\t\tcolors2 = geometry.colors;\r\n\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmergeMesh: function ( mesh ) {\r\n\r\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\r\n\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\r\n\t\tmergeVertices: function () {\r\n\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Use unique set of vertices\r\n\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.vertices = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\t\tvar faces = this.faces;\r\n\t\t\tvar length = faces.length;\r\n\r\n\t\t\t// tag faces\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// sort faces\r\n\r\n\t\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t\t// sort uvs\r\n\r\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\t\tvar newUvs1, newUvs2;\r\n\r\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Geometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertices = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\t\tvar hasMaterial = true;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\t\tvar faceType = 0;\r\n\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = {};\r\n\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new Geometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar i, il, j, jl, k, kl;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.colors = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [[]];\r\n\t\t\tthis.morphTargets = [];\r\n\t\t\tthis.morphNormals = [];\r\n\t\t\tthis.skinWeights = [];\r\n\t\t\tthis.skinIndices = [];\r\n\t\t\tthis.lineDistances = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tvar vertices = source.vertices;\r\n\r\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tvar colors = source.colors;\r\n\r\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tvar faces = source.faces;\r\n\r\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// face vertex uvs\r\n\r\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphTargets = source.morphTargets;\r\n\r\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = {};\r\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\r\n\r\n\t\t\t\t// vertices\r\n\r\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.vertices = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// normals\r\n\r\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.normals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph normals\r\n\r\n\t\t\tvar morphNormals = source.morphNormals;\r\n\r\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = {};\r\n\r\n\t\t\t\t// vertex normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.vertexNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\r\n\t\t\t\t\t\tvar destVertexNormal = {};\r\n\r\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\r\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\r\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\r\n\r\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.faceNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphNormals.push( morphNormal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin weights\r\n\r\n\t\t\tvar skinWeights = source.skinWeights;\r\n\r\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin indices\r\n\r\n\t\t\tvar skinIndices = source.skinIndices;\r\n\r\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tvar lineDistances = source.lineDistances;\r\n\r\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update flags\r\n\r\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\r\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\r\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferAttribute.prototype, {\r\n\r\n\t\tisBufferAttribute: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.normalized = source.normalized;\r\n\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyArray: function ( array ) {\r\n\r\n\t\t\tthis.array.set( array );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new Color();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector2();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\r\n\r\n\r\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\r\n\r\n\r\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\r\n\r\n\r\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\r\n\r\n\r\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\r\n\r\n\r\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\r\n\r\n\r\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectGeometry() {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.morphTargets = {};\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\t// this.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( DirectGeometry.prototype, {\r\n\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex = undefined;\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t// materials\r\n\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.groups = groups;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\t\tvar morphTargetsPosition;\r\n\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\r\n\t\t\t\t\t\tname: morphTargets[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\t\tvar morphTargetsNormal;\r\n\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\r\n\t\t\t\t\t\tname: morphNormals[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// morphs\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// skins\r\n\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeGroups( geometry );\r\n\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction arrayMax( array ) {\r\n\r\n\t\tif ( array.length === 0 ) return - Infinity;\r\n\r\n\t\tvar max = array[ 0 ];\r\n\r\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\r\n\r\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\r\n\r\n\tfunction BufferGeometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\r\n\t\tthis.morphAttributes = {};\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: BufferGeometry,\r\n\r\n\t\tisBufferGeometry: true,\r\n\r\n\t\tgetIndex: function () {\r\n\r\n\t\t\treturn this.index;\r\n\r\n\t\t},\r\n\r\n\t\tsetIndex: function ( index ) {\r\n\r\n\t\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.index = index;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( name === 'index' ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetAttribute: function ( name ) {\r\n\r\n\t\t\treturn this.attributes[ name ];\r\n\r\n\t\t},\r\n\r\n\t\tremoveAttribute: function ( name ) {\r\n\r\n\t\t\tdelete this.attributes[ name ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\t\tthis.groups.push( {\r\n\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tclearGroups: function () {\r\n\r\n\t\t\tthis.groups = [];\r\n\r\n\t\t},\r\n\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tmatrix.applyToBufferAttribute( position );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normal = this.attributes.normal;\r\n\r\n\t\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isPoints || object.isLine ) {\r\n\r\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tvar position = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateFromObject: function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\r\n\r\n\t\t\t\t\tdirect = undefined;\r\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t\tgeometry = direct;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.position;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.normal;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.color;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.uv;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.lineDistance;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t\t},\r\n\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\r\n\t\t\t\t\tattribute.name = morphTarget.name;\r\n\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning\r\n\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\t\tbox.setFromBufferAttribute( position );\r\n\t\t\t\t\tbox.getCenter( center );\r\n\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvector.x = position.getX( i );\r\n\t\t\t\t\t\tvector.y = position.getY( i );\r\n\t\t\t\t\t\tvector.z = position.getZ( i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\t// backwards compatibility\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function () {\r\n\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tif ( attributes.position ) {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\t// indexed elements\r\n\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, offset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset === undefined ) {\r\n\r\n\t\t\t\toffset = 0;\r\n\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\r\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeNormals: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function normalizeNormals() {\r\n\r\n\t\t\t\tvar normals = this.attributes.normal;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvector.x = normals.getX( i );\r\n\t\t\t\t\tvector.y = normals.getY( i );\r\n\t\t\t\t\tvector.z = normals.getZ( i );\r\n\r\n\t\t\t\t\tvector.normalize();\r\n\r\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoNonIndexed: function () {\r\n\r\n\t\t\tif ( this.index === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry2 = new BufferGeometry();\r\n\r\n\t\t\tvar indices = this.index.array;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\t\tvar array = attribute.array;\r\n\t\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard BufferGeometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = { attributes: {} };\r\n\r\n\t\t\tvar index = this.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array,\r\n\t\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new BufferGeometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar name, i, l;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// index\r\n\r\n\t\t\tvar index = source.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// attributes\r\n\r\n\t\t\tvar attributes = source.attributes;\r\n\r\n\t\t\tfor ( name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph attributes\r\n\r\n\t\t\tvar morphAttributes = source.morphAttributes;\r\n\r\n\t\t\tfor ( name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tvar groups = source.groups;\r\n\r\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// draw range\r\n\r\n\t\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t\t// user data\r\n\r\n\t\t\tthis.userData = source.userData;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// BoxGeometry\r\n\r\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\r\n\tBoxGeometry.prototype.constructor = BoxGeometry;\r\n\r\n\t// BoxBufferGeometry\r\n\r\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\t\tdepth = depth || 1;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar numberOfVertices = 0;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tvar segmentWidth = width / gridX;\r\n\t\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\t\tvar widthHalf = width / 2;\r\n\t\t\tvar heightHalf = height / 2;\r\n\t\t\tvar depthHalf = depth / 2;\r\n\r\n\t\t\tvar gridX1 = gridX + 1;\r\n\t\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\t\tvar vertexCounter = 0;\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar ix, iy;\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PlaneGeometry\r\n\r\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\r\n\r\n\t// PlaneBufferGeometry\r\n\r\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar materialId = 0;\r\n\r\n\tfunction Material() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\r\n\t\tthis.fog = true;\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.blending = NormalBlending;\r\n\t\tthis.side = FrontSide;\r\n\t\tthis.flatShading = false;\r\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\tthis.clippingPlanes = null;\r\n\t\tthis.clipIntersection = false;\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\tthis.dithering = false;\r\n\r\n\t\tthis.alphaTest = 0;\r\n\t\tthis.premultipliedAlpha = false;\r\n\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Material,\r\n\r\n\t\tisMaterial: true,\r\n\r\n\t\tonBeforeCompile: function () {},\r\n\r\n\t\tsetValues: function ( values ) {\r\n\r\n\t\t\tif ( values === undefined ) return;\r\n\r\n\t\t\tfor ( var key in values ) {\r\n\r\n\t\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for backward compatability if shading is set in the constructor\r\n\t\t\t\tif ( key === 'shading' ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\r\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\r\n\r\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\r\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\r\n\t\t\tdata.depthFunc = this.depthFunc;\r\n\t\t\tdata.depthTest = this.depthTest;\r\n\t\t\tdata.depthWrite = this.depthWrite;\r\n\r\n\t\t\t// rotation (SpriteMaterial)\r\n\t\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\r\n\t\t\tif ( this.skinning === true ) data.skinning = true;\r\n\r\n\t\t\tif ( this.visible === false ) data.visible = false;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\r\n\t\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.fog = source.fog;\r\n\t\t\tthis.lights = source.lights;\r\n\r\n\t\t\tthis.blending = source.blending;\r\n\t\t\tthis.side = source.side;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\t\tthis.precision = source.precision;\r\n\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\t\tthis.dithering = source.dithering;\r\n\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tthis.clipShadows = source.clipShadows;\r\n\t\t\tthis.clipIntersection = source.clipIntersection;\r\n\r\n\t\t\tvar srcPlanes = source.clippingPlanes,\r\n\t\t\t\tdstPlanes = null;\r\n\r\n\t\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\t\tvar n = srcPlanes.length;\r\n\t\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.clippingPlanes = dstPlanes;\r\n\r\n\t\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\r\n\r\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShaderMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t\tthis.extensions = {\r\n\t\t\tderivatives: false, // set to use derivatives\r\n\t\t\tfragDepth: false, // set to use fragment depth values\r\n\t\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t\t};\r\n\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShaderMaterial.prototype = Object.create( Material.prototype );\r\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\r\n\r\n\tShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n\tShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\tthis.extensions = source.extensions;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( var name in this.uniforms ) {\r\n\r\n\t\t\tvar uniform = this.uniforms[ name ];\r\n\t\t\tvar value = uniform.value;\r\n\r\n\t\t\tif ( value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Ray( origin, direction ) {\r\n\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( ray ) {\r\n\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tlookAt: function ( v ) {\r\n\r\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trecast: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function recast( t ) {\r\n\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\t\tvar directionDistance = target.dot( this.direction );\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSqToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToPoint( point ) {\r\n\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t\t// point behind the ray\r\n\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdistanceSqToSegment: function () {\r\n\r\n\t\t\tvar segCenter = new Vector3();\r\n\t\t\tvar segDir = new Vector3();\r\n\t\t\tvar diff = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sqrDist;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectSphere( sphere, target ) {\r\n\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t\t// Return if the ray never intersects the plane\r\n\r\n\t\t\treturn t >= 0 ? t : null;\r\n\r\n\t\t},\r\n\r\n\t\tintersectPlane: function ( plane, target ) {\r\n\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\t\tif ( t === null ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.at( t, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// check if the ray lies on the plane first\r\n\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\tintersectBox: function ( box, target ) {\r\n\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\t\tvar origin = this.origin;\r\n\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t\t//return point closest to the ray (positive side)\r\n\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: ( function () {\r\n\r\n\t\t\tvar v = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectTriangle: function () {\r\n\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new Vector3();\r\n\t\t\tvar edge1 = new Vector3();\r\n\t\t\tvar edge2 = new Vector3();\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( ray ) {\r\n\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Triangle( a, b, c ) {\r\n\r\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tgetNormal: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\r\n\t\t\treturn function getNormal( a, b, c, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttarget.subVectors( c, b );\r\n\t\t\t\tv0.subVectors( a, b );\r\n\t\t\t\ttarget.cross( v0 );\r\n\r\n\t\t\t\tvar targetLengthSq = target.lengthSq();\r\n\t\t\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\t// static/instance method to calculate barycentric coordinates\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\t\tgetBarycoord: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t\t\tv0.subVectors( c, a );\r\n\t\t\t\tv1.subVectors( b, a );\r\n\t\t\t\tv2.subVectors( point, a );\r\n\r\n\t\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// collinear or singular triangle\r\n\t\t\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\t\treturn target.set( - 2, - 1, - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar invDenom = 1 / denom;\r\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function containsPoint( point, a, b, c ) {\r\n\r\n\t\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\r\n\r\n\t\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}()\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tset: function ( a, b, c ) {\r\n\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( triangle ) {\r\n\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetArea: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getArea() {\r\n\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetMidpoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t\t},\r\n\r\n\t\tgetNormal: function ( target ) {\r\n\r\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tgetPlane: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tgetBarycoord: function ( point, target ) {\r\n\r\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsTriangle( this );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPoint: function () {\r\n\r\n\t\t\tvar vab = new Vector3();\r\n\t\t\tvar vac = new Vector3();\r\n\t\t\tvar vbc = new Vector3();\r\n\t\t\tvar vap = new Vector3();\r\n\t\t\tvar vbp = new Vector3();\r\n\t\t\tvar vcp = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPoint( p, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar a = this.a, b = this.b, c = this.c;\r\n\t\t\t\tvar v, w;\r\n\r\n\t\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t\t\tvab.subVectors( b, a );\r\n\t\t\t\tvac.subVectors( c, a );\r\n\t\t\t\tvap.subVectors( p, a );\r\n\t\t\t\tvar d1 = vab.dot( vap );\r\n\t\t\t\tvar d2 = vac.dot( vap );\r\n\t\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t\t\treturn target.copy( a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvbp.subVectors( p, b );\r\n\t\t\t\tvar d3 = vab.dot( vbp );\r\n\t\t\t\tvar d4 = vac.dot( vbp );\r\n\t\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t\t\treturn target.copy( b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vc = d1 * d4 - d3 * d2;\r\n\t\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvcp.subVectors( p, c );\r\n\t\t\t\tvar d5 = vab.dot( vcp );\r\n\t\t\t\tvar d6 = vac.dot( vcp );\r\n\t\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t\t\treturn target.copy( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vb = d5 * d2 - d1 * d6;\r\n\t\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar va = d3 * d6 - d5 * d4;\r\n\t\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t\t\tvbc.subVectors( c, b );\r\n\t\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face region\r\n\t\t\t\tvar denom = 1 / ( va + vb + vc );\r\n\t\t\t\t// u = va * denom\r\n\t\t\t\tv = vb * denom;\r\n\t\t\t\tw = vc * denom;\r\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( triangle ) {\r\n\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\r\n\tfunction Mesh( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t\tthis.drawMode = TrianglesDrawMode;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Mesh,\r\n\r\n\t\tisMesh: true,\r\n\r\n\t\tsetDrawMode: function ( value ) {\r\n\r\n\t\t\tthis.drawMode = value;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.drawMode = source.drawMode;\r\n\r\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMorphTargets: function () {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar m, ml, name;\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tvar keys = Object.keys( morphAttributes );\r\n\r\n\t\t\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\r\n\r\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tvar tempA = new Vector3();\r\n\t\t\tvar tempB = new Vector3();\r\n\t\t\tvar tempC = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tvar barycoord = new Vector3();\r\n\r\n\t\t\tvar intersectionPoint = new Vector3();\r\n\t\t\tvar intersectionPointWorld = new Vector3();\r\n\r\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\r\n\r\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\t\t\treturn uv1.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\t\t\tvar intersect;\r\n\r\n\t\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersect === null ) return null;\r\n\r\n\t\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tobject: object\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\r\n\r\n\t\t\t\tvA.fromBufferAttribute( position, a );\r\n\t\t\t\tvB.fromBufferAttribute( position, b );\r\n\t\t\t\tvC.fromBufferAttribute( position, c );\r\n\r\n\t\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\tif ( uv ) {\r\n\r\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar face = new Face3( a, b, c );\r\n\t\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\r\n\r\n\t\t\t\t\tintersection.face = face;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn intersection;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar material = this.material;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\t// Check boundingBox before continuing\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar intersection;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar a, b, c;\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\t\tvar uv = geometry.attributes.uv;\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\t\t\t\tvar i, j, il, jl;\r\n\t\t\t\t\tvar group, groupMaterial;\r\n\t\t\t\t\tvar start, end;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\t// indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = index.getX( j );\r\n\t\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\r\n\t\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = index.getX( i );\r\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\r\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = j;\r\n\t\t\t\t\t\t\t\t\tb = j + 1;\r\n\t\t\t\t\t\t\t\t\tc = j + 2;\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = i;\r\n\t\t\t\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar uvs;\r\n\r\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\r\n\r\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\r\n\r\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\r\n\r\n\t\tvar clearColor = new Color( 0x000000 );\r\n\t\tvar clearAlpha = 0;\r\n\r\n\t\tvar planeCamera, planeMesh;\r\n\t\tvar boxMesh;\r\n\r\n\t\tfunction render( renderList, scene, camera, forceClear ) {\r\n\r\n\t\t\tvar background = scene.background;\r\n\r\n\t\t\tif ( background === null ) {\r\n\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t} else if ( background && background.isColor ) {\r\n\r\n\t\t\t\tsetClear( background, 1 );\r\n\t\t\t\tforceClear = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderer.autoClear || forceClear ) {\r\n\r\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( background && background.isCubeTexture ) {\r\n\r\n\t\t\t\tif ( boxMesh === undefined ) {\r\n\r\n\t\t\t\t\tboxMesh = new Mesh(\r\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\r\n\t\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\r\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\t\tdepthTest: true,\r\n\t\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\r\n\r\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tobjects.update( boxMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\r\n\r\n\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\r\n\r\n\t\t\t} else if ( background && background.isTexture ) {\r\n\r\n\t\t\t\tif ( planeCamera === undefined ) {\r\n\r\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\r\n\t\t\t\t\tplaneMesh = new Mesh(\r\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\r\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tobjects.update( planeMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.map = background;\r\n\r\n\t\t\t\t// TODO Push this to renderList\r\n\r\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setClear( color, alpha ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tgetClearColor: function () {\r\n\r\n\t\t\t\treturn clearColor;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearColor: function ( color, alpha ) {\r\n\r\n\t\t\t\tclearColor.set( color );\r\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\tgetClearAlpha: function () {\r\n\r\n\t\t\t\treturn clearAlpha;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearAlpha: function ( alpha ) {\r\n\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\trender: render\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawArrays( mode, start, count );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\r\n\r\n\t\tvar maxAnisotropy;\r\n\r\n\t\tfunction getMaxAnisotropy() {\r\n\r\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaxAnisotropy = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxAnisotropy;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'highp';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecision = 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 'lowp';\r\n\r\n\t\t}\r\n\r\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\r\n\r\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t\tvar maxPrecision = getMaxPrecision( precision );\r\n\r\n\t\tif ( maxPrecision !== precision ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\t\tprecision = maxPrecision;\r\n\r\n\t\t}\r\n\r\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\t\tvar vertexTextures = maxVertexTextures > 0;\r\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\r\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tisWebGL2: isWebGL2,\r\n\r\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n\t\t\tmaxTextures: maxTextures,\r\n\t\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\t\tmaxTextureSize: maxTextureSize,\r\n\t\t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n\t\t\tmaxAttributes: maxAttributes,\r\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\t\tmaxVaryings: maxVaryings,\r\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n\t\t\tvertexTextures: vertexTextures,\r\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\r\n\t\t\tfloatVertexTextures: floatVertexTextures\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLClipping() {\r\n\r\n\t\tvar scope = this,\r\n\r\n\t\t\tglobalState = null,\r\n\t\t\tnumGlobalPlanes = 0,\r\n\t\t\tlocalClippingEnabled = false,\r\n\t\t\trenderingShadows = false,\r\n\r\n\t\t\tplane = new Plane(),\r\n\t\t\tviewNormalMatrix = new Matrix3(),\r\n\r\n\t\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\t\tthis.uniform = uniform;\r\n\t\tthis.numPlanes = 0;\r\n\t\tthis.numIntersection = 0;\r\n\r\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\r\n\r\n\t\t\tvar enabled =\r\n\t\t\t\tplanes.length !== 0 ||\r\n\t\t\t\tenableLocalClipping ||\r\n\t\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t\t// run another frame in order to reset the state:\r\n\t\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\t\tlocalClippingEnabled;\r\n\r\n\t\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\t\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\t\treturn enabled;\r\n\r\n\t\t};\r\n\r\n\t\tthis.beginShadows = function () {\r\n\r\n\t\t\trenderingShadows = true;\r\n\t\t\tprojectPlanes( null );\r\n\r\n\t\t};\r\n\r\n\t\tthis.endShadows = function () {\r\n\r\n\t\t\trenderingShadows = false;\r\n\t\t\tresetGlobalState();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\r\n\r\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n\r\n\t\t\t\t// there's no local clipping\r\n\r\n\t\t\t\tif ( renderingShadows ) {\r\n\r\n\t\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresetGlobalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n\t\t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n\t\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache.clippingState = dstArray;\r\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t\tfunction resetGlobalState() {\r\n\r\n\t\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\t\tuniform.value = globalState;\r\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n\t\t\t\tdstArray = null;\r\n\r\n\t\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.value = dstArray;\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = nPlanes;\r\n\r\n\t\t\treturn dstArray;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLExtensions( gl ) {\r\n\r\n\t\tvar extensions = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( name ) {\r\n\r\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn extensions[ name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar extension;\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textensions[ name ] = extension;\r\n\r\n\t\t\t\treturn extension;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLGeometries( gl, attributes, info ) {\r\n\r\n\t\tvar geometries = {};\r\n\t\tvar wireframeAttributes = {};\r\n\r\n\t\tfunction onGeometryDispose( event ) {\r\n\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in buffergeometry.attributes ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\tif ( attribute ) {\r\n\r\n\t\t\t\tattributes.remove( attribute );\r\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinfo.memory.geometries --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction get( object, geometry ) {\r\n\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry ) return buffergeometry;\r\n\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\t\tinfo.memory.geometries ++;\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( geometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in geometryAttributes ) {\r\n\r\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\r\n\r\n\t\t\tif ( attribute ) return attribute;\r\n\r\n\t\t\tvar indices = [];\r\n\r\n\t\t\tvar geometryIndex = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\t// console.time( 'wireframe' );\r\n\r\n\t\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\t\tvar array = geometryIndex.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar array = geometryAttributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\r\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\r\n\r\n\t\t\treturn attribute;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tupdate: update,\r\n\r\n\t\t\tgetWireframeAttribute: getWireframeAttribute\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tvar type, bytesPerElement;\r\n\r\n\t\tfunction setIndex( value ) {\r\n\r\n\t\t\ttype = value.type;\r\n\t\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLInfo( gl ) {\r\n\r\n\t\tvar memory = {\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\t};\r\n\r\n\t\tvar render = {\r\n\t\t\tframe: 0,\r\n\t\t\tcalls: 0,\r\n\t\t\ttriangles: 0,\r\n\t\t\tpoints: 0,\r\n\t\t\tlines: 0\r\n\t\t};\r\n\r\n\t\tfunction update( count, mode, instanceCount ) {\r\n\r\n\t\t\tinstanceCount = instanceCount || 1;\r\n\r\n\t\t\trender.calls ++;\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.TRIANGLE_STRIP:\r\n\t\t\t\tcase gl.TRIANGLE_FAN:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINES:\r\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.POINTS:\r\n\t\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\trender.frame ++;\r\n\t\t\trender.calls = 0;\r\n\t\t\trender.triangles = 0;\r\n\t\t\trender.points = 0;\r\n\t\t\trender.lines = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmemory: memory,\r\n\t\t\trender: render,\r\n\t\t\tprograms: null,\r\n\t\t\tautoReset: true,\r\n\t\t\treset: reset,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\r\n\r\n\t}\r\n\r\n\tfunction WebGLMorphtargets( gl ) {\r\n\r\n\t\tvar influencesList = {};\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\t\tfunction update( object, geometry, material, program ) {\r\n\r\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar length = objectInfluences.length;\r\n\r\n\t\t\tvar influences = influencesList[ geometry.id ];\r\n\r\n\t\t\tif ( influences === undefined ) {\r\n\r\n\t\t\t\t// initialise list\r\n\r\n\t\t\t\tinfluences = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\r\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\r\n\r\n\t\t\t// Remove current morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\r\n\r\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Collect influences\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tinfluence[ 0 ] = i;\r\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfluences.sort( absNumericalSort );\r\n\r\n\t\t\t// Add morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 0 ];\r\n\t\t\t\t\tvar value = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( value ) {\r\n\r\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\r\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\r\n\r\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmorphInfluences[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLObjects( geometries, info ) {\r\n\r\n\t\tvar updateList = {};\r\n\r\n\t\tfunction update( object ) {\r\n\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\r\n\r\n\t\t\t// Update once per frame\r\n\r\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\r\n\r\n\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometries.update( buffergeometry );\r\n\r\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tupdateList = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tCubeTexture.prototype = Object.create( Texture.prototype );\r\n\tCubeTexture.prototype.constructor = CubeTexture;\r\n\r\n\tCubeTexture.prototype.isCubeTexture = true;\r\n\r\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.image;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis.image = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Uniforms of a program.\r\n\t * Those form a tree structure with a special top-level container for the root,\r\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n\t *\r\n\t *\r\n\t * Properties of inner nodes including the top-level container:\r\n\t *\r\n\t * .seq - array of nested uniforms\r\n\t * .map - nested uniforms by name\r\n\t *\r\n\t *\r\n\t * Methods of all nodes except the top-level container:\r\n\t *\r\n\t * .setValue( gl, value, [renderer] )\r\n\t *\r\n\t * \t\tuploads a uniform value(s)\r\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n\t *\r\n\t *\r\n\t * Static methods of the top-level container (renderer factorizations):\r\n\t *\r\n\t * .upload( gl, seq, values, renderer )\r\n\t *\r\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n\t *\r\n\t * .seqWithValue( seq, values ) : filteredSeq\r\n\t *\r\n\t * \t\tfilters 'seq' entries with corresponding entry in values\r\n\t *\r\n\t *\r\n\t * Methods of the top-level container (renderer factorizations):\r\n\t *\r\n\t * .setValue( gl, name, value )\r\n\t *\r\n\t * \t\tsets uniform with  name 'name' to 'value'\r\n\t *\r\n\t * .set( gl, obj, prop )\r\n\t *\r\n\t * \t\tsets uniform from object and property with same name than uniform\r\n\t *\r\n\t * .setOptional( gl, obj, prop )\r\n\t *\r\n\t * \t\tlike .set for an optional property of the object\r\n\t *\r\n\t */\r\n\r\n\tvar emptyTexture = new Texture();\r\n\tvar emptyCubeTexture = new CubeTexture();\r\n\r\n\t// --- Base for inner nodes (including the root) ---\r\n\r\n\tfunction UniformContainer() {\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t}\r\n\r\n\t// --- Utilities ---\r\n\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\tvar arrayCacheF32 = [];\r\n\tvar arrayCacheI32 = [];\r\n\r\n\t// Float32Array caches used for uploading Matrix uniforms\r\n\r\n\tvar mat4array = new Float32Array( 16 );\r\n\tvar mat3array = new Float32Array( 9 );\r\n\tvar mat2array = new Float32Array( 4 );\r\n\r\n\t// Flattening for arrays of vectors and matrices\r\n\r\n\tfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\t\tvar firstElem = array[ 0 ];\r\n\r\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t\t// unoptimized: ! isNaN( firstElem )\r\n\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\tvar n = nBlocks * blockSize,\r\n\t\t\tr = arrayCacheF32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Float32Array( n );\r\n\t\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tif ( nBlocks !== 0 ) {\r\n\r\n\t\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\t\toffset += blockSize;\r\n\t\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\tfunction arraysEqual( a, b ) {\r\n\r\n\t\tif ( a.length !== b.length ) return false;\r\n\r\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction copyArray( a, b ) {\r\n\r\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\t\ta[ i ] = b[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Texture unit allocation\r\n\r\n\tfunction allocTexUnits( renderer, n ) {\r\n\r\n\t\tvar r = arrayCacheI32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Int32Array( n );\r\n\t\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\tr[ i ] = renderer.allocTextureUnit();\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\t// --- Setters ---\r\n\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\r\n\t// Single scalar\r\n\r\n\tfunction setValue1f( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1f( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\tfunction setValue1i( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1i( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\t// Single float vector (from flat array or THREE.VectorN)\r\n\r\n\tfunction setValue2fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( v.r !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\t\tcache[ 0 ] = v.r;\r\n\t\t\t\tcache[ 1 ] = v.g;\r\n\t\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\t\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single matrix (from flat array or MatrixN)\r\n\r\n\tfunction setValue2fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat2array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat3array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat4array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single texture (2D / Cube)\r\n\r\n\tfunction setValueT1( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = renderer.allocTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\r\n\r\n\t}\r\n\r\n\tfunction setValueT6( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = renderer.allocTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n\t}\r\n\r\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n\tfunction setValue2iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue3iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue4iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for the singular case\r\n\r\n\tfunction getSingularSetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\r\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\r\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Array of scalars\r\n\r\n\tfunction setValue1fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\tfunction setValue1iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Array of vectors (flat or from THREE classes)\r\n\r\n\tfunction setValueV2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 2 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 3 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of matrices (flat or from THREE clases)\r\n\r\n\tfunction setValueM2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 9 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 16 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of textures (2D / Cube)\r\n\r\n\tfunction setValueT1a( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( renderer, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValueT6a( gl, v, renderer ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( renderer, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\tfunction getPureArraySetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\r\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// --- Uniform Classes ---\r\n\r\n\tfunction SingleUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\r\n\r\n\t\t\tthis.cache = new Float32Array( data.length );\r\n\r\n\t\t}\r\n\r\n\t\tcopyArray( cache, data );\r\n\r\n\t};\r\n\r\n\tfunction StructuredUniform( id ) {\r\n\r\n\t\tthis.id = id;\r\n\r\n\t\tUniformContainer.call( this ); // mix-in\r\n\r\n\t}\r\n\r\n\tStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\r\n\r\n\t\tvar seq = this.seq;\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ], renderer );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// --- Top-level ---\r\n\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\r\n\r\n\t// extracts\r\n\t// \t- the identifier (member name or array index)\r\n\t//  - followed by an optional right bracket (found when array index)\r\n\t//  - followed by an optional left bracket or dot (type of subscript)\r\n\t//\r\n\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t// in the uniform names.\r\n\r\n\tfunction addUniform( container, uniformObject ) {\r\n\r\n\t\tcontainer.seq.push( uniformObject );\r\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n\t}\r\n\r\n\tfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\t\tvar path = activeInfo.name,\r\n\t\t\tpathLength = path.length;\r\n\r\n\t\t// reset RegExp object, because of the early exit of a previous run\r\n\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\twhile ( true ) {\r\n\r\n\t\t\tvar match = RePathPart.exec( path ),\r\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n\t\t\t\tid = match[ 1 ],\r\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\r\n\t\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\t\tvar map = container.map, next = map[ id ];\r\n\r\n\t\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer = next;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Root Container\r\n\r\n\tfunction WebGLUniforms( gl, program, renderer ) {\r\n\r\n\t\tUniformContainer.call( this );\r\n\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; ++ i ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i ),\r\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\r\n\r\n\t\tvar v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t};\r\n\r\n\r\n\t// Static interface\r\n\r\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue( gl, v.value, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\r\n\r\n\t\tvar r = [];\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase LinearEncoding:\r\n\t\t\t\treturn [ 'Linear', '( value )' ];\r\n\t\t\tcase sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB', '( value )' ];\r\n\t\t\tcase RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE', '( value )' ];\r\n\t\t\tcase RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\r\n\t\t\tcase RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\r\n\t\t\tcase RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\r\n\t\t\tcase GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase LinearToneMapping:\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = 'Uncharted2';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CineonToneMapping:\r\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = shader.vertexShader;\r\n\t\tvar fragmentShader = shader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeReflectionMapping:\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase EquirectangularReflectionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material.isRawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\r\n\r\n\t\t\tvar isGLSL3ShaderMaterial = false;\r\n\r\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\r\n\r\n\t\t\tif ( material.isShaderMaterial &&\r\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\r\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\r\n\r\n\t\t\t\tisGLSL3ShaderMaterial = true;\r\n\r\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\r\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// GLSL 3.0 conversion\r\n\t\t\tprefixVertex = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define attribute in',\r\n\t\t\t\t'#define varying out',\r\n\t\t\t\t'#define texture2D texture'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\t\tprefixFragment = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define varying in',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t\t'#define texture2D texture',\r\n\t\t\t\t'#define textureCube texture',\r\n\t\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function () {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function () {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function () {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.name = shader.name;\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\r\n\r\n\t\tvar programs = [];\r\n\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshToonMaterial: 'phong',\r\n\t\t\tMeshStandardMaterial: 'physical',\r\n\t\t\tMeshPhysicalMaterial: 'physical',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points',\r\n\t\t\tShadowMaterial: 'shadow',\r\n\t\t\tSpriteMaterial: 'sprite'\r\n\t\t};\r\n\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\r\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\r\n\t\t];\r\n\r\n\r\n\t\tfunction allocateBones( object ) {\r\n\r\n\t\t\tvar skeleton = object.skeleton;\r\n\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\treturn 1024;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\r\n\r\n\t\t\t\tif ( maxBones < bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn maxBones;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\t\tvar encoding;\r\n\r\n\t\t\tif ( ! map ) {\r\n\r\n\t\t\t\tencoding = LinearEncoding;\r\n\r\n\t\t\t} else if ( map.isTexture ) {\r\n\r\n\t\t\t\tencoding = map.encoding;\r\n\r\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\t\tencoding = GammaEncoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn encoding;\r\n\r\n\t\t}\r\n\r\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\r\n\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\r\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\r\n\t\t\tvar precision = capabilities.precision;\r\n\r\n\t\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tvar parameters = {\r\n\r\n\t\t\t\tshaderID: shaderID,\r\n\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\t\tgradientMap: !! material.gradientMap,\r\n\r\n\t\t\t\tcombine: material.combine,\r\n\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\t\tfog: !! fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\r\n\r\n\t\t\t\tflatShading: material.flatShading,\r\n\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\t\tskinning: material.skinning && maxBones > 0,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\r\n\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\t\tnumClippingPlanes: nClipPlanes,\r\n\t\t\t\tnumClipIntersection: nClipIntersection,\r\n\r\n\t\t\t\tdithering: material.dithering,\r\n\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\t\tflipSided: material.side === BackSide,\r\n\r\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n\t\t\t};\r\n\r\n\t\t\treturn parameters;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tarray.push( material.fragmentShader );\r\n\t\t\t\tarray.push( material.vertexShader );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\t\tarray.push( name );\r\n\t\t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray.push( material.onBeforeCompile.toString() );\r\n\r\n\t\t\tarray.push( renderer.gammaOutput );\r\n\r\n\t\t\treturn array.join();\r\n\r\n\t\t};\r\n\r\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\r\n\r\n\t\t\tvar program;\r\n\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\r\n\t\t\t\tprograms.push( program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t};\r\n\r\n\t\tthis.releaseProgram = function ( program ) {\r\n\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author fordacious / fordacious.github.io\r\n\t */\r\n\r\n\tfunction WebGLProperties() {\r\n\r\n\t\tvar properties = new WeakMap();\r\n\r\n\t\tfunction get( object ) {\r\n\r\n\t\t\tvar map = properties.get( object );\r\n\r\n\t\t\tif ( map === undefined ) {\r\n\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties.set( object, map );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map;\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( object ) {\r\n\r\n\t\t\tproperties.delete( object );\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( object, key, value ) {\r\n\r\n\t\t\tproperties.get( object )[ key ] = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tproperties = new WeakMap();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction painterSortStable( a, b ) {\r\n\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\r\n\r\n\t\t\treturn a.program.id - b.program.id;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable( a, b ) {\r\n\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction WebGLRenderList() {\r\n\r\n\t\tvar renderItems = [];\r\n\t\tvar renderItemsIndex = 0;\r\n\r\n\t\tvar opaque = [];\r\n\t\tvar transparent = [];\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\trenderItemsIndex = 0;\r\n\r\n\t\t\topaque.length = 0;\r\n\t\t\ttransparent.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction push( object, geometry, material, z, group ) {\r\n\r\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\r\n\r\n\t\t\tif ( renderItem === undefined ) {\r\n\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tprogram: material.program,\r\n\t\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\t\tz: z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\r\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.program = material.program;\r\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\t\trenderItem.z = z;\r\n\t\t\t\trenderItem.group = group;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\r\n\r\n\t\t\trenderItemsIndex ++;\r\n\r\n\t\t}\r\n\r\n\t\tfunction sort() {\r\n\r\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\r\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\topaque: opaque,\r\n\t\t\ttransparent: transparent,\r\n\r\n\t\t\tinit: init,\r\n\t\t\tpush: push,\r\n\r\n\t\t\tsort: sort\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderLists() {\r\n\r\n\t\tvar lists = {};\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar hash = scene.id + ',' + camera.id;\r\n\t\t\tvar list = lists[ hash ];\r\n\r\n\t\t\tif ( list === undefined ) {\r\n\r\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\r\n\r\n\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\tlists[ hash ] = list;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tlists = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction UniformsCache() {\r\n\r\n\t\tvar lights = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( light ) {\r\n\r\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uniforms;\r\n\r\n\t\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\t\treturn uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar count = 0;\r\n\r\n\tfunction WebGLLights() {\r\n\r\n\t\tvar cache = new UniformsCache();\r\n\r\n\t\tvar state = {\r\n\r\n\t\t\tid: count ++,\r\n\r\n\t\t\thash: {\r\n\t\t\t\tstateID: - 1,\r\n\t\t\t\tdirectionalLength: - 1,\r\n\t\t\t\tpointLength: - 1,\r\n\t\t\t\tspotLength: - 1,\r\n\t\t\t\trectAreaLength: - 1,\r\n\t\t\t\themiLength: - 1,\r\n\t\t\t\tshadowsLength: - 1\r\n\t\t\t},\r\n\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\trectArea: [],\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: []\r\n\r\n\t\t};\r\n\r\n\t\tvar vector3 = new Vector3();\r\n\t\tvar matrix4 = new Matrix4();\r\n\t\tvar matrix42 = new Matrix4();\r\n\r\n\t\tfunction setup( lights, shadows, camera ) {\r\n\r\n\t\t\tvar r = 0, g = 0, b = 0;\r\n\r\n\t\t\tvar directionalLength = 0;\r\n\t\t\tvar pointLength = 0;\r\n\t\t\tvar spotLength = 0;\r\n\t\t\tvar rectAreaLength = 0;\r\n\t\t\tvar hemiLength = 0;\r\n\r\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tvar color = light.color;\r\n\t\t\t\tvar intensity = light.intensity;\r\n\t\t\t\tvar distance = light.distance;\r\n\r\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\t\tr += color.r * intensity;\r\n\t\t\t\t\tg += color.g * intensity;\r\n\t\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\r\n\r\n\t\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\r\n\r\n\t\t\t\t\tspotLength ++;\r\n\r\n\t\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\t// (a) intensity is the total visible light emitted\r\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n\r\n\t\t\t\t\t// (b) intensity is the brightness of the light\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\r\n\t\t\t\t\tmatrix42.identity();\r\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\r\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\r\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\r\n\r\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\r\n\t\t\t\t\t// uniforms.distance = distance;\r\n\r\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\r\n\r\n\t\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\r\n\r\n\t\t\t\t\tpointLength ++;\r\n\r\n\t\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\r\n\r\n\t\t\t\t\themiLength ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.ambient[ 0 ] = r;\r\n\t\t\tstate.ambient[ 1 ] = g;\r\n\t\t\tstate.ambient[ 2 ] = b;\r\n\r\n\t\t\tstate.directional.length = directionalLength;\r\n\t\t\tstate.spot.length = spotLength;\r\n\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\tstate.point.length = pointLength;\r\n\t\t\tstate.hemi.length = hemiLength;\r\n\r\n\t\t\tstate.hash.stateID = state.id;\r\n\t\t\tstate.hash.directionalLength = directionalLength;\r\n\t\t\tstate.hash.pointLength = pointLength;\r\n\t\t\tstate.hash.spotLength = spotLength;\r\n\t\t\tstate.hash.rectAreaLength = rectAreaLength;\r\n\t\t\tstate.hash.hemiLength = hemiLength;\r\n\t\t\tstate.hash.shadowsLength = shadows.length;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\tstate: state\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLRenderState() {\r\n\r\n\t\tvar lights = new WebGLLights();\r\n\r\n\t\tvar lightsArray = [];\r\n\t\tvar shadowsArray = [];\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\tlightsArray.length = 0;\r\n\t\t\tshadowsArray.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushLight( light ) {\r\n\r\n\t\t\tlightsArray.push( light );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\t\tshadowsArray.push( shadowLight );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setupLights( camera ) {\r\n\r\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\r\n\r\n\t\t}\r\n\r\n\t\tvar state = {\r\n\t\t\tlightsArray: lightsArray,\r\n\t\t\tshadowsArray: shadowsArray,\r\n\r\n\t\t\tlights: lights\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tstate: state,\r\n\t\t\tsetupLights: setupLights,\r\n\r\n\t\t\tpushLight: pushLight,\r\n\t\t\tpushShadow: pushShadow\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderStates() {\r\n\r\n\t\tvar renderStates = {};\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar renderState;\r\n\r\n\t\t\tif ( renderStates[ scene.id ] === undefined ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\trenderStates[ scene.id ] = {};\r\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\r\n\r\n\t\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn renderState;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\trenderStates = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / https://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDepthMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\r\n\r\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  referencePosition: <float>,\r\n\t *  nearDistance: <float>,\r\n\t *  farDistance: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDistanceMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\tthis.referencePosition = new Vector3();\r\n\t\tthis.nearDistance = 1;\r\n\t\tthis.farDistance = 1000;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\r\n\r\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.referencePosition.copy( source.referencePosition );\r\n\t\tthis.nearDistance = source.nearDistance;\r\n\t\tthis.farDistance = source.farDistance;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\r\n\r\n\t\tvar _frustum = new Frustum(),\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_shadowMapSize = new Vector2(),\r\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\r\n\r\n\t\t\t_lookTarget = new Vector3(),\r\n\t\t\t_lightPositionWorld = new Vector3(),\r\n\r\n\t\t\t_MorphingFlag = 1,\r\n\t\t\t_SkinningFlag = 2,\r\n\r\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n\t\t\t_materialCache = {};\r\n\r\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\r\n\r\n\t\tvar cubeDirections = [\r\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\r\n\t\tvar cubeUps = [\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\r\n\t\tvar cube2DViewPorts = [\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\r\n\t\t];\r\n\r\n\t\t// init\r\n\r\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\r\n\r\n\t\t\t\tdepthPacking: RGBADepthPacking,\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis.type = PCFShadowMap;\r\n\r\n\t\tthis.render = function ( lights, scene, camera ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t\tif ( lights.length === 0 ) return;\r\n\r\n\t\t\t// TODO Clean up (needed in case of contextlost)\r\n\t\t\tvar _gl = _renderer.context;\r\n\t\t\tvar _state = _renderer.state;\r\n\r\n\t\t\t// Set GL state for depth map.\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\t\t\t_state.buffers.depth.setTest( true );\r\n\t\t\t_state.setScissorTest( false );\r\n\r\n\t\t\t// render depth map\r\n\r\n\t\t\tvar faceCount;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\tvar isPointLight = light && light.isPointLight;\r\n\r\n\t\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t//   y Y\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t\t// positive X\r\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative X\r\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Z\r\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Z\r\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Y\r\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Y\r\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\r\n\r\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\r\n\r\n\t\t\t\t\tshadow.update( light );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tfaceCount = 6;\r\n\r\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t// equal to inverse of the light's position\r\n\r\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfaceCount = 1;\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t// run a single pass if not\r\n\r\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.needsUpdate = false;\r\n\r\n\t\t};\r\n\r\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tvar result = null;\r\n\r\n\t\t\tvar materialVariants = _depthMaterials;\r\n\t\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\t\tvar useMorphing = false;\r\n\r\n\t\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\r\n\r\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\r\n\r\n\t\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult = customMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _renderer.localClippingEnabled &&\r\n\t\t\t\t\tmaterial.clipShadows === true &&\r\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\r\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult.visible = material.visible;\r\n\t\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\r\n\r\n\t\t\tresult.clipShadows = material.clipShadows;\r\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\t\tresult.clipIntersection = material.clipIntersection;\r\n\r\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\r\n\t\t\t\tresult.nearDistance = shadowCameraNear;\r\n\t\t\t\tresult.farDistance = shadowCameraFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLState( gl, extensions, utils, capabilities ) {\r\n\r\n\t\tfunction ColorBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar color = new Vector4();\r\n\t\t\tvar currentColorMask = null;\r\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetMask: function ( colorMask ) {\r\n\r\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\r\n\r\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolor.set( r, g, b, a );\r\n\r\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction DepthBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentDepthMask = null;\r\n\t\t\tvar currentDepthFunc = null;\r\n\t\t\tvar currentDepthClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( depthTest ) {\r\n\r\n\t\t\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( depthMask ) {\r\n\r\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.depthMask( depthMask );\r\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\t\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\t\tcase NeverDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase EqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( depth ) {\r\n\r\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction StencilBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentStencilMask = null;\r\n\t\t\tvar currentStencilFunc = null;\r\n\t\t\tvar currentStencilRef = null;\r\n\t\t\tvar currentStencilFuncMask = null;\r\n\t\t\tvar currentStencilFail = null;\r\n\t\t\tvar currentStencilZFail = null;\r\n\t\t\tvar currentStencilZPass = null;\r\n\t\t\tvar currentStencilClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( stencilTest ) {\r\n\r\n\t\t\t\t\tif ( stencilTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\r\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( stencil ) {\r\n\r\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\t\tcurrentStencilClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar colorBuffer = new ColorBuffer();\r\n\t\tvar depthBuffer = new DepthBuffer();\r\n\t\tvar stencilBuffer = new StencilBuffer();\r\n\r\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n\t\tvar enabledCapabilities = {};\r\n\r\n\t\tvar compressedTextureFormats = null;\r\n\r\n\t\tvar currentProgram = null;\r\n\r\n\t\tvar currentBlendingEnabled = null;\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\tvar currentPremultipledAlpha = false;\r\n\r\n\t\tvar currentFlipSided = null;\r\n\t\tvar currentCullFace = null;\r\n\r\n\t\tvar currentLineWidth = null;\r\n\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\r\n\r\n\t\tvar lineWidthAvailable = false;\r\n\t\tvar version = 0;\r\n\t\tvar glVersion = gl.getParameter( gl.VERSION );\r\n\r\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\r\n\r\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar currentTextureSlot = null;\r\n\t\tvar currentBoundTextures = {};\r\n\r\n\t\tvar currentScissor = new Vector4();\r\n\t\tvar currentViewport = new Vector4();\r\n\r\n\t\tfunction createTexture( type, target, count ) {\r\n\r\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\t\tvar texture = gl.createTexture();\r\n\r\n\t\t\tgl.bindTexture( type, texture );\r\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t}\r\n\r\n\t\tvar emptyTextures = {};\r\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\r\n\t\t// init\r\n\r\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\r\n\t\tdepthBuffer.setClear( 1 );\r\n\t\tstencilBuffer.setClear( 0 );\r\n\r\n\t\tenable( gl.DEPTH_TEST );\r\n\t\tdepthBuffer.setFunc( LessEqualDepth );\r\n\r\n\t\tsetFlipSided( false );\r\n\t\tsetCullFace( CullFaceBack );\r\n\t\tenable( gl.CULL_FACE );\r\n\r\n\t\tsetBlending( NoBlending );\r\n\r\n\t\t//\r\n\r\n\t\tfunction initAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttribute( attribute ) {\r\n\r\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\r\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableUnusedAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\r\n\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\r\n\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getCompressedTextureFormats() {\r\n\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\r\n\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn compressedTextureFormats;\r\n\r\n\t\t}\r\n\r\n\t\tfunction useProgram( program ) {\r\n\r\n\t\t\tif ( currentProgram !== program ) {\r\n\r\n\t\t\t\tgl.useProgram( program );\r\n\r\n\t\t\t\tcurrentProgram = program;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\t\tif ( blending === NoBlending ) {\r\n\r\n\t\t\t\tif ( currentBlendingEnabled ) {\r\n\r\n\t\t\t\t\tdisable( gl.BLEND );\r\n\t\t\t\t\tcurrentBlendingEnabled = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! currentBlendingEnabled ) {\r\n\r\n\t\t\t\tenable( gl.BLEND );\r\n\t\t\t\tcurrentBlendingEnabled = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blending !== CustomBlending ) {\r\n\r\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n\r\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\r\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// custom blending\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setMaterial( material, frontFaceCW ) {\r\n\r\n\t\t\tmaterial.side === DoubleSide\r\n\t\t\t\t? disable( gl.CULL_FACE )\r\n\t\t\t\t: enable( gl.CULL_FACE );\r\n\r\n\t\t\tvar flipSided = ( material.side === BackSide );\r\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\r\n\r\n\t\t\tsetFlipSided( flipSided );\r\n\r\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t\t? setBlending( NoBlending )\r\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\r\n\t\t\tdepthBuffer.setTest( material.depthTest );\r\n\t\t\tdepthBuffer.setMask( material.depthWrite );\r\n\t\t\tcolorBuffer.setMask( material.colorWrite );\r\n\r\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction setFlipSided( flipSided ) {\r\n\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setCullFace( cullFace ) {\r\n\r\n\t\t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n\t\t\t\tenable( gl.CULL_FACE );\r\n\r\n\t\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentCullFace = cullFace;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setLineWidth( width ) {\r\n\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\r\n\r\n\t\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n\t\t\tif ( polygonOffset ) {\r\n\r\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setScissorTest( scissorTest ) {\r\n\r\n\t\t\tif ( scissorTest ) {\r\n\r\n\t\t\t\tenable( gl.SCISSOR_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( gl.SCISSOR_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// texture\r\n\r\n\t\tfunction activeTexture( webglSlot ) {\r\n\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction bindTexture( webglType, webglTexture ) {\r\n\r\n\t\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t\tactiveTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction compressedTexImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction texImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction scissor( scissor ) {\r\n\r\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction viewport( viewport ) {\r\n\r\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tenabledCapabilities = {};\r\n\r\n\t\t\tcompressedTextureFormats = null;\r\n\r\n\t\t\tcurrentTextureSlot = null;\r\n\t\t\tcurrentBoundTextures = {};\r\n\r\n\t\t\tcurrentProgram = null;\r\n\r\n\t\t\tcurrentBlending = null;\r\n\r\n\t\t\tcurrentFlipSided = null;\r\n\t\t\tcurrentCullFace = null;\r\n\r\n\t\t\tcolorBuffer.reset();\r\n\t\t\tdepthBuffer.reset();\r\n\t\t\tstencilBuffer.reset();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tbuffers: {\r\n\t\t\t\tcolor: colorBuffer,\r\n\t\t\t\tdepth: depthBuffer,\r\n\t\t\t\tstencil: stencilBuffer\r\n\t\t\t},\r\n\r\n\t\t\tinitAttributes: initAttributes,\r\n\t\t\tenableAttribute: enableAttribute,\r\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\r\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\r\n\t\t\tenable: enable,\r\n\t\t\tdisable: disable,\r\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\r\n\r\n\t\t\tuseProgram: useProgram,\r\n\r\n\t\t\tsetBlending: setBlending,\r\n\t\t\tsetMaterial: setMaterial,\r\n\r\n\t\t\tsetFlipSided: setFlipSided,\r\n\t\t\tsetCullFace: setCullFace,\r\n\r\n\t\t\tsetLineWidth: setLineWidth,\r\n\t\t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n\t\t\tsetScissorTest: setScissorTest,\r\n\r\n\t\t\tactiveTexture: activeTexture,\r\n\t\t\tbindTexture: bindTexture,\r\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\t\ttexImage2D: texImage2D,\r\n\r\n\t\t\tscissor: scissor,\r\n\t\t\tviewport: viewport,\r\n\r\n\t\t\treset: reset\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n\r\n\t\tvar _videoTextures = {};\r\n\t\tvar _canvas;\r\n\r\n\t\t//\r\n\r\n\t\tfunction clampToMaxSize( image, maxSize ) {\r\n\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t\tif ( 'data' in image ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\r\n\r\n\t\t\t\treturn canvas;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\r\n\r\n\t\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\r\n\t\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\r\n\t\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\r\n\r\n\t\t\t\tvar context = _canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\r\n\r\n\t\t\t\treturn _canvas;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) return false;\r\n\r\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\r\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\r\n\r\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\r\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateMipmap( target, texture, width, height ) {\r\n\r\n\t\t\t_gl.generateMipmap( target );\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\r\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getInternalFormat( glFormat, glType ) {\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\r\n\r\n\t\t\tif ( glFormat === _gl.RGB ) {\r\n\r\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\r\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\r\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glFormat === _gl.RGBA ) {\r\n\r\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\r\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\r\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn glFormat;\r\n\r\n\t\t}\r\n\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\r\n\t\tfunction filterFallback( f ) {\r\n\r\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\r\n\r\n\t\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn _gl.LINEAR;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction onTextureDispose( event ) {\r\n\r\n\t\t\tvar texture = event.target;\r\n\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\tdeallocateTexture( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) {\r\n\r\n\t\t\t\tdelete _videoTextures[ texture.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\t\tvar renderTarget = event.target;\r\n\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction deallocateTexture( texture ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t// cube texture\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// 2D texture\r\n\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.remove( texture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\tif ( ! renderTarget ) return;\r\n\r\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove( renderTarget.texture );\r\n\t\t\tproperties.remove( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\r\n\r\n\t\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tvar image = texture.image;\r\n\r\n\t\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\r\n\r\n\t\t\t\t} else if ( image.complete === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCube( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\r\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n\r\n\t\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\r\n\r\n\t\t\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension ) {\r\n\r\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\r\n\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n\t\t\t\timage = makePowerOfTwo( image );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif ( texture.isDepthTexture ) {\r\n\r\n\t\t\t\t// populate depth texture with dummy data\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\t\tif ( texture.type === FloatType ) {\r\n\r\n\t\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t\t} else if ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t} else if ( texture.isDataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isCompressedTexture ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\t// Render targets\r\n\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\r\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\r\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\r\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\r\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// upload an empty depth texture with framebuffer size\r\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\r\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Setup GL resources for a non-texture depth buffer\r\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n\r\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Set up GL resources for the render target\r\n\t\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\r\n\t\t\t// Setup framebuffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup color buffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup depth and stencil buffers\r\n\r\n\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\r\n\r\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n\t\t\t\tstate.bindTexture( target, webglTexture );\r\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\r\n\t\t\t\tstate.bindTexture( target, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateVideoTexture( texture ) {\r\n\r\n\t\t\tvar id = texture.id;\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\t// Check the last frame we updated the VideoTexture\r\n\r\n\t\t\tif ( _videoTextures[ id ] !== frame ) {\r\n\r\n\t\t\t\t_videoTextures[ id ] = frame;\r\n\t\t\t\ttexture.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setTexture2D = setTexture2D;\r\n\t\tthis.setTextureCube = setTextureCube;\r\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\r\n\t\tthis.setupRenderTarget = setupRenderTarget;\r\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author thespite / http://www.twitter.com/thespite\r\n\t */\r\n\r\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\r\n\r\n\t\tfunction convert( p ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\r\n\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\r\n\r\n\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\r\n\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\r\n\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\t\tif ( p === ByteType ) return gl.BYTE;\r\n\t\t\tif ( p === ShortType ) return gl.SHORT;\r\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === IntType ) return gl.INT;\r\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\r\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\r\n\r\n\t\t\tif ( p === HalfFloatType ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\r\n\r\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\r\n\t\t\tif ( p === RGBFormat ) return gl.RGB;\r\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\r\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\r\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\r\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\r\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\r\n\r\n\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\r\n\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\r\n\t\t\tif ( p === OneFactor ) return gl.ONE;\r\n\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\r\n\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\r\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\r\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\r\n\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\r\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\r\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_ETC1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\treturn p;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return gl.MIN;\r\n\t\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn { convert: convert };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Group() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Group,\r\n\r\n\t\tisGroup: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.zoom = 1;\r\n\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: PerspectiveCamera,\r\n\r\n\t\tisPerspectiveCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.fov = source.fov;\r\n\t\t\tthis.zoom = source.zoom;\r\n\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.focus = source.focus;\r\n\r\n\t\t\tthis.aspect = source.aspect;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\tthis.filmGauge = source.filmGauge;\r\n\t\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t\t *\r\n\t\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t\t * a 35mm (full frame) camera.\r\n\t\t *\r\n\t\t * Values for focal length and film gauge must have the same unit.\r\n\t\t */\r\n\t\tsetFocalLength: function ( focalLength ) {\r\n\r\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t\t */\r\n\t\tgetFocalLength: function () {\r\n\r\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t\t},\r\n\r\n\t\tgetEffectiveFOV: function () {\r\n\r\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\r\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmWidth: function () {\r\n\r\n\t\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmHeight: function () {\r\n\r\n\t\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t\t * multi-monitor/multi-machine setups.\r\n\t\t *\r\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t\t * the monitors are in grid like this\r\n\t\t *\r\n\t\t *   +---+---+---+\r\n\t\t *   | A | B | C |\r\n\t\t *   +---+---+---+\r\n\t\t *   | D | E | F |\r\n\t\t *   +---+---+---+\r\n\t\t *\r\n\t\t * then for each monitor you would call it like this\r\n\t\t *\r\n\t\t *   var w = 1920;\r\n\t\t *   var h = 1080;\r\n\t\t *   var fullWidth = w * 3;\r\n\t\t *   var fullHeight = h * 2;\r\n\t\t *\r\n\t\t *   --A--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t\t *   --B--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t\t *   --C--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t\t *   --D--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t\t *   --E--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t\t *   --F--\r\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t\t *\r\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t\t */\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar near = this.near,\r\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n\t\t\t\theight = 2 * top,\r\n\t\t\t\twidth = this.aspect * height,\r\n\t\t\t\tleft = - 0.5 * width,\r\n\t\t\t\tview = this.view;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar fullWidth = view.fullWidth,\r\n\t\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\t\twidth *= view.width / fullWidth;\r\n\t\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar skew = this.filmOffset;\r\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.fov = this.fov;\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tdata.object.focus = this.focus;\r\n\r\n\t\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ArrayCamera( array ) {\r\n\r\n\t\tPerspectiveCamera.call( this );\r\n\r\n\t\tthis.cameras = array || [];\r\n\r\n\t}\r\n\r\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\r\n\r\n\t\tconstructor: ArrayCamera,\r\n\r\n\t\tisArrayCamera: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebVRManager( renderer ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar device = null;\r\n\t\tvar frameData = null;\r\n\r\n\t\tvar poseTarget = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar standingMatrix = new Matrix4();\r\n\t\tvar standingMatrixInverse = new Matrix4();\r\n\r\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\r\n\r\n\t\t\tframeData = new window.VRFrameData();\r\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\r\n\r\n\t\t}\r\n\r\n\t\tvar matrixWorldInverse = new Matrix4();\r\n\t\tvar tempQuaternion = new Quaternion();\r\n\t\tvar tempPosition = new Vector3();\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\r\n\t\tcameraL.layers.enable( 1 );\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\r\n\t\tcameraR.layers.enable( 2 );\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn device !== null && device.isPresenting === true;\r\n\r\n\t\t}\r\n\r\n\t\tvar currentSize, currentPixelRatio;\r\n\r\n\t\tfunction onVRDisplayPresentChange() {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\r\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\r\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\r\n\r\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\r\n\t\t\t\tcurrentSize = renderer.getSize();\r\n\r\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\r\n\r\n\t\t\t\tanimation.start();\r\n\r\n\t\t\t} else if ( scope.enabled ) {\r\n\r\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\r\n\r\n\t\t\t\tanimation.stop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar triggers = [];\r\n\r\n\t\tfunction findGamepad( id ) {\r\n\r\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\r\n\r\n\t\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar gamepad = gamepads[ i ];\r\n\r\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\r\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\r\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\r\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\r\n\r\n\t\t\t\t\tif ( j === id ) return gamepad;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateControllers() {\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar gamepad = findGamepad( i );\r\n\r\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\r\n\r\n\t\t\t\t\tif ( gamepad.pose === null ) return;\r\n\r\n\t\t\t\t\t//  Pose\r\n\r\n\t\t\t\t\tvar pose = gamepad.pose;\r\n\r\n\t\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\r\n\r\n\t\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\r\n\t\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\r\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\r\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t//  Trigger\r\n\r\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\r\n\r\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\r\n\r\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\r\n\r\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\t\tthis.userHeight = 1.6;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\r\n\t\t\tanimation.setContext( value );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPoseTarget = function ( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) poseTarget = object;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tif ( device === null ) {\r\n\r\n\t\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\r\n\t\t\t\treturn camera;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdevice.depthNear = camera.near;\r\n\t\t\tdevice.depthFar = camera.far;\r\n\r\n\t\t\tdevice.getFrameData( frameData );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar stageParameters = device.stageParameters;\r\n\r\n\t\t\tif ( stageParameters ) {\r\n\r\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar pose = frameData.pose;\r\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\r\n\r\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\r\n\t\t\tposeObject.matrix.copy( standingMatrix );\r\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\r\n\r\n\t\t\tif ( pose.orientation !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\r\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pose.position !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\r\n\t\t\t\ttempPosition.fromArray( pose.position );\r\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\r\n\t\t\t\tposeObject.position.add( tempPosition );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposeObject.updateMatrixWorld();\r\n\r\n\t\t\tif ( device.isPresenting === false ) return camera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcameraL.near = camera.near;\r\n\t\t\tcameraR.near = camera.near;\r\n\r\n\t\t\tcameraL.far = camera.far;\r\n\t\t\tcameraR.far = camera.far;\r\n\r\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\r\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\r\n\r\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\r\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\r\n\r\n\t\t\t// TODO (mrdoob) Double check this code\r\n\r\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\r\n\r\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\r\n\t\t\tvar parent = poseObject.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\r\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// envMap and Mirror needs camera.matrixWorld\r\n\r\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\r\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\r\n\r\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\r\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\r\n\r\n\t\t\t// HACK (mrdoob)\r\n\t\t\t// https://github.com/w3c/webvr/issues/203\r\n\r\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar layers = device.getLayers();\r\n\r\n\t\t\tif ( layers.length ) {\r\n\r\n\t\t\t\tvar layer = layers[ 0 ];\r\n\r\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateControllers();\r\n\r\n\t\t\treturn cameraVR;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\treturn standingMatrix;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tanimation.setAnimationLoop( callback );\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {\r\n\r\n\t\t\tif ( isPresenting() ) device.submitFrame();\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tif ( typeof window !== 'undefined' ) {\r\n\r\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebXRManager( renderer ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar device = null;\r\n\t\tvar session = null;\r\n\r\n\t\tvar frameOfRef = null;\r\n\r\n\t\tvar pose = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar inputSources = [];\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn session !== null && frameOfRef !== null;\r\n\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.layers.enable( 1 );\r\n\t\tcameraL.viewport = new Vector4();\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.layers.enable( 2 );\r\n\t\tcameraR.viewport = new Vector4();\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\t\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tfunction onSessionEvent( event ) {\r\n\r\n\t\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\r\n\t\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onSessionEnd() {\r\n\r\n\t\t\trenderer.setFramebuffer( null );\r\n\t\t\tanimation.stop();\r\n\r\n\t\t}\r\n\r\n\t\tthis.setSession = function ( value, options ) {\r\n\r\n\t\t\tsession = value;\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\r\n\r\n\t\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\r\n\t\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\r\n\r\n\t\t\t\t\tframeOfRef = value;\r\n\r\n\t\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\r\n\r\n\t\t\t\t\tanimation.setContext( session );\r\n\t\t\t\t\tanimation.start();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinputSources = session.getInputSources();\r\n\r\n\t\t\t\tsession.addEventListener( 'inputsourceschange', function () {\r\n\r\n\t\t\t\t\tinputSources = session.getInputSources();\r\n\t\t\t\t\tconsole.log( inputSources );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction updateCamera( camera, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar parent = camera.parent;\r\n\t\t\t\tvar cameras = cameraVR.cameras;\r\n\r\n\t\t\t\t// apply camera.parent to cameraVR\r\n\r\n\t\t\t\tupdateCamera( cameraVR, parent );\r\n\r\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\r\n\r\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update camera and its children\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\r\n\r\n\t\t\t\tvar children = camera.children;\r\n\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn cameraVR;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn camera;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tpose = frame.getDevicePose( frameOfRef );\r\n\r\n\t\t\tif ( pose !== null ) {\r\n\r\n\t\t\t\tvar layer = session.baseLayer;\r\n\t\t\t\tvar views = frame.views;\r\n\r\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar view = views[ i ];\r\n\t\t\t\t\tvar viewport = layer.getViewport( view );\r\n\t\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\r\n\r\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\r\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\r\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\r\n\r\n\t\t\t\t\t\t// HACK (mrdoob)\r\n\t\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\r\n\r\n\t\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar inputSource = inputSources[ i ];\r\n\r\n\t\t\t\tif ( inputSource ) {\r\n\r\n\t\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\r\n\r\n\t\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\t\tif ( 'targetRay' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\r\n\r\n\t\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\t// DEPRECATED\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\r\n\t\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\r\n\t\t\treturn new THREE.Matrix4();\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLRenderer( parameters ) {\r\n\r\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\r\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\r\n\r\n\t\tvar currentRenderList = null;\r\n\t\tvar currentRenderState = null;\r\n\r\n\t\t// public properties\r\n\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\r\n\t\t// clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\r\n\t\t// scene graph\r\n\r\n\t\tthis.sortObjects = true;\r\n\r\n\t\t// user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false;\r\n\r\n\t\t// physically based shading\r\n\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\r\n\t\t// physical lights\r\n\r\n\t\tthis.physicallyCorrectLights = false;\r\n\r\n\t\t// tone mapping\r\n\r\n\t\tthis.toneMapping = LinearToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\t\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\r\n\t\t// internal properties\r\n\r\n\t\tvar _this = this,\r\n\r\n\t\t\t_isContextLost = false,\r\n\r\n\t\t\t// internal state cache\r\n\r\n\t\t\t_framebuffer = null,\r\n\r\n\t\t\t_currentRenderTarget = null,\r\n\t\t\t_currentFramebuffer = null,\r\n\t\t\t_currentMaterialId = - 1,\r\n\r\n\t\t\t// geometry and program caching\r\n\r\n\t\t\t_currentGeometryProgram = {\r\n\t\t\t\tgeometry: null,\r\n\t\t\t\tprogram: null,\r\n\t\t\t\twireframe: false\r\n\t\t\t},\r\n\r\n\t\t\t_currentCamera = null,\r\n\t\t\t_currentArrayCamera = null,\r\n\r\n\t\t\t_currentViewport = new Vector4(),\r\n\t\t\t_currentScissor = new Vector4(),\r\n\t\t\t_currentScissorTest = null,\r\n\r\n\t\t\t//\r\n\r\n\t\t\t_usedTextureUnits = 0,\r\n\r\n\t\t\t//\r\n\r\n\t\t\t_width = _canvas.width,\r\n\t\t\t_height = _canvas.height,\r\n\r\n\t\t\t_pixelRatio = 1,\r\n\r\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissorTest = false,\r\n\r\n\t\t\t// frustum\r\n\r\n\t\t\t_frustum = new Frustum(),\r\n\r\n\t\t\t// clipping\r\n\r\n\t\t\t_clipping = new WebGLClipping(),\r\n\t\t\t_clippingEnabled = false,\r\n\t\t\t_localClippingEnabled = false,\r\n\r\n\t\t\t// camera matrices cache\r\n\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_vector3 = new Vector3();\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\r\n\t\tvar _gl;\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar contextAttributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t\tpowerPreference: _powerPreference\r\n\t\t\t};\r\n\r\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\r\n\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\r\n\r\n\t\t}\r\n\r\n\t\tvar extensions, capabilities, state, info;\r\n\t\tvar properties, textures, attributes, geometries, objects;\r\n\t\tvar programCache, renderLists, renderStates;\r\n\r\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\r\n\t\tvar utils;\r\n\r\n\t\tfunction initGLContext() {\r\n\r\n\t\t\textensions = new WebGLExtensions( _gl );\r\n\r\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\r\n\t\t\t\textensions.get( 'OES_texture_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\t\t\textensions.get( 'OES_element_index_uint' );\r\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\textensions.get( 'OES_texture_float_linear' );\r\n\r\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\r\n\r\n\t\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\tinfo = new WebGLInfo( _gl );\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t\tattributes = new WebGLAttributes( _gl );\r\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\r\n\t\t\tobjects = new WebGLObjects( geometries, info );\r\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\r\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\r\n\t\t\trenderLists = new WebGLRenderLists();\r\n\t\t\trenderStates = new WebGLRenderStates();\r\n\r\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\r\n\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\r\n\r\n\t\t\tinfo.programs = programCache.programs;\r\n\r\n\t\t\t_this.context = _gl;\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\r\n\t\t}\r\n\r\n\t\tinitGLContext();\r\n\r\n\t\t// vr\r\n\r\n\t\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\r\n\r\n\t\tthis.vr = vr;\r\n\r\n\t\t// shadow map\r\n\r\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\r\n\r\n\t\tthis.shadowMap = shadowMap;\r\n\r\n\t\t// API\r\n\r\n\t\tthis.getContext = function () {\r\n\r\n\t\t\treturn _gl;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\r\n\t\t\treturn _gl.getContextAttributes();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.loseContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.restoreContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\r\n\t\t\treturn _pixelRatio;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\t\tif ( value === undefined ) return;\r\n\r\n\t\t\t_pixelRatio = value;\r\n\r\n\t\t\tthis.setSize( _width, _height, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getSize = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_canvas.width = width * _pixelRatio;\r\n\t\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width * _pixelRatio,\r\n\t\t\t\theight: _height * _pixelRatio\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function () {\r\n\r\n\t\t\treturn _currentViewport;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t\t_viewport.set( x, _height - y - height, width, height );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t\t_scissor.set( x, _height - y - height, width, height );\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t\t};\r\n\r\n\t\t// Clearing\r\n\r\n\t\tthis.getClearColor = function () {\r\n\r\n\t\t\treturn background.getClearColor();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\r\n\t\t\tbackground.setClearColor.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\r\n\t\t\treturn background.getClearAlpha();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\r\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\t\tvar bits = 0;\r\n\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t_gl.clear( bits );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\r\n\t\t\tthis.clear( true, false, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\r\n\t\t\tthis.clear( false, true, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\r\n\t\t\tthis.clear( false, false, true );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tobjects.dispose();\r\n\r\n\t\t\tvr.dispose();\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t};\r\n\r\n\t\t// Events\r\n\r\n\t\tfunction onContextLost( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\r\n\r\n\t\t\t_isContextLost = true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore( /* event */ ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\r\n\r\n\t\t\t_isContextLost = false;\r\n\r\n\t\t\tinitGLContext();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose( event ) {\r\n\r\n\t\t\tvar material = event.target;\r\n\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\tdeallocateMaterial( material );\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer deallocation\r\n\r\n\t\tfunction deallocateMaterial( material ) {\r\n\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\tproperties.remove( material );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\t\tmaterial.program = undefined;\r\n\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer rendering\r\n\r\n\t\tfunction renderObjectImmediate( object, program ) {\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderBufferImmediate = function ( object, program ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar buffers = properties.get( object );\r\n\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasUvs ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasColors ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.color );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\t\tobject.count = 0;\r\n\r\n\t\t};\r\n\r\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\r\n\r\n\t\t\tstate.setMaterial( material, frontFaceCW );\r\n\r\n\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\tvar updateBuffers = false;\r\n\r\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\r\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\r\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\r\n\t\t\t\t_currentGeometryProgram.program = program.id;\r\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.morphTargetInfluences ) {\r\n\r\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\r\n\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\t\tvar rangeFactor = 1;\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\r\n\t\t\t\trangeFactor = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\t\t\tvar renderer = bufferRenderer;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattribute = attributes.get( index );\r\n\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar dataCount = Infinity;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdataCount = index.count;\r\n\r\n\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\tdataCount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\r\n\r\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\r\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\r\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\t\tcase TrianglesDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleStripDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleFanDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else if ( object.isLine ) {\r\n\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\t\tif ( object.isLineSegments ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else if ( object.isLineLoop ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isPoints ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\r\n\r\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction setupVertexAttributes( material, program, geometry ) {\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\r\n\r\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\r\n\r\n\t\t\t\t\t\tvar buffer = attribute.buffer;\r\n\t\t\t\t\t\tvar type = attribute.type;\r\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// Compile\r\n\r\n\t\tthis.compile = function ( scene, camera ) {\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.material ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) return;\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tif ( typeof window !== 'undefined' ) animation.setContext( window );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\tvr.setAnimationLoop( callback );\r\n\r\n\t\t\tanimation.start();\r\n\r\n\t\t};\r\n\r\n\t\t// Rendering\r\n\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _isContextLost ) return;\r\n\r\n\t\t\t// reset caching for this frame\r\n\r\n\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t_currentGeometryProgram.wireframe = false;\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tcamera = vr.getCamera( camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\r\n\t\t\tcurrentRenderList.init();\r\n\r\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\r\n\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\tcurrentRenderList.sort();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.info.autoReset ) this.info.reset();\r\n\r\n\t\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\t\trenderTarget = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\r\n\r\n\t\t\t// render scene\r\n\r\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\r\n\t\t\tvar transparentObjects = currentRenderList.transparent;\r\n\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\r\n\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\tstate.setPolygonOffset( false );\r\n\r\n\t\t\tscene.onAfterRender( _this, scene, camera );\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tvr.submitFrame();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// _gl.finish();\r\n\r\n\t\t\tcurrentRenderList = null;\r\n\t\t\tcurrentRenderState = null;\r\n\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t// TODO Duplicated code (Frustum)\r\n\r\n\t\tvar _sphere = new Sphere();\r\n\r\n\t\tfunction isObjectViewable( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy( geometry.boundingSphere ).\r\n\t\t\tapplyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn isSphereViewable( _sphere );\r\n\r\n\t\t}\r\n\r\n\t\tfunction isSpriteViewable( sprite ) {\r\n\r\n\t\t\t_sphere.center.set( 0, 0, 0 );\r\n\t\t\t_sphere.radius = 0.7071067811865476;\r\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\treturn isSphereViewable( _sphere );\r\n\r\n\t\t}\r\n\r\n\t\tfunction isSphereViewable( sphere ) {\r\n\r\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\r\n\r\n\t\t\tvar numPlanes = _clipping.numPlanes;\r\n\r\n\t\t\tif ( numPlanes === 0 ) return true;\r\n\r\n\t\t\tvar planes = _this.clippingPlanes,\r\n\r\n\t\t\t\tcenter = sphere.center,\r\n\t\t\t\tnegRad = - sphere.radius,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\t// out when deeper than radius in the negative halfspace\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\r\n\r\n\t\t\t} while ( ++ i !== numPlanes );\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tfunction projectObject( object, camera, sortObjects ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible ) {\r\n\r\n\t\t\t\tif ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\r\n\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\t\tif ( camera.isArrayCamera ) {\r\n\r\n\t\t\t\t\t_currentArrayCamera = camera;\r\n\r\n\t\t\t\t\tvar cameras = camera.cameras;\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\r\n\r\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tvar bounds = camera2.bounds;\r\n\r\n\t\t\t\t\t\t\t\tvar x = bounds.x * _width;\r\n\t\t\t\t\t\t\t\tvar y = bounds.y * _height;\r\n\t\t\t\t\t\t\t\tvar width = bounds.z * _width;\r\n\t\t\t\t\t\t\t\tvar height = bounds.w * _height;\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\r\n\r\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_currentArrayCamera = null;\r\n\r\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\tstate.setMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t\t_currentGeometryProgram.wireframe = false;\r\n\r\n\t\t\t\trenderObjectImmediate( object, program );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t}\r\n\r\n\t\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tvar parameters = programCache.getParameters(\r\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\r\n\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\r\n\r\n\t\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( programChange ) {\r\n\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\r\n\r\n\t\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\r\n\t\t\t\tcode = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\r\n\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( ! material.isShaderMaterial &&\r\n\t\t\t\t! material.isRawShaderMaterial ||\r\n\t\t\t\tmaterial.clipping === true ) {\r\n\r\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\r\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.fog = fog;\r\n\r\n\t\t\t// store the light setup it was created for\r\n\t\t\tif ( lightsHash === undefined ) {\r\n\r\n\t\t\t\tmaterialProperties.lightsHash = lightsHash = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n\t\t\t\tuniformsList =\r\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n\t\t\tmaterialProperties.uniformsList = uniformsList;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t\t_usedTextureUnits = 0;\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tif ( _clippingEnabled ) {\r\n\r\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n\t\t\t\t\tvar useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t\t_clipping.setState(\r\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\r\n\t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate === false ) {\r\n\r\n\t\t\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\r\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\t\tinitMaterial( material, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( state.useProgram( program.program ) ) {\r\n\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\t\trefreshMaterial = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _currentCamera !== camera ) {\r\n\r\n\t\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\t\tif ( material.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.envMap ) {\r\n\r\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\t\tuCamPos.setValue( _gl,\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\r\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.skinning ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\t\tif ( material.skinning ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\t\tvar skeleton = object.skeleton;\r\n\r\n\t\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\r\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\r\n\r\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\r\n\r\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\t\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\r\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\r\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\r\n\r\n\t\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isShadowMaterial ) {\r\n\r\n\t\t\t\t\tm_uniforms.color.value = material.color;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RectAreaLight Texture\r\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\r\n\r\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\r\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// common matrices\r\n\r\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\r\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\tif ( material.color ) {\r\n\r\n\t\t\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissive ) {\r\n\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.specularMap ) {\r\n\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\r\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\r\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\r\n\r\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.lightMap ) {\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.aoMap ) {\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\r\n\t\t\tvar uvScaleMap;\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\t\tuniforms.scale.value = _height * 0.5;\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.rotation.value = material.rotation;\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\r\n\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\t\tif ( fog.isFog ) {\r\n\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t\t} else if ( fog.isFogExp2 ) {\r\n\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsToon( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsPhong( uniforms, material );\r\n\r\n\t\t\tif ( material.gradientMap ) {\r\n\r\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\r\n\r\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\r\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\r\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\r\n\t\t\tuniforms.farDistance.value = material.farDistance;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t\t}\r\n\r\n\t\t// Textures\r\n\r\n\t\tfunction allocTextureUnit() {\r\n\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_usedTextureUnits += 1;\r\n\r\n\t\t\treturn textureUnit;\r\n\r\n\t\t}\r\n\r\n\t\tthis.allocTextureUnit = allocTextureUnit;\r\n\r\n\t\t// this.setTexture2D = setTexture2D;\r\n\t\tthis.setTexture2D = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\treturn function setTexture2D( texture, slot ) {\r\n\r\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\tthis.setTexture = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\treturn function setTexture( texture, slot ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\tthis.setTextureCube = ( function () {\r\n\r\n\t\t\tvar warned = false;\r\n\r\n\t\t\treturn function setTextureCube( texture, slot ) {\r\n\r\n\t\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n\t\t\t\t// TODO: unify these code paths\r\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\r\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t// this function alone should take care of cube textures\r\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\r\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() );\r\n\r\n\t\t//\r\n\r\n\t\tthis.setFramebuffer = function ( value ) {\r\n\r\n\t\t\t_framebuffer = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn _currentRenderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = _framebuffer;\r\n\t\t\tvar isCube = false;\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\t\t\t\tisCube = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tvar restore = false;\r\n\r\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t\trestore = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar texture = renderTarget.texture;\r\n\t\t\t\t\tvar textureFormat = texture.format;\r\n\t\t\t\t\tvar textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\r\n\r\n\t\t\tvar width = texture.image.width;\r\n\t\t\tvar height = texture.image.height;\r\n\t\t\tvar glFormat = utils.convert( texture.format );\r\n\r\n\t\t\tthis.setTexture2D( texture, 0 );\r\n\r\n\t\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\r\n\r\n\t\t\tvar width = srcTexture.image.width;\r\n\t\t\tvar height = srcTexture.image.height;\r\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\r\n\t\t\tvar glType = utils.convert( dstTexture.type );\r\n\r\n\t\t\tthis.setTexture2D( dstTexture, 0 );\r\n\r\n\t\t\tif ( srcTexture.isDataTexture ) {\r\n\r\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction FogExp2( color, density ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n\t}\r\n\r\n\tFogExp2.prototype.isFogExp2 = true;\r\n\r\n\tFogExp2.prototype.clone = function () {\r\n\r\n\t\treturn new FogExp2( this.color, this.density );\r\n\r\n\t};\r\n\r\n\tFogExp2.prototype.toJSON = function ( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'FogExp2',\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tdensity: this.density\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Fog( color, near, far ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n\t}\r\n\r\n\tFog.prototype.isFog = true;\r\n\r\n\tFog.prototype.clone = function () {\r\n\r\n\t\treturn new Fog( this.color, this.near, this.far );\r\n\r\n\t};\r\n\r\n\tFog.prototype.toJSON = function ( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'Fog',\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tnear: this.near,\r\n\t\t\tfar: this.far\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Scene() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\tthis.background = null;\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n\t}\r\n\r\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Scene,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\r\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBuffer( array, stride ) {\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBuffer.prototype, {\r\n\r\n\t\tisInterleavedBuffer: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\r\n\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tcount: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tarray: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tisInterleavedBufferAttribute: true,\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *  rotation: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction SpriteMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'SpriteMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\r\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\r\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n\tSpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar geometry;\r\n\r\n\tfunction Sprite( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\r\n\t\t\tvar float32Array = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\r\n\t\t\t] );\r\n\r\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n\r\n\t\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\r\n\r\n\t\tthis.center = new Vector2( 0.5, 0.5 );\r\n\r\n\t}\r\n\r\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Sprite,\r\n\r\n\t\tisSprite: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar intersectPoint = new Vector3();\r\n\t\t\tvar worldScale = new Vector3();\r\n\t\t\tvar mvPosition = new Vector3();\r\n\r\n\t\t\tvar alignedPosition = new Vector2();\r\n\t\t\tvar rotatedPosition = new Vector2();\r\n\t\t\tvar viewWorldMatrix = new Matrix4();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n\r\n\t\t\t\t// compute position in camera space\r\n\t\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n\r\n\t\t\t\t// to check if rotation is not zero\r\n\t\t\t\tif ( sin !== undefined ) {\r\n\r\n\t\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\r\n\t\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trotatedPosition.copy( alignedPosition );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvertexPosition.copy( mvPosition );\r\n\t\t\t\tvertexPosition.x += rotatedPosition.x;\r\n\t\t\t\tvertexPosition.y += rotatedPosition.y;\r\n\r\n\t\t\t\t// transform to world space\r\n\t\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\r\n\t\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\r\n\t\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n\r\n\t\t\t\tvar rotation = this.material.rotation;\r\n\t\t\t\tvar sin, cos;\r\n\t\t\t\tif ( rotation !== 0 ) {\r\n\r\n\t\t\t\t\tcos = Math.cos( rotation );\r\n\t\t\t\t\tsin = Math.sin( rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\r\n\t\t\t\t// check first triangle\r\n\t\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\r\n\r\n\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t// check second triangle\r\n\t\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\r\n\t\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LOD() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: LOD,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, false );\r\n\r\n\t\t\tvar levels = source.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddLevel: function ( object, distance ) {\r\n\r\n\t\t\tif ( distance === undefined ) distance = 0;\r\n\r\n\t\t\tdistance = Math.abs( distance );\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\t\tthis.add( object );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectForDistance: function ( distance ) {\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar matrixPosition = new Vector3();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar levels = this.levels;\r\n\r\n\t\t\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.levels = [];\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tdata.object.levels.push( {\r\n\t\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\t\tdistance: level.distance\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Skeleton( bones, boneInverses ) {\r\n\r\n\t\t// copy the bone array\r\n\r\n\t\tbones = bones || [];\r\n\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\r\n\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\t\tif ( boneInverses === undefined ) {\r\n\r\n\t\t\tthis.calculateInverses();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\r\n\r\n\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Skeleton.prototype, {\r\n\r\n\t\tcalculateInverses: function () {\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar inverse = new Matrix4();\r\n\r\n\t\t\t\tif ( this.bones[ i ] ) {\r\n\r\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tvar bone, i, il;\r\n\r\n\t\t\t// recover the bind-time world matrices\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar offsetMatrix = new Matrix4();\r\n\t\t\tvar identityMatrix = new Matrix4();\r\n\r\n\t\t\treturn function update() {\r\n\r\n\t\t\t\tvar bones = this.bones;\r\n\t\t\t\tvar boneInverses = this.boneInverses;\r\n\t\t\t\tvar boneMatrices = this.boneMatrices;\r\n\t\t\t\tvar boneTexture = this.boneTexture;\r\n\r\n\t\t\t\t// flatten bone matrices to array\r\n\r\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\r\n\r\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\r\n\r\n\t\t},\r\n\r\n\t\tgetBoneByName: function ( name ) {\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar bone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone.name === name ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Bone() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Bone';\r\n\r\n\t}\r\n\r\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Bone,\r\n\r\n\t\tisBone: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction SkinnedMesh( geometry, material ) {\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'SkinnedMesh';\r\n\r\n\t\tthis.bindMode = 'attached';\r\n\t\tthis.bindMatrix = new Matrix4();\r\n\t\tthis.bindMatrixInverse = new Matrix4();\r\n\r\n\t\tvar bones = this.initBones();\r\n\t\tvar skeleton = new Skeleton( bones );\r\n\r\n\t\tthis.bind( skeleton, this.matrixWorld );\r\n\r\n\t\tthis.normalizeSkinWeights();\r\n\r\n\t}\r\n\r\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\t\tconstructor: SkinnedMesh,\r\n\r\n\t\tisSkinnedMesh: true,\r\n\r\n\t\tinitBones: function () {\r\n\r\n\t\t\tvar bones = [], bone, gbone;\r\n\t\t\tvar i, il;\r\n\r\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\r\n\r\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\r\n\r\n\t\t\t\t\t// create new 'Bone' object\r\n\r\n\t\t\t\t\tbone = new Bone();\r\n\t\t\t\t\tbones.push( bone );\r\n\r\n\t\t\t\t\t// apply values\r\n\r\n\t\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// second, create bone hierarchy\r\n\r\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\r\n\r\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\r\n\r\n\t\t\t\t\t\t// subsequent bones in the hierarchy\r\n\r\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\r\n\r\n\t\t\t\t\t\tthis.add( bones[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\r\n\t\t\t// let's update the corresponding matrices\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\treturn bones;\r\n\r\n\t\t},\r\n\r\n\t\tbind: function ( skeleton, bindMatrix ) {\r\n\r\n\t\t\tthis.skeleton = skeleton;\r\n\r\n\t\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tthis.skeleton.pose();\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeSkinWeights: function () {\r\n\r\n\t\t\tvar scale, i;\r\n\r\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\r\n\r\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\t\t\tscale = 1.0 / sw.manhattanLength();\r\n\r\n\t\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar vec = new Vector4();\r\n\r\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n\t\t\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n\t\t\t\t\tscale = 1.0 / vec.manhattanLength();\r\n\r\n\t\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tif ( this.bindMode === 'attached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t\t} else if ( this.bindMode === 'detached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\"\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\r\n\r\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n\tLineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Line( geometry, material, mode ) {\r\n\r\n\t\tif ( mode === 1 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Line';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Line,\r\n\r\n\t\tisLine: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [ 0 ];\r\n\r\n\t\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tlineDistances[ 0 ] = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\t\tvar precisionSq = precision * precision;\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar vStart = new Vector3();\r\n\t\t\t\tvar vEnd = new Vector3();\r\n\t\t\t\tvar interSegment = new Vector3();\r\n\t\t\t\tvar interRay = new Vector3();\r\n\t\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LineSegments( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineSegments';\r\n\r\n\t}\r\n\r\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineSegments,\r\n\r\n\t\tisLineSegments: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\tstart.copy( vertices[ i ] );\r\n\t\t\t\t\t\tend.copy( vertices[ i + 1 ] );\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() )\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mgreter / http://github.com/mgreter\r\n\t */\r\n\r\n\tfunction LineLoop( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineLoop';\r\n\r\n\t}\r\n\r\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineLoop,\r\n\r\n\t\tisLineLoop: true,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t *\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction PointsMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'PointsMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tPointsMaterial.prototype = Object.create( Material.prototype );\r\n\tPointsMaterial.prototype.constructor = PointsMaterial;\r\n\r\n\tPointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n\tPointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Points( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Points';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Points,\r\n\r\n\t\tisPoints: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar object = this;\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\t\t\tsphere.radius += threshold;\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\t\tvar position = new Vector3();\r\n\t\t\t\tvar intersectPoint = new Vector3();\r\n\r\n\t\t\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\r\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\r\n\r\n\t\tconstructor: VideoTexture,\r\n\r\n\t\tisVideoTexture: true,\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar video = this.image;\r\n\r\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\r\n\tCompressedTexture.prototype.constructor = CompressedTexture;\r\n\r\n\tCompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\r\n\tCanvasTexture.prototype.constructor = CanvasTexture;\r\n\tCanvasTexture.prototype.isCanvasTexture = true;\r\n\r\n\t/**\r\n\t * @author Matt DesLauriers / @mattdesl\r\n\t * @author atix / arthursilber.de\r\n\t */\r\n\r\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\r\n\r\n\t\tformat = format !== undefined ? format : DepthFormat;\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\r\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps\t= false;\r\n\r\n\t}\r\n\r\n\tDepthTexture.prototype = Object.create( Texture.prototype );\r\n\tDepthTexture.prototype.constructor = DepthTexture;\r\n\tDepthTexture.prototype.isDepthTexture = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WireframeGeometry( geometry ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j, l, o, ol;\r\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\t\tvar vertex;\r\n\r\n\t\t// different logic for Geometry and BufferGeometry\r\n\r\n\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t// create a data structure that contains all edges without duplicates\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate vertices\r\n\r\n\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\tvar position, indices, groups;\r\n\t\t\tvar group, start, count;\r\n\t\t\tvar index1, index2;\r\n\r\n\t\t\tvertex = new Vector3();\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t// indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\t\t\t\tindices = geometry.index;\r\n\t\t\t\tgroups = geometry.groups;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a data structure that contains all eges without duplicates\r\n\r\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\t\tgroup = groups[ o ];\r\n\r\n\t\t\t\t\tstart = group.start;\r\n\t\t\t\t\tcount = group.count;\r\n\r\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\r\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// generate vertices\r\n\r\n\t\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\r\n\t\t\t\t\t\tindex1 = 3 * i + j;\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\r\n\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t */\r\n\r\n\t// ParametricGeometry\r\n\r\n\tfunction ParametricGeometry( func, slices, stacks ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\r\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\r\n\r\n\t// ParametricBufferGeometry\r\n\r\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\tvar EPS = 0.00001;\r\n\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\r\n\t\tvar pu = new Vector3(), pv = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tif ( func.length < 3 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tvar sliceCount = slices + 1;\r\n\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\t\tvar v = i / stacks;\r\n\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\t\tvar u = j / slices;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tfunc( u, v, p0 );\r\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\t// approximate tangent vectors via finite differences\r\n\r\n\t\t\t\tif ( u - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u - EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u + EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( v - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u, v - EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u, v + EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// cross product of tangent vectors returns surface normal\r\n\r\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u, v );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\t\tvar a = i * sliceCount + j;\r\n\t\t\t\tvar b = i * sliceCount + j + 1;\r\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\t\t// faces one and two\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\r\n\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PolyhedronGeometry\r\n\r\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\r\n\r\n\t// PolyhedronBufferGeometry\r\n\r\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\r\n\t\t// default buffer data\r\n\r\n\t\tvar vertexBuffer = [];\r\n\t\tvar uvBuffer = [];\r\n\r\n\t\t// the subdivision creates the vertex buffer data\r\n\r\n\t\tsubdivide( detail );\r\n\r\n\t\t// all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\tappplyRadius( radius );\r\n\r\n\t\t// finally, create the uv data\r\n\r\n\t\tgenerateUVs();\r\n\r\n\t\t// build non-indexed geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n\r\n\t\tif ( detail === 0 ) {\r\n\r\n\t\t\tthis.computeVertexNormals(); // flat normals\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.normalizeNormals(); // smooth normals\r\n\r\n\t\t}\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction subdivide( detail ) {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\r\n\r\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t// get the vertices of the face\r\n\r\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\r\n\r\n\t\t\t\t// perform subdivision\r\n\r\n\t\t\t\tsubdivideFace( a, b, c, detail );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction subdivideFace( a, b, c, detail ) {\r\n\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\r\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\tvar v = [];\r\n\r\n\t\t\tvar i, j;\r\n\r\n\t\t\t// construct all of the vertices for this subdivision\r\n\r\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\r\n\r\n\t\t\t\tv[ i ] = [];\r\n\r\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\r\n\r\n\t\t\t\tvar rows = cols - i;\r\n\r\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// construct all of the faces\r\n\r\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction appplyRadius( radius ) {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\r\n\r\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\tuvBuffer.push( u, 1 - v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcorrectUVs();\r\n\r\n\t\t\tcorrectSeam();\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctSeam() {\r\n\r\n\t\t\t// handle case when face straddles the seam, see #3269\r\n\r\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\r\n\r\n\t\t\t\t// uv data of a single face\r\n\r\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\r\n\r\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( vertex ) {\r\n\r\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVertexByIndex( index, vertex ) {\r\n\r\n\t\t\tvar stride = index * 3;\r\n\r\n\t\t\tvertex.x = vertices[ stride + 0 ];\r\n\t\t\tvertex.y = vertices[ stride + 1 ];\r\n\t\t\tvertex.z = vertices[ stride + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUVs() {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\tvar centroid = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n\r\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n\r\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n\r\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n\r\n\t\t\t\tvar azi = azimuth( centroid );\r\n\r\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\r\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\r\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\r\n\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\t\tfunction azimuth( vector ) {\r\n\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Angle above the XZ plane.\r\n\r\n\t\tfunction inclination( vector ) {\r\n\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TetrahedronGeometry\r\n\r\n\tfunction TetrahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\r\n\r\n\t// TetrahedronBufferGeometry\r\n\r\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// OctahedronGeometry\r\n\r\n\tfunction OctahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\r\n\r\n\t// OctahedronBufferGeometry\r\n\r\n\tfunction OctahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t1, 3, 4,\t1, 4, 2\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'OctahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// IcosahedronGeometry\r\n\r\n\tfunction IcosahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\r\n\r\n\t// IcosahedronBufferGeometry\r\n\r\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'IcosahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// DodecahedronGeometry\r\n\r\n\tfunction DodecahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\r\n\r\n\t// DodecahedronBufferGeometry\r\n\r\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\r\n\t\tvar vertices = [\r\n\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t1, 1, - 1, 1, 1, 1,\r\n\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t, 0, - r, t,\r\n\t\t\t 0, r, - t, 0, r, t,\r\n\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t, 0, - r, t, 0,\r\n\t\t\t r, - t, 0, r, t, 0,\r\n\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t, 0, - r, t, 0, - r,\r\n\t\t\t- t, 0, r, t, 0, r\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'DodecahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t */\r\n\r\n\t// TubeGeometry\r\n\r\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\r\n\r\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = bufferGeometry.tangents;\r\n\t\tthis.normals = bufferGeometry.normals;\r\n\t\tthis.binormals = bufferGeometry.binormals;\r\n\r\n\t\t// create geometry\r\n\r\n\t\tthis.fromBufferGeometry( bufferGeometry );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTubeGeometry.prototype.constructor = TubeGeometry;\r\n\r\n\t// TubeBufferGeometry\r\n\r\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\ttubularSegments = tubularSegments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\r\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = frames.tangents;\r\n\t\tthis.normals = frames.normals;\r\n\t\tthis.binormals = frames.binormals;\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar P = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\t\tvar indices = [];\r\n\r\n\t\t// create buffer data\r\n\r\n\t\tgenerateBufferData();\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction generateBufferData() {\r\n\r\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tgenerateSegment( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t// at the regular position on the given path\r\n\t\t\t//\r\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n\r\n\t\t\t// uvs are generated in a separate function.\r\n\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\tgenerateUVs();\r\n\r\n\t\t\t// finally create faces\r\n\r\n\t\t\tgenerateIndices();\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateSegment( i ) {\r\n\r\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\r\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\r\n\r\n\t\t\t// retrieve corresponding normal and binormal\r\n\r\n\t\t\tvar N = frames.normals[ i ];\r\n\t\t\tvar B = frames.binormals[ i ];\r\n\r\n\t\t\t// generate normals and vertices for the current segment\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\tvar sin = Math.sin( v );\r\n\t\t\t\tvar cos = - Math.cos( v );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateIndices() {\r\n\r\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\tuv.y = j / radialSegments;\r\n\r\n\t\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * based on http://www.blackpawn.com/texts/pqtorus/\r\n\t */\r\n\r\n\t// TorusKnotGeometry\r\n\r\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\r\n\r\n\t// TorusKnotBufferGeometry\r\n\r\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar P1 = new Vector3();\r\n\t\tvar P2 = new Vector3();\r\n\r\n\t\tvar B = new Vector3();\r\n\t\tvar T = new Vector3();\r\n\t\tvar N = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t\t// calculate orthonormal basis\r\n\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// this function calculates the current position on the torus curve\r\n\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = q / p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\r\n\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TorusGeometry\r\n\r\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusGeometry.prototype.constructor = TorusGeometry;\r\n\r\n\t// TorusBufferGeometry\r\n\r\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar center = new Vector3();\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n\t */\r\n\r\n\tvar Earcut = {\r\n\r\n\t\ttriangulate: function ( data, holeIndices, dim ) {\r\n\r\n\t\t\tdim = dim || 2;\r\n\r\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\r\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\r\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\r\n\t\t\t\ttriangles = [];\r\n\r\n\t\t\tif ( ! outerNode ) return triangles;\r\n\r\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n\r\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n\t\t\tif ( data.length > 80 * dim ) {\r\n\r\n\t\t\t\tminX = maxX = data[ 0 ];\r\n\t\t\t\tminY = maxY = data[ 1 ];\r\n\r\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\r\n\r\n\t\t\t\t\tx = data[ i ];\r\n\t\t\t\t\ty = data[ i + 1 ];\r\n\t\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\t\tif ( y > maxY ) maxY = y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\treturn triangles;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n\tfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n\t\tvar i, last;\r\n\r\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t}\r\n\r\n\t\tif ( last && equals( last, last.next ) ) {\r\n\r\n\t\t\tremoveNode( last );\r\n\t\t\tlast = last.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn last;\r\n\r\n\t}\r\n\r\n\t// eliminate colinear or duplicate points\r\n\r\n\tfunction filterPoints( start, end ) {\r\n\r\n\t\tif ( ! start ) return start;\r\n\t\tif ( ! end ) end = start;\r\n\r\n\t\tvar p = start, again;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tagain = false;\r\n\r\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tp = end = p.prev;\r\n\t\t\t\tif ( p === p.next ) break;\r\n\t\t\t\tagain = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp = p.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t} while ( again || p !== end );\r\n\r\n\t\treturn end;\r\n\r\n\t}\r\n\r\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n\r\n\t\tif ( ! ear ) return;\r\n\r\n\t\t// interlink polygon nodes in z-order\r\n\r\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n\r\n\t\tvar stop = ear, prev, next;\r\n\r\n\t\t// iterate through ears, slicing them one by one\r\n\r\n\t\twhile ( ear.prev !== ear.next ) {\r\n\r\n\t\t\tprev = ear.prev;\r\n\t\t\tnext = ear.next;\r\n\r\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n\t\t\t\t// cut off the triangle\r\n\t\t\t\ttriangles.push( prev.i / dim );\r\n\t\t\t\ttriangles.push( ear.i / dim );\r\n\t\t\t\ttriangles.push( next.i / dim );\r\n\r\n\t\t\t\tremoveNode( ear );\r\n\r\n\t\t\t\t// skipping the next vertice leads to less sliver triangles\r\n\t\t\t\tear = next.next;\r\n\t\t\t\tstop = next.next;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tear = next;\r\n\r\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n\t\t\tif ( ear === stop ) {\r\n\r\n\t\t\t\t// try filtering points and slicing again\r\n\r\n\t\t\t\tif ( ! pass ) {\r\n\r\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\r\n\r\n\t\t\t\t} else if ( pass === 1 ) {\r\n\r\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\r\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\r\n\r\n\t\t\t\t} else if ( pass === 2 ) {\r\n\r\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n\tfunction isEar( ear ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// now make sure we don't have other points inside the potential ear\r\n\t\tvar p = ear.next.next;\r\n\r\n\t\twhile ( p !== ear.prev ) {\r\n\r\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// triangle bbox; min & max are calculated like this for speed\r\n\r\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n\t\t// z-order range for the current triangle bbox;\r\n\r\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n\t\t// first look for points inside the triangle in increasing z-order\r\n\r\n\t\tvar p = ear.nextZ;\r\n\r\n\t\twhile ( p && p.z <= maxZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t\tp = p.nextZ;\r\n\r\n\t\t}\r\n\r\n\t\t// then look for points in decreasing z-order\r\n\r\n\t\tp = ear.prevZ;\r\n\r\n\t\twhile ( p && p.z >= minZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\r\n\t\t\tp = p.prevZ;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t// go through all polygon nodes and cure small local self-intersections\r\n\r\n\tfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar a = p.prev, b = p.next.next;\r\n\r\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n\t\t\t\ttriangles.push( a.i / dim );\r\n\t\t\t\ttriangles.push( p.i / dim );\r\n\t\t\t\ttriangles.push( b.i / dim );\r\n\r\n\t\t\t\t// remove two nodes involved\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tremoveNode( p.next );\r\n\r\n\t\t\t\tp = start = b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\t// try splitting polygon into two and triangulate them independently\r\n\r\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n\t\t// look for a valid diagonal that divides the polygon into two\r\n\r\n\t\tvar a = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar b = a.next.next;\r\n\r\n\t\t\twhile ( b !== a.prev ) {\r\n\r\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n\t\t\t\t\t// split the polygon in two by the diagonal\r\n\r\n\t\t\t\t\tvar c = splitPolygon( a, b );\r\n\r\n\t\t\t\t\t// filter colinear points around the cuts\r\n\r\n\t\t\t\t\ta = filterPoints( a, a.next );\r\n\t\t\t\t\tc = filterPoints( c, c.next );\r\n\r\n\t\t\t\t\t// run earcut on each half\r\n\r\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tb = b.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ta = a.next;\r\n\r\n\t\t} while ( a !== start );\r\n\r\n\t}\r\n\r\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n\t\tvar queue = [], i, len, start, end, list;\r\n\r\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n\t\t\tstart = holeIndices[ i ] * dim;\r\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\t\tlist = linkedList( data, start, end, dim, false );\r\n\t\t\tif ( list === list.next ) list.steiner = true;\r\n\t\t\tqueue.push( getLeftmost( list ) );\r\n\r\n\t\t}\r\n\r\n\t\tqueue.sort( compareX );\r\n\r\n\t\t// process holes from left to right\r\n\r\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\r\n\r\n\t\t\teliminateHole( queue[ i ], outerNode );\r\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\r\n\r\n\t\t}\r\n\r\n\t\treturn outerNode;\r\n\r\n\t}\r\n\r\n\tfunction compareX( a, b ) {\r\n\r\n\t\treturn a.x - b.x;\r\n\r\n\t}\r\n\r\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n\tfunction eliminateHole( hole, outerNode ) {\r\n\r\n\t\touterNode = findHoleBridge( hole, outerNode );\r\n\r\n\t\tif ( outerNode ) {\r\n\r\n\t\t\tvar b = splitPolygon( outerNode, hole );\r\n\r\n\t\t\tfilterPoints( b, b.next );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n\tfunction findHoleBridge( hole, outerNode ) {\r\n\r\n\t\tvar p = outerNode,\r\n\t\t\thx = hole.x,\r\n\t\t\thy = hole.y,\r\n\t\t\tqx = - Infinity,\r\n\t\t\tm;\r\n\r\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t\t// segment's endpoint with lesser x will be potential connection point\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n\t\t\t\tif ( x <= hx && x > qx ) {\r\n\r\n\t\t\t\t\tqx = x;\r\n\r\n\t\t\t\t\tif ( x === hx ) {\r\n\r\n\t\t\t\t\t\tif ( hy === p.y ) return p;\r\n\t\t\t\t\t\tif ( hy === p.next.y ) return p.next;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== outerNode );\r\n\r\n\t\tif ( ! m ) return null;\r\n\r\n\t\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t\t// if there are no points found, we have a valid connection;\r\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\t\tvar stop = m,\r\n\t\t\tmx = m.x,\r\n\t\t\tmy = m.y,\r\n\t\t\ttanMin = Infinity,\r\n\t\t\ttan;\r\n\r\n\t\tp = m.next;\r\n\r\n\t\twhile ( p !== stop ) {\r\n\r\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n\t\t\t\t\tm = p;\r\n\t\t\t\t\ttanMin = tan;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn m;\r\n\r\n\t}\r\n\r\n\t// interlink polygon nodes in z-order\r\n\r\n\tfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\t\tp.prevZ = p.prev;\r\n\t\t\tp.nextZ = p.next;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\tp.prevZ.nextZ = null;\r\n\t\tp.prevZ = null;\r\n\r\n\t\tsortLinked( p );\r\n\r\n\t}\r\n\r\n\t// Simon Tatham's linked list merge sort algorithm\r\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n\tfunction sortLinked( list ) {\r\n\r\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tp = list;\r\n\t\t\tlist = null;\r\n\t\t\ttail = null;\r\n\t\t\tnumMerges = 0;\r\n\r\n\t\t\twhile ( p ) {\r\n\r\n\t\t\t\tnumMerges ++;\r\n\t\t\t\tq = p;\r\n\t\t\t\tpSize = 0;\r\n\r\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\r\n\r\n\t\t\t\t\tpSize ++;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tif ( ! q ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqSize = inSize;\r\n\r\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n\t\t\t\t\t\te = p;\r\n\t\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\t\tpSize --;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\te = q;\r\n\t\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\t\tqSize --;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\r\n\t\t\t\t\telse list = e;\r\n\r\n\t\t\t\t\te.prevZ = tail;\r\n\t\t\t\t\ttail = e;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp = q;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttail.nextZ = null;\r\n\t\t\tinSize *= 2;\r\n\r\n\t\t} while ( numMerges > 1 );\r\n\r\n\t\treturn list;\r\n\r\n\t}\r\n\r\n\t// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n\tfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n\t\t// coords are transformed into non-negative 15-bit integer range\r\n\r\n\t\tx = 32767 * ( x - minX ) * invSize;\r\n\t\ty = 32767 * ( y - minY ) * invSize;\r\n\r\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\r\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\r\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n\t\treturn x | ( y << 1 );\r\n\r\n\t}\r\n\r\n\t// find the leftmost node of a polygon ring\r\n\r\n\tfunction getLeftmost( start ) {\r\n\r\n\t\tvar p = start, leftmost = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.x < leftmost.x ) leftmost = p;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn leftmost;\r\n\r\n\t}\r\n\r\n\t// check if a point lies within a convex triangle\r\n\r\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n\t}\r\n\r\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n\tfunction isValidDiagonal( a, b ) {\r\n\r\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n\t\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n\t}\r\n\r\n\t// signed area of a triangle\r\n\r\n\tfunction area( p, q, r ) {\r\n\r\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n\t}\r\n\r\n\t// check if two points are equal\r\n\r\n\tfunction equals( p1, p2 ) {\r\n\r\n\t\treturn p1.x === p2.x && p1.y === p2.y;\r\n\r\n\t}\r\n\r\n\t// check if two segments intersect\r\n\r\n\tfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n\t\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n\t\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\r\n\r\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n\t\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal intersects any polygon segments\r\n\r\n\tfunction intersectsPolygon( a, b ) {\r\n\r\n\t\tvar p = a;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal is locally inside the polygon\r\n\r\n\tfunction locallyInside( a, b ) {\r\n\r\n\t\treturn area( a.prev, a, a.next ) < 0 ?\r\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n\t}\r\n\r\n\t// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n\tfunction middleInside( a, b ) {\r\n\r\n\t\tvar p = a,\r\n\t\t\tinside = false,\r\n\t\t\tpx = ( a.x + b.x ) / 2,\r\n\t\t\tpy = ( a.y + b.y ) / 2;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n\t\t\t\tinside = ! inside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn inside;\r\n\r\n\t}\r\n\r\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n\tfunction splitPolygon( a, b ) {\r\n\r\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\r\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\r\n\t\t\tan = a.next,\r\n\t\t\tbp = b.prev;\r\n\r\n\t\ta.next = b;\r\n\t\tb.prev = a;\r\n\r\n\t\ta2.next = an;\r\n\t\tan.prev = a2;\r\n\r\n\t\tb2.next = a2;\r\n\t\ta2.prev = b2;\r\n\r\n\t\tbp.next = b2;\r\n\t\tb2.prev = bp;\r\n\r\n\t\treturn b2;\r\n\r\n\t}\r\n\r\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n\tfunction insertNode( i, x, y, last ) {\r\n\r\n\t\tvar p = new Node( i, x, y );\r\n\r\n\t\tif ( ! last ) {\r\n\r\n\t\t\tp.prev = p;\r\n\t\t\tp.next = p;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tp.next = last.next;\r\n\t\t\tp.prev = last;\r\n\t\t\tlast.next.prev = p;\r\n\t\t\tlast.next = p;\r\n\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\tfunction removeNode( p ) {\r\n\r\n\t\tp.next.prev = p.prev;\r\n\t\tp.prev.next = p.next;\r\n\r\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n\r\n\t}\r\n\r\n\tfunction Node( i, x, y ) {\r\n\r\n\t\t// vertice index in coordinates array\r\n\t\tthis.i = i;\r\n\r\n\t\t// vertex coordinates\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t// previous and next vertice nodes in a polygon ring\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null;\r\n\r\n\t\t// z-order curve value\r\n\t\tthis.z = null;\r\n\r\n\t\t// previous and next nodes in z-order\r\n\t\tthis.prevZ = null;\r\n\t\tthis.nextZ = null;\r\n\r\n\t\t// indicates whether this is a steiner point\r\n\t\tthis.steiner = false;\r\n\r\n\t}\r\n\r\n\tfunction signedArea( data, start, end, dim ) {\r\n\r\n\t\tvar sum = 0;\r\n\r\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\t\tj = i;\r\n\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tvar ShapeUtils = {\r\n\r\n\t\t// calculate area of the contour polygon\r\n\r\n\t\tarea: function ( contour ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a * 0.5;\r\n\r\n\t\t},\r\n\r\n\t\tisClockWise: function ( pts ) {\r\n\r\n\t\t\treturn ShapeUtils.area( pts ) < 0;\r\n\r\n\t\t},\r\n\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\t\tvar holeIndices = []; // array of hole indices\r\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\t\tremoveDupEndPts( contour );\r\n\t\t\taddContour( vertices, contour );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar holeIndex = contour.length;\r\n\r\n\t\t\tholes.forEach( removeDupEndPts );\r\n\r\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\r\n\r\n\t\t\t\tholeIndices.push( holeIndex );\r\n\t\t\t\tholeIndex += holes[ i ].length;\r\n\t\t\t\taddContour( vertices, holes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\r\n\r\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn faces;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction removeDupEndPts( points ) {\r\n\r\n\t\tvar l = points.length;\r\n\r\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\tpoints.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addContour( vertices, contour ) {\r\n\r\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\r\n\r\n\t\t\tvertices.push( contour[ i ].x );\r\n\t\t\tvertices.push( contour[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  depth: <float>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n\t *\r\n\t *  UVGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\t// ExtrudeGeometry\r\n\r\n\tfunction ExtrudeGeometry( shapes, options ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\r\n\r\n\tExtrudeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t// ExtrudeBufferGeometry\r\n\r\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar verticesArray = [];\r\n\t\tvar uvArray = [];\r\n\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar shape = shapes[ i ];\r\n\t\t\taddShape( shape );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar placeholder = [];\r\n\r\n\t\t\t// options\r\n\r\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\r\n\r\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\r\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\t\t\tvar extrudePath = options.extrudePath;\r\n\r\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n\r\n\t\t\t// deprecated options\r\n\r\n\t\t\tif ( options.amount !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\r\n\t\t\t\tdepth = options.amount;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar extrudePts, extrudeByPath = false;\r\n\t\t\tvar splineTube, binormal, normal, position2;\r\n\r\n\t\t\tif ( extrudePath ) {\r\n\r\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\t\t\textrudeByPath = true;\r\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t\t\t// SETUP TNB variables\r\n\r\n\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\r\n\r\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\tnormal = new Vector3();\r\n\t\t\t\tposition2 = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Safeguards if bevels are not enabled\r\n\r\n\t\t\tif ( ! bevelEnabled ) {\r\n\r\n\t\t\t\tbevelSegments = 0;\r\n\t\t\t\tbevelThickness = 0;\r\n\t\t\t\tbevelSize = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Variables initialization\r\n\r\n\t\t\tvar ahole, h, hl; // looping of holes\r\n\r\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar vertices = shapePoints.shape;\r\n\t\t\tvar holes = shapePoints.holes;\r\n\r\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\r\n\r\n\t\t\tif ( reverse ) {\r\n\r\n\t\t\t\tvertices = vertices.reverse();\r\n\r\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t\t\t/* Vertices */\r\n\r\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\tvertices = vertices.concat( ahole );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction scalePt2( pt, vec, size ) {\r\n\r\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar b, bs, t, z,\r\n\t\t\t\tvert, vlen = vertices.length,\r\n\t\t\t\tface, flen = faces.length;\r\n\r\n\r\n\t\t\t// Find directions for point movement\r\n\r\n\r\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t//\r\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\r\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\r\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t\t\t// check for collinear edges\r\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not collinear\r\n\r\n\t\t\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\r\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar contourMovements = [];\r\n\r\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesMovements = [],\r\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbs = bevelSize;\r\n\r\n\t\t\t// Back facing vertices\r\n\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add stepped vertices...\r\n\t\t\t// Including front facing vertices\r\n\r\n\t\t\tvar s;\r\n\r\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Add bevel segments planes\r\n\r\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* Faces */\r\n\r\n\t\t\t// Top and bottom faces\r\n\r\n\t\t\tbuildLidFaces();\r\n\r\n\t\t\t// Sides faces\r\n\r\n\t\t\tbuildSideFaces();\r\n\r\n\r\n\t\t\t/////  Internal functions\r\n\r\n\t\t\tfunction buildLidFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\r\n\t\t\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create faces for the z-sides of the shape\r\n\r\n\t\t\tfunction buildSideFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\t\t\t\tvar layeroffset = 0;\r\n\t\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t\t\t//, true\r\n\t\t\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\t\t\tvar j, k;\r\n\t\t\t\ti = contour.length;\r\n\r\n\t\t\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\t\t\tj = i;\r\n\t\t\t\t\tk = i - 1;\r\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\tvar s = 0,\r\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\r\n\r\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\t\t\tf4( a, b, c, d );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction v( x, y, z ) {\r\n\r\n\t\t\t\tplaceholder.push( x );\r\n\t\t\t\tplaceholder.push( y );\r\n\t\t\t\tplaceholder.push( z );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction f3( a, b, c ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction f4( a, b, c, d ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( d );\r\n\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\t\t\t\taddVertex( d );\r\n\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addVertex( index ) {\r\n\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction addUV( vector2 ) {\r\n\r\n\t\t\t\tuvArray.push( vector2.x );\r\n\t\t\t\tuvArray.push( vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\r\n\r\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar WorldUVGenerator = {\r\n\r\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_x, a_y ),\r\n\t\t\t\tnew Vector2( b_x, b_y ),\r\n\t\t\t\tnew Vector2( c_x, c_y )\r\n\t\t\t];\r\n\r\n\t\t},\r\n\r\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\r\n\t\t\tvar d_x = vertices[ indexD * 3 ];\r\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\r\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\r\n\r\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tfunction toJSON( shapes, options, data ) {\r\n\r\n\t\t//\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  font: <THREE.Font>, // font\r\n\t *\r\n\t *  size: <float>, // size of the text\r\n\t *  height: <float>, // thickness to extrude text\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into text bevel goes\r\n\t *  bevelSize: <float> // how far from text outline is bevel\r\n\t * }\r\n\t */\r\n\r\n\t// TextGeometry\r\n\r\n\tfunction TextGeometry( text, parameters ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TextGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\ttext: text,\r\n\t\t\tparameters: parameters\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTextGeometry.prototype.constructor = TextGeometry;\r\n\r\n\t// TextBufferGeometry\r\n\r\n\tfunction TextBufferGeometry( text, parameters ) {\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar font = parameters.font;\r\n\r\n\t\tif ( ! ( font && font.isFont ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\t\treturn new Geometry();\r\n\r\n\t\t}\r\n\r\n\t\tvar shapes = font.generateShapes( text, parameters.size );\r\n\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\r\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t\t// defaults\r\n\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\r\n\r\n\t\tthis.type = 'TextBufferGeometry';\r\n\r\n\t}\r\n\r\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\r\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// SphereGeometry\r\n\r\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\r\n\tSphereGeometry.prototype.constructor = SphereGeometry;\r\n\r\n\t// SphereBufferGeometry\r\n\r\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\tvar index = 0;\r\n\t\tvar grid = [];\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\r\n\r\n\t\t\tvar verticesRow = [];\r\n\r\n\t\t\tvar v = iy / heightSegments;\r\n\r\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar u = ix / widthSegments;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\tverticesRow.push( index ++ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgrid.push( verticesRow );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\tvar b = grid[ iy ][ ix ];\r\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\r\n\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// RingGeometry\r\n\r\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\r\n\tRingGeometry.prototype.constructor = RingGeometry;\r\n\r\n\t// RingBufferGeometry\r\n\r\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tinnerRadius = innerRadius || 0.5;\r\n\t\touterRadius = outerRadius || 1;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// some helper variables\r\n\r\n\t\tvar segment;\r\n\t\tvar radius = innerRadius;\r\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\r\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// increase the radius for next row of vertices\r\n\r\n\t\t\tradius += radiusStep;\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t\tvar a = segment;\r\n\t\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\r\n\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// LatheGeometry\r\n\r\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\r\n\tLatheGeometry.prototype.constructor = LatheGeometry;\r\n\r\n\t// LatheBufferGeometry\r\n\r\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.floor( segments ) || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar base;\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar i, j;\r\n\r\n\t\t// generate vertices and uvs\r\n\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\t\tvar sin = Math.sin( phi );\r\n\t\t\tvar cos = Math.cos( phi );\r\n\r\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + points.length;\r\n\t\t\t\tvar c = base + points.length + 1;\r\n\t\t\t\tvar d = base + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// generate normals\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\t\tif ( phiLength === Math.PI * 2 ) {\r\n\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\t\tvar n1 = new Vector3();\r\n\t\t\tvar n2 = new Vector3();\r\n\t\t\tvar n = new Vector3();\r\n\r\n\t\t\t// this is the buffer offset for the last line of vertices\r\n\r\n\t\t\tbase = segments * points.length * 3;\r\n\r\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t\t// select the normal of the vertex in the first line\r\n\r\n\t\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t\t// select the normal of the vertex in the last line\r\n\r\n\t\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t\t// average normals\r\n\r\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t\t// assign the new values to both normals\r\n\r\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\r\n\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// ShapeGeometry\r\n\r\n\tfunction ShapeGeometry( shapes, curveSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeGeometry';\r\n\r\n\t\tif ( typeof curveSegments === 'object' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\r\n\r\n\t\t\tcurveSegments = curveSegments.curveSegments;\r\n\r\n\t\t}\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\r\n\r\n\tShapeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t// ShapeBufferGeometry\r\n\r\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tcurveSegments = curveSegments || 12;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar groupStart = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\t// allow single and array values for \"shapes\" parameter\r\n\r\n\t\tif ( Array.isArray( shapes ) === false ) {\r\n\r\n\t\t\taddShape( shapes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\r\n\r\n\t\t\t\taddShape( shapes[ i ] );\r\n\r\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\tgroupCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar i, l, shapeHole;\r\n\r\n\t\t\tvar indexOffset = vertices.length / 3;\r\n\t\t\tvar points = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar shapeVertices = points.shape;\r\n\t\t\tvar shapeHoles = points.holes;\r\n\r\n\t\t\t// check direction of vertices\r\n\r\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n\r\n\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\r\n\t\t\t\t// also check if holes are in the opposite direction\r\n\r\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n\r\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n\r\n\t\t\t// join vertices of inner and outer paths to a single array\r\n\r\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices, normals, uvs\r\n\r\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = shapeVertices[ i ];\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// incides\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\r\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\r\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\r\n\r\n\t\t\t\tindices.push( a, b, c );\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\r\n\r\n\tShapeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction toJSON$1( shapes, data ) {\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'EdgesGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tthresholdAngle: thresholdAngle\r\n\t\t};\r\n\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\r\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t// prepare source geometry\r\n\r\n\t\tvar geometry2;\r\n\r\n\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tgeometry2 = new Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry2 = geometry.clone();\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\r\n\t\tvar sourceVertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\r\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\r\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tedges[ key ].face2 = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices\r\n\r\n\t\tfor ( key in edges ) {\r\n\r\n\t\t\tvar e = edges[ key ];\r\n\r\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\r\n\r\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// CylinderGeometry\r\n\r\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\r\n\r\n\t// CylinderBufferGeometry\r\n\r\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar index = 0;\r\n\t\tvar indexArray = [];\r\n\t\tvar halfHeight = height / 2;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// generate geometry\r\n\r\n\t\tgenerateTorso();\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction generateTorso() {\r\n\r\n\t\t\tvar x, y;\r\n\t\t\tvar normal = new Vector3();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\t\tvar indexRow = [];\r\n\r\n\t\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t\t// calculate the radius of the current row\r\n\r\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\r\n\t\t\t\t\t// vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t// normal\r\n\r\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\t// uv\r\n\r\n\t\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\r\n\t\t\t\t\tindexRow.push( index ++ );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\r\n\t\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\r\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\r\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// update group counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateCap( top ) {\r\n\r\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n\t\t\tvar uv = new Vector2();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tcenterIndexStart = index;\r\n\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// save the index of the last center vertex\r\n\r\n\t\t\tcenterIndexEnd = index;\r\n\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar c = centerIndexStart + x;\r\n\t\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t\t// face top\r\n\r\n\t\t\t\t\tindices.push( i, i + 1, c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// face bottom\r\n\r\n\t\t\t\t\tindices.push( i + 1, i, c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\t// ConeGeometry\r\n\r\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\r\n\tConeGeometry.prototype.constructor = ConeGeometry;\r\n\r\n\t// ConeBufferGeometry\r\n\r\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\r\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author hughes\r\n\t */\r\n\r\n\t// CircleGeometry\r\n\r\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCircleGeometry.prototype.constructor = CircleGeometry;\r\n\r\n\t// CircleBufferGeometry\r\n\r\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, s;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\r\n\t\t// center point\r\n\r\n\t\tvertices.push( 0, 0, 0 );\r\n\t\tnormals.push( 0, 0, 1 );\r\n\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\r\n\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\r\n\r\n\r\n\r\n\tvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t\tWireframeGeometry: WireframeGeometry,\r\n\t\tParametricGeometry: ParametricGeometry,\r\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\r\n\t\tTetrahedronGeometry: TetrahedronGeometry,\r\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\r\n\t\tOctahedronGeometry: OctahedronGeometry,\r\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\r\n\t\tIcosahedronGeometry: IcosahedronGeometry,\r\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\r\n\t\tDodecahedronGeometry: DodecahedronGeometry,\r\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\r\n\t\tPolyhedronGeometry: PolyhedronGeometry,\r\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\r\n\t\tTubeGeometry: TubeGeometry,\r\n\t\tTubeBufferGeometry: TubeBufferGeometry,\r\n\t\tTorusKnotGeometry: TorusKnotGeometry,\r\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\r\n\t\tTorusGeometry: TorusGeometry,\r\n\t\tTorusBufferGeometry: TorusBufferGeometry,\r\n\t\tTextGeometry: TextGeometry,\r\n\t\tTextBufferGeometry: TextBufferGeometry,\r\n\t\tSphereGeometry: SphereGeometry,\r\n\t\tSphereBufferGeometry: SphereBufferGeometry,\r\n\t\tRingGeometry: RingGeometry,\r\n\t\tRingBufferGeometry: RingBufferGeometry,\r\n\t\tPlaneGeometry: PlaneGeometry,\r\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\r\n\t\tLatheGeometry: LatheGeometry,\r\n\t\tLatheBufferGeometry: LatheBufferGeometry,\r\n\t\tShapeGeometry: ShapeGeometry,\r\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\r\n\t\tExtrudeGeometry: ExtrudeGeometry,\r\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\r\n\t\tEdgesGeometry: EdgesGeometry,\r\n\t\tConeGeometry: ConeGeometry,\r\n\t\tConeBufferGeometry: ConeBufferGeometry,\r\n\t\tCylinderGeometry: CylinderGeometry,\r\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\r\n\t\tCircleGeometry: CircleGeometry,\r\n\t\tCircleBufferGeometry: CircleBufferGeometry,\r\n\t\tBoxGeometry: BoxGeometry,\r\n\t\tBoxBufferGeometry: BoxBufferGeometry\r\n\t});\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <THREE.Color>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShadowMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShadowMaterial';\r\n\r\n\t\tthis.color = new Color( 0x000000 );\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tShadowMaterial.prototype = Object.create( Material.prototype );\r\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\r\n\r\n\tShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n\tShadowMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction RawShaderMaterial( parameters ) {\r\n\r\n\t\tShaderMaterial.call( this, parameters );\r\n\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\r\n\t}\r\n\r\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\r\n\r\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  roughness: <float>,\r\n\t *  metalness: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  roughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  metalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  envMapIntensity: <float>\r\n\t *\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshStandardMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 0.5;\r\n\t\tthis.metalness = 0.5;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.roughnessMap = null;\r\n\r\n\t\tthis.metalnessMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapIntensity = 1.0;\r\n\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\r\n\r\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  reflectivity: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhysicalMaterial( parameters ) {\r\n\r\n\t\tMeshStandardMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\t\tthis.clearCoat = 0.0;\r\n\t\tthis.clearCoatRoughness = 0.0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\r\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\r\n\r\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\r\n\t\tthis.clearCoat = source.clearCoat;\r\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhongMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\r\n\r\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author takahirox / http://github.com/takahirox\r\n\t *\r\n\t * parameters = {\r\n\t *  gradientMap: new THREE.Texture( <Image> )\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshToonMaterial( parameters ) {\r\n\r\n\t\tMeshPhongMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\r\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\r\n\r\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n\tMeshToonMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshNormalMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\r\n\r\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshLambertMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\r\n\r\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineDashedMaterial( parameters ) {\r\n\r\n\t\tLineBasicMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\r\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\r\n\r\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n\tLineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\r\n\tvar Materials = /*#__PURE__*/Object.freeze({\r\n\t\tShadowMaterial: ShadowMaterial,\r\n\t\tSpriteMaterial: SpriteMaterial,\r\n\t\tRawShaderMaterial: RawShaderMaterial,\r\n\t\tShaderMaterial: ShaderMaterial,\r\n\t\tPointsMaterial: PointsMaterial,\r\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\r\n\t\tMeshStandardMaterial: MeshStandardMaterial,\r\n\t\tMeshPhongMaterial: MeshPhongMaterial,\r\n\t\tMeshToonMaterial: MeshToonMaterial,\r\n\t\tMeshNormalMaterial: MeshNormalMaterial,\r\n\t\tMeshLambertMaterial: MeshLambertMaterial,\r\n\t\tMeshDepthMaterial: MeshDepthMaterial,\r\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\r\n\t\tMeshBasicMaterial: MeshBasicMaterial,\r\n\t\tLineDashedMaterial: LineDashedMaterial,\r\n\t\tLineBasicMaterial: LineBasicMaterial,\r\n\t\tMaterial: Material\r\n\t});\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar Cache = {\r\n\r\n\t\tenabled: false,\r\n\r\n\t\tfiles: {},\r\n\r\n\t\tadd: function ( key, file ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\t\tthis.files[ key ] = file;\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( key ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\t\treturn this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( key ) {\r\n\r\n\t\t\tdelete this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tclear: function () {\r\n\r\n\t\t\tthis.files = {};\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar isLoading = false;\r\n\t\tvar itemsLoaded = 0;\r\n\t\tvar itemsTotal = 0;\r\n\t\tvar urlModifier = undefined;\r\n\r\n\t\t// Refer to #5689 for the reason why we don't set .onStart\r\n\t\t// in the constructor\r\n\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\r\n\t\tthis.itemStart = function ( url ) {\r\n\r\n\t\t\titemsTotal ++;\r\n\r\n\t\t\tif ( isLoading === false ) {\r\n\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tisLoading = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemEnd = function ( url ) {\r\n\r\n\t\t\titemsLoaded ++;\r\n\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemError = function ( url ) {\r\n\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\t\tscope.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.resolveURL = function ( url ) {\r\n\r\n\t\t\tif ( urlModifier ) {\r\n\r\n\t\t\t\treturn urlModifier( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setURLModifier = function ( transform ) {\r\n\r\n\t\t\turlModifier = transform;\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar DefaultLoadingManager = new LoadingManager();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar loading = {};\r\n\r\n\tfunction FileLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FileLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check if request is duplicate\r\n\r\n\t\t\tif ( loading[ url ] !== undefined ) {\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check for data: URI\r\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\r\n\r\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\t\t\tif ( dataUriRegexResult ) {\r\n\r\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\r\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\r\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\r\n\r\n\t\t\t\tdata = window.decodeURIComponent( data );\r\n\r\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar response;\r\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\r\n\r\n\t\t\t\t\tswitch ( responseType ) {\r\n\r\n\t\t\t\t\t\tcase 'arraybuffer':\r\n\t\t\t\t\t\tcase 'blob':\r\n\r\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\r\n\r\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tresponse = view.buffer;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'document':\r\n\r\n\t\t\t\t\t\t\tvar parser = new DOMParser();\r\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'json':\r\n\r\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault: // 'text' or other\r\n\r\n\t\t\t\t\t\t\tresponse = data;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\twindow.setTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\twindow.setTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Initialise array for duplicate requests\r\n\r\n\t\t\t\tloading[ url ] = [];\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\t\trequest.open( 'GET', url, true );\r\n\r\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\t\tvar response = this.response;\r\n\r\n\t\t\t\t\tCache.add( url, response );\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\r\n\r\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\r\n\r\n\t\t\t\tfor ( var header in this.requestHeader ) {\r\n\r\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequest.send( null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn request;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetResponseType: function ( value ) {\r\n\r\n\t\t\tthis.responseType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetWithCredentials: function ( value ) {\r\n\r\n\t\t\tthis.withCredentials = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMimeType: function ( value ) {\r\n\r\n\t\t\tthis.mimeType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRequestHeader: function ( value ) {\r\n\r\n\t\t\tthis.requestHeader = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\r\n\tfunction CompressedTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( CompressedTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar images = [];\r\n\r\n\t\t\tvar texture = new CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\tvar loaded = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\r\n\tfunction DataTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( DataTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar texture = new DataTexture();\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( ImageLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\r\n\r\n\t\t\tfunction onImageLoad() {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tCache.add( url, this );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onImageError( event ) {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\r\n\t\t\timage.addEventListener( 'error', onImageError, false );\r\n\r\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\r\n\r\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\timage.src = url;\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction CubeTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( CubeTextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new CubeTexture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\t\tloaded ++;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, undefined, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction TextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( TextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new Texture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\r\n\r\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of curve methods:\r\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\r\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following curves inherit from THREE.Curve:\r\n\t *\r\n\t * -- 2D curves --\r\n\t * THREE.ArcCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.EllipseCurve\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.SplineCurve\r\n\t *\r\n\t * -- 3D curves --\r\n\t * THREE.CatmullRomCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath.\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\r\n\tfunction Curve() {\r\n\r\n\t\tthis.type = 'Curve';\r\n\r\n\t\tthis.arcLengthDivisions = 200;\r\n\r\n\t}\r\n\r\n\tObject.assign( Curve.prototype, {\r\n\r\n\t\t// Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\r\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\r\n\t\tgetPointAt: function ( u, optionalTarget ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getPoint( t, optionalTarget );\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPoint( t )\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPointAt( u )\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get total curve arc length\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lengths = this.getLengths();\r\n\t\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// Get list of cumulative segment lengths\r\n\r\n\t\tgetLengths: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\r\n\r\n\t\t\tif ( this.cacheArcLengths &&\r\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t\t! this.needsUpdate ) {\r\n\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.needsUpdate = false;\r\n\r\n\t\t\tvar cache = [];\r\n\t\t\tvar current, last = this.getPoint( 0 );\r\n\t\t\tvar p, sum = 0;\r\n\r\n\t\t\tcache.push( 0 );\r\n\r\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\t\tcurrent = this.getPoint( p / divisions );\r\n\t\t\t\tsum += current.distanceTo( last );\r\n\t\t\t\tcache.push( sum );\r\n\t\t\t\tlast = current;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\r\n\t\t},\r\n\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\t\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\t\tif ( distance ) {\r\n\r\n\t\t\t\ttargetArcLength = distance;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\t\twhile ( low <= high ) {\r\n\r\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// DONE\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti = high;\r\n\r\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\t\treturn i / ( il - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t\t// add that fractional amount to t\r\n\r\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t},\r\n\r\n\t\t// Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\r\n\t\tgetTangent: function ( t ) {\r\n\r\n\t\t\tvar delta = 0.0001;\r\n\t\t\tvar t1 = t - delta;\r\n\t\t\tvar t2 = t + delta;\r\n\r\n\t\t\t// Capping in case of danger\r\n\r\n\t\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\t\tvar pt1 = this.getPoint( t1 );\r\n\t\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\t\treturn vec.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tgetTangentAt: function ( u ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getTangent( t );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\r\n\r\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\tvar tangents = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar binormals = [];\r\n\r\n\t\t\tvar vec = new Vector3();\r\n\t\t\tvar mat = new Matrix4();\r\n\r\n\t\t\tvar i, u, theta;\r\n\r\n\t\t\t// compute the tangent vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tu = i / segments;\r\n\r\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\r\n\t\t\t\ttangents[ i ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\t\t\tnormals[ 0 ] = new Vector3();\r\n\t\t\tbinormals[ 0 ] = new Vector3();\r\n\t\t\tvar min = Number.MAX_VALUE;\r\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\r\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\t\tif ( tx <= min ) {\r\n\r\n\t\t\t\tmin = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ty <= min ) {\r\n\r\n\t\t\t\tmin = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tz <= min ) {\r\n\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\r\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvec.normalize();\r\n\r\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\t\t\tif ( closed === true ) {\r\n\r\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\t\ttheta /= segments;\r\n\r\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n\r\n\t\t\t\t\ttheta = - theta;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\t\t// twist a little...\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttangents: tangents,\r\n\t\t\t\tnormals: normals,\r\n\t\t\t\tbinormals: binormals\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Curve',\r\n\t\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'EllipseCurve';\r\n\r\n\t\tthis.aX = aX || 0;\r\n\t\tthis.aY = aY || 0;\r\n\r\n\t\tthis.xRadius = xRadius || 1;\r\n\t\tthis.yRadius = yRadius || 1;\r\n\r\n\t\tthis.aStartAngle = aStartAngle || 0;\r\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\r\n\r\n\t\tthis.aClockwise = aClockwise || false;\r\n\r\n\t\tthis.aRotation = aRotation || 0;\r\n\r\n\t}\r\n\r\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\r\n\tEllipseCurve.prototype.constructor = EllipseCurve;\r\n\r\n\tEllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar twoPi = Math.PI * 2;\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n\t\t// ensures that deltaAngle is 0 .. 2 PI\r\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n\t\tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n\t\t\tif ( samePoints ) {\r\n\r\n\t\t\t\tdeltaAngle = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n\t\t\tif ( deltaAngle === twoPi ) {\r\n\r\n\t\t\t\tdeltaAngle = - twoPi;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\t\tvar tx = x - this.aX;\r\n\t\t\tvar ty = y - this.aY;\r\n\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( x, y );\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.aX = source.aX;\r\n\t\tthis.aY = source.aY;\r\n\r\n\t\tthis.xRadius = source.xRadius;\r\n\t\tthis.yRadius = source.yRadius;\r\n\r\n\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\tthis.aEndAngle = source.aEndAngle;\r\n\r\n\t\tthis.aClockwise = source.aClockwise;\r\n\r\n\t\tthis.aRotation = source.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\tEllipseCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.aX = this.aX;\r\n\t\tdata.aY = this.aY;\r\n\r\n\t\tdata.xRadius = this.xRadius;\r\n\t\tdata.yRadius = this.yRadius;\r\n\r\n\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\tdata.aEndAngle = this.aEndAngle;\r\n\r\n\t\tdata.aClockwise = this.aClockwise;\r\n\r\n\t\tdata.aRotation = this.aRotation;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.aX = json.aX;\r\n\t\tthis.aY = json.aY;\r\n\r\n\t\tthis.xRadius = json.xRadius;\r\n\t\tthis.yRadius = json.yRadius;\r\n\r\n\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\tthis.aEndAngle = json.aEndAngle;\r\n\r\n\t\tthis.aClockwise = json.aClockwise;\r\n\r\n\t\tthis.aRotation = json.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\tthis.type = 'ArcCurve';\r\n\r\n\t}\r\n\r\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\r\n\tArcCurve.prototype.constructor = ArcCurve;\r\n\r\n\tArcCurve.prototype.isArcCurve = true;\r\n\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tfunction init( x0, x1, t0, t1 ) {\r\n\r\n\t\t\tc0 = x0;\r\n\t\t\tc1 = t0;\r\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n\r\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\t\tt1 *= dt1;\r\n\t\t\t\tt2 *= dt1;\r\n\r\n\t\t\t\tinit( x1, x2, t1, t2 );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcalc: function ( t ) {\r\n\r\n\t\t\t\tvar t2 = t * t;\r\n\t\t\t\tvar t3 = t2 * t;\r\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar tmp = new Vector3();\r\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\r\n\r\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CatmullRomCurve3';\r\n\r\n\t\tthis.points = points || [];\r\n\t\tthis.closed = closed || false;\r\n\t\tthis.curveType = curveType || 'centripetal';\r\n\t\tthis.tension = tension || 0.5;\r\n\r\n\t}\r\n\r\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\r\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\r\n\r\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar l = points.length;\r\n\r\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tif ( this.closed ) {\r\n\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n\r\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\tintPoint = l - 2;\r\n\t\t\tweight = 1;\r\n\r\n\t\t}\r\n\r\n\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate first point\r\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\tp0 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tp1 = points[ intPoint % l ];\r\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate last point\r\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\tp3 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n\r\n\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t// safety check for repeated points\r\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t} else if ( this.curveType === 'catmullrom' ) {\r\n\r\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n\r\n\t\t}\r\n\r\n\t\tpoint.set(\r\n\t\t\tpx.calc( weight ),\r\n\t\t\tpy.calc( weight ),\r\n\t\t\tpz.calc( weight )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = source.closed;\r\n\t\tthis.curveType = source.curveType;\r\n\t\tthis.tension = source.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\tdata.closed = this.closed;\r\n\t\tdata.curveType = this.curveType;\r\n\t\tdata.tension = this.tension;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = json.closed;\r\n\t\tthis.curveType = json.curveType;\r\n\t\tthis.tension = json.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Bezier Curves formulas obtained from\r\n\t * http://en.wikipedia.org/wiki/Bézier_curve\r\n\t */\r\n\r\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction QuadraticBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP1( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP2( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\r\n\r\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\t\tQuadraticBezierP2( t, p2 );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CubicBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP1( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP2( t, p ) {\r\n\r\n\t\treturn 3 * ( 1 - t ) * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP3( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\t\tCubicBezierP3( t, p3 );\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\t\tthis.v3 = v3 || new Vector2();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\r\n\r\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\t\tthis.v3 = v3 || new Vector3();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\r\n\r\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction LineCurve( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve';\r\n\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tLineCurve.prototype = Object.create( Curve.prototype );\r\n\tLineCurve.prototype.constructor = LineCurve;\r\n\r\n\tLineCurve.prototype.isLineCurve = true;\r\n\r\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\r\n\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\t\treturn tangent.normalize();\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction LineCurve3( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tLineCurve3.prototype = Object.create( Curve.prototype );\r\n\tLineCurve3.prototype.constructor = LineCurve3;\r\n\r\n\tLineCurve3.prototype.isLineCurve3 = true;\r\n\r\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\r\n\r\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\r\n\r\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'SplineCurve';\r\n\r\n\t\tthis.points = points || [];\r\n\r\n\t}\r\n\r\n\tSplineCurve.prototype = Object.create( Curve.prototype );\r\n\tSplineCurve.prototype.constructor = SplineCurve;\r\n\r\n\tSplineCurve.prototype.isSplineCurve = true;\r\n\r\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar p = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar p1 = points[ intPoint ];\r\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tpoint.set(\r\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\r\n\tvar Curves = /*#__PURE__*/Object.freeze({\r\n\t\tArcCurve: ArcCurve,\r\n\t\tCatmullRomCurve3: CatmullRomCurve3,\r\n\t\tCubicBezierCurve: CubicBezierCurve,\r\n\t\tCubicBezierCurve3: CubicBezierCurve3,\r\n\t\tEllipseCurve: EllipseCurve,\r\n\t\tLineCurve: LineCurve,\r\n\t\tLineCurve3: LineCurve3,\r\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\t\tSplineCurve: SplineCurve\r\n\t});\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\r\n\tfunction CurvePath() {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CurvePath';\r\n\r\n\t\tthis.curves = [];\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\r\n\t}\r\n\r\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\r\n\r\n\t\tconstructor: CurvePath,\r\n\r\n\t\tadd: function ( curve ) {\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t},\r\n\r\n\t\tclosePath: function () {\r\n\r\n\t\t\t// Add a line curve if start and end of lines are not connected\r\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// To get accurate point with reference to\r\n\t\t// entire path distance at time t,\r\n\t\t// following has to be done:\r\n\r\n\t\t// 1. Length of each sub path have to be known\r\n\t\t// 2. Locate and identify type of curve\r\n\t\t// 3. Get t for the curve\r\n\t\t// 4. Return curve.getPointAt(t')\r\n\r\n\t\tgetPoint: function ( t ) {\r\n\r\n\t\t\tvar d = t * this.getLength();\r\n\t\t\tvar curveLengths = this.getCurveLengths();\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\t// To think about boundaries points.\r\n\r\n\t\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\t\t\tvar segmentLength = curve.getLength();\r\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n\t\t\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t\t},\r\n\r\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t\t// getPoint() depends on getLength\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lens = this.getCurveLengths();\r\n\t\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// cacheLengths must be recalculated.\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.cacheLengths = null;\r\n\t\t\tthis.getCurveLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Compute lengths and cache them\r\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\t\tgetCurveLengths: function () {\r\n\r\n\t\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\t\treturn this.cacheLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get length of sub-curve\r\n\t\t\t// Push sums into cached array\r\n\r\n\t\t\tvar lengths = [], sums = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\t\tlengths.push( sums );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheLengths = lengths;\r\n\r\n\t\t\treturn lengths;\r\n\r\n\t\t},\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 40;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tdivisions = divisions || 12;\r\n\r\n\t\t\tvar points = [], last;\r\n\r\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n\t\t\t\tvar curve = curves[ i ];\r\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\r\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\r\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\r\n\t\t\t\t\t\t\t: divisions;\r\n\r\n\t\t\t\tvar pts = curve.getPoints( resolution );\r\n\r\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar point = pts[ j ];\r\n\r\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\t\tpoints.push( point );\r\n\t\t\t\t\tlast = point;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = source.curves[ i ];\r\n\r\n\t\t\t\tthis.curves.push( curve.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoClose = source.autoClose;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.autoClose = this.autoClose;\r\n\t\t\tdata.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\t\t\t\tdata.curves.push( curve.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.autoClose = json.autoClose;\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = json.curves[ i ];\r\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t **/\r\n\r\n\tfunction Path( points ) {\r\n\r\n\t\tCurvePath.call( this );\r\n\r\n\t\tthis.type = 'Path';\r\n\r\n\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\tif ( points ) {\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\r\n\r\n\t\tconstructor: Path,\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n\r\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tvar curve = new QuadraticBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCPx, aCPy ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tvar curve = new CubicBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\r\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n\t\t\tvar curve = new SplineCurve( npts );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t},\r\n\r\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t\tif ( this.curves.length > 0 ) {\r\n\r\n\t\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\r\n\r\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\t\tthis.currentPoint.copy( lastPoint );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurvePath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.currentPoint.copy( source.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\r\n\tfunction Shape( points ) {\r\n\r\n\t\tPath.call( this, points );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.type = 'Shape';\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t}\r\n\r\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\r\n\r\n\t\tconstructor: Shape,\r\n\r\n\t\tgetPointsHoles: function ( divisions ) {\r\n\r\n\t\t\tvar holesPts = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn holesPts;\r\n\r\n\t\t},\r\n\r\n\t\t// get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\t\textractPoints: function ( divisions ) {\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tPath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = source.holes[ i ];\r\n\r\n\t\t\t\tthis.holes.push( hole.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Path.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = this.holes[ i ];\r\n\t\t\t\tdata.holes.push( hole.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tPath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.uuid = json.uuid;\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = json.holes[ i ];\r\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Light( color, intensity ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\t\tthis.receiveShadow = undefined;\r\n\r\n\t}\r\n\r\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Light,\r\n\r\n\t\tisLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.color.copy( source.color );\r\n\t\t\tthis.intensity = source.intensity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.color = this.color.getHex();\r\n\t\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\r\n\r\n\t\tLight.call( this, skyColor, intensity );\r\n\r\n\t\tthis.type = 'HemisphereLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.groundColor = new Color( groundColor );\r\n\r\n\t}\r\n\r\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: HemisphereLight,\r\n\r\n\t\tisHemisphereLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LightShadow( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.radius = 1;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t}\r\n\r\n\tObject.assign( LightShadow.prototype, {\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.camera = source.camera.clone();\r\n\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\r\n\t\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\t\tdelete object.camera.matrix;\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction SpotLightShadow() {\r\n\r\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: SpotLightShadow,\r\n\r\n\t\tisSpotLightShadow: true,\r\n\r\n\t\tupdate: function ( light ) {\r\n\r\n\t\t\tvar camera = this.camera;\r\n\r\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\r\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t\tvar far = light.distance || camera.far;\r\n\r\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\t\tcamera.fov = fov;\r\n\t\t\t\tcamera.aspect = aspect;\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'SpotLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / Math.PI;\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new SpotLightShadow();\r\n\r\n\t}\r\n\r\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: SpotLight,\r\n\r\n\t\tisSpotLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.angle = source.angle;\r\n\t\t\tthis.penumbra = source.penumbra;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction PointLight( color, intensity, distance, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'PointLight';\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: PointLight,\r\n\r\n\t\tisPointLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectionalLightShadow( ) {\r\n\r\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLightShadow\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DirectionalLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'DirectionalLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.shadow = new DirectionalLightShadow();\r\n\r\n\t}\r\n\r\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLight,\r\n\r\n\t\tisDirectionalLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AmbientLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'AmbientLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t}\r\n\r\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: AmbientLight,\r\n\r\n\t\tisAmbientLight: true\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\tfunction RectAreaLight( color, intensity, width, height ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'RectAreaLight';\r\n\r\n\t\tthis.width = ( width !== undefined ) ? width : 10;\r\n\t\tthis.height = ( height !== undefined ) ? height : 10;\r\n\r\n\t}\r\n\r\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: RectAreaLight,\r\n\r\n\t\tisRectAreaLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.width = this.width;\r\n\t\t\tdata.object.height = this.height;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tvar AnimationUtils = {\r\n\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function ( array, from, to ) {\r\n\r\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array.slice( from, to );\r\n\r\n\t\t},\r\n\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function ( array, type, forceClone ) {\r\n\r\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t\t},\r\n\r\n\t\tisTypedArray: function ( object ) {\r\n\r\n\t\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t\t},\r\n\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function ( times ) {\r\n\r\n\t\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar n = times.length;\r\n\t\t\tvar result = new Array( n );\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\t\tresult.sort( compareTime );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function ( values, stride, order ) {\r\n\r\n\t\t\tvar nValues = values.length;\r\n\t\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\t\tvar value = key[ valuePropertyName ];\r\n\t\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else if ( value.toArray !== undefined ) {\r\n\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// otherwise push as-is\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t}\r\n\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\tevaluate: function ( t ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\t\tt1 = pp[ i1 ],\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\tvalidate_interval: {\r\n\r\n\t\t\t\tseek: {\r\n\r\n\t\t\t\t\tvar right;\r\n\r\n\t\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\r\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t\t// binary search\r\n\r\n\t\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // seek\r\n\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t\t} // validate_interval\r\n\r\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t\t},\r\n\r\n\t\tsettings: null, // optional, subclass-specific settings structure\r\n\t\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t\t// --- Protected interface\r\n\r\n\t\tDefaultSettings_: {},\r\n\r\n\t\tgetSettings_: function () {\r\n\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t\t},\r\n\r\n\t\tcopySampleValue_: function ( index ) {\r\n\r\n\t\t\t// copies a sample value to the result buffer\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = index * stride;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// Template methods for derived classes:\r\n\r\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\t\tthrow new Error( 'call to abstract method' );\r\n\t\t\t// implementations shall return this.resultBuffer\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\r\n\r\n\t\t\t// empty\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\t//( 0, t, t0 ), returns this.resultBuffer\r\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t\tthis._weightPrev = - 0;\r\n\t\tthis._offsetPrev = - 0;\r\n\t\tthis._weightNext = - 0;\r\n\t\tthis._offsetNext = - 0;\r\n\r\n\t}\r\n\r\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: CubicInterpolant,\r\n\r\n\t\tDefaultSettings_: {\r\n\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\tiPrev = i1 - 2,\r\n\t\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\t\tstride = this.valueSize;\r\n\r\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t\t},\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tpp = p * p,\r\n\t\t\t\tppp = pp * p;\r\n\r\n\t\t\t// evaluate polynomials\r\n\r\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\t\tvar sN = wN * ppp - wN * pp;\r\n\r\n\t\t\t// combine data linearly\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: LinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: DiscreteInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\r\n\r\n\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A timed sequence of keyframes for a specific property.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\t}\r\n\r\n\t// Static methods\r\n\r\n\tObject.assign( KeyframeTrack, {\r\n\r\n\t\t// Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\r\n\t\ttoJSON: function ( track ) {\r\n\r\n\t\t\tvar trackType = track.constructor;\r\n\r\n\t\t\tvar json;\r\n\r\n\t\t\t// derived classes can define a static toJSON method\r\n\t\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( KeyframeTrack.prototype, {\r\n\r\n\t\tconstructor: KeyframeTrack,\r\n\r\n\t\tTimeBufferType: Float32Array,\r\n\r\n\t\tValueBufferType: Float32Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\r\n\r\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\r\n\r\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tsetInterpolation: function ( interpolation ) {\r\n\r\n\t\t\tvar factoryMethod;\r\n\r\n\t\t\tswitch ( interpolation ) {\r\n\r\n\t\t\t\tcase InterpolateDiscrete:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateLinear:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateSmooth:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInterpolation: function () {\r\n\r\n\t\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\t\treturn InterpolateSmooth;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetValueSize: function () {\r\n\r\n\t\t\treturn this.values.length / this.times.length;\r\n\r\n\t\t},\r\n\r\n\t\t// move all keyframes either forwards or backwards in time\r\n\t\tshift: function ( timeOffset ) {\r\n\r\n\t\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t\tscale: function ( timeScale ) {\r\n\r\n\t\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t\ttrim: function ( startTime, endTime ) {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tnKeys = times.length,\r\n\t\t\t\tfrom = 0,\r\n\t\t\t\tto = nKeys - 1;\r\n\r\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\r\n\r\n\t\t\t\t++ from;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\r\n\r\n\t\t\t\t-- to;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\t\tif ( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\r\n\r\n\t\t\t\tvar stride = this.getValueSize();\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tvar valueSize = this.getValueSize();\r\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\r\n\t\t\t\tnKeys = times.length;\r\n\r\n\t\t\tif ( nKeys === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar prevTime = null;\r\n\r\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevTime = currTime;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( values !== undefined ) {\r\n\r\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\t// removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\t\toptimize: function () {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\t\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n\t\t\t\twriteIndex = 1,\r\n\t\t\t\tlastIndex = times.length - 1;\r\n\r\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\r\n\r\n\t\t\t\tvar keep = false;\r\n\r\n\t\t\t\tvar time = times[ i ];\r\n\t\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n\t\t\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in-place compaction\r\n\r\n\t\t\t\tif ( keep ) {\r\n\r\n\t\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// flush last keyframe (compaction looks ahead)\r\n\r\n\t\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of Boolean keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction BooleanKeyframeTrack( name, times, values ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values );\r\n\r\n\t}\r\n\r\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: BooleanKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'bool',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t\t// Note: Actually this track could have a optimized / compressed\r\n\t\t// representation of a single value and a custom interpolant that\r\n\t\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of keyframe values that represent color.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: ColorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'color'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t\t// Note: Very basic implementation and nothing special yet.\r\n\t\t// However, this is the place for color space parameterization.\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of numeric keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: NumberKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'number'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: QuaternionLinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset = i1 * stride,\r\n\r\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of quaternion keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: QuaternionKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'quaternion',\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Strings\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: StringKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'string',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A Track of vectored keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: VectorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'vector'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Reusable set of Tracks that represent an animation.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tfunction AnimationClip( name, duration, tracks ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\r\n\t\t\tthis.resetDuration();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTrackTypeForValueTypeName( typeName ) {\r\n\r\n\t\tswitch ( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase 'scalar':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'float':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'integer':\r\n\r\n\t\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\tcase 'vector2':\r\n\t\t\tcase 'vector3':\r\n\t\t\tcase 'vector4':\r\n\r\n\t\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\t\tcase 'color':\r\n\r\n\t\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\t\tcase 'quaternion':\r\n\r\n\t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'boolean':\r\n\r\n\t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\t\tcase 'string':\r\n\r\n\t\t\t\treturn StringKeyframeTrack;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n\r\n\t}\r\n\r\n\tfunction parseKeyframeTrack( json ) {\r\n\r\n\t\tif ( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume a constructor compatible with the base\r\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationClip, {\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( clip ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\t\tvar json = {\r\n\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks,\r\n\t\t\t\t'uuid': clip.uuid\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t},\r\n\r\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\r\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push(\r\n\t\t\t\t\tnew NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( name, - 1, tracks );\r\n\r\n\t\t},\r\n\r\n\t\tfindByName: function ( objectOrClipArray, name ) {\r\n\r\n\t\t\tvar clipArray = objectOrClipArray;\r\n\r\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\t\tvar o = objectOrClipArray;\r\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\r\n\r\n\t\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t\t// sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clips = [];\r\n\r\n\t\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn clips;\r\n\r\n\t\t},\r\n\r\n\t\t// parse the animation.hierarchy format\r\n\t\tparseAnimation: function ( animation, bones ) {\r\n\r\n\t\t\tif ( ! animation ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tvar clipName = animation.name || 'default';\r\n\t\t\t// automatic length determination in AnimationClip.\r\n\t\t\tvar duration = animation.length || - 1;\r\n\t\t\tvar fps = animation.fps || 30;\r\n\r\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t\t// skip empty tracks\r\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t\t// process morph targets\r\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\r\n\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tvar morphTargetNames = {};\r\n\r\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\t\tvar times = [];\r\n\t\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\r\n\r\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\r\n\r\n\t\t\treturn clip;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( AnimationClip.prototype, {\r\n\r\n\t\tresetDuration: function () {\r\n\r\n\t\t\tvar tracks = this.tracks, duration = 0;\r\n\r\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.duration = duration;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttrim: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\toptimize: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction MaterialLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tObject.assign( MaterialLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetTextures: function ( value ) {\r\n\r\n\t\t\tthis.textures = value;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar textures = this.textures;\r\n\r\n\t\t\tfunction getTexture( name ) {\r\n\r\n\t\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new Materials[ json.type ]();\r\n\r\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\r\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\r\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\r\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\r\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\t\t// Shader Material\r\n\r\n\t\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in json.uniforms ) {\r\n\r\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\t\t// Deprecated\r\n\r\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\r\n\t\t\t// for PointsMaterial\r\n\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t\t// maps\r\n\r\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\r\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\r\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferGeometryLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( BufferGeometryLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\tvar index = json.data.index;\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = json.data.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\t\tvar center = new Vector3();\r\n\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TYPED_ARRAYS = {\r\n\t\tInt8Array: Int8Array,\r\n\t\tUint8Array: Uint8Array,\r\n\t\t// Workaround for IE11 pre KB2929437. See #11440\r\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\r\n\t\tInt16Array: Int16Array,\r\n\t\tUint16Array: Uint16Array,\r\n\t\tInt32Array: Int32Array,\r\n\t\tUint32Array: Uint32Array,\r\n\t\tFloat32Array: Float32Array,\r\n\t\tFloat64Array: Float64Array\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Loader() {}\r\n\r\n\tLoader.Handlers = {\r\n\r\n\t\thandlers: [],\r\n\r\n\t\tadd: function ( regex, loader ) {\r\n\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( file ) {\r\n\r\n\t\t\tvar handlers = this.handlers;\r\n\r\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tvar regex = handlers[ i ];\r\n\t\t\t\tvar loader = handlers[ i + 1 ];\r\n\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\t\treturn loader;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tonLoadStart: function () {},\r\n\r\n\t\tonLoadProgress: function () {},\r\n\r\n\t\tonLoadComplete: function () {},\r\n\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tcreateMaterial: ( function () {\r\n\r\n\t\t\tvar BlendingMode = {\r\n\t\t\t\tNoBlending: NoBlending,\r\n\t\t\t\tNormalBlending: NormalBlending,\r\n\t\t\t\tAdditiveBlending: AdditiveBlending,\r\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\r\n\t\t\t\tMultiplyBlending: MultiplyBlending,\r\n\t\t\t\tCustomBlending: CustomBlending\r\n\t\t\t};\r\n\r\n\t\t\tvar color = new Color();\r\n\t\t\tvar textureLoader = new TextureLoader();\r\n\t\t\tvar materialLoader = new MaterialLoader();\r\n\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\t\t// convert from old material format\r\n\r\n\t\t\t\tvar textures = {};\r\n\r\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar uuid = _Math.generateUUID();\r\n\r\n\t\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\t\treturn uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar json = {\r\n\t\t\t\t\tuuid: _Math.generateUUID(),\r\n\t\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissive':\r\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\r\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\r\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\r\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\t\tjson.normalScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalness':\r\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\r\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\r\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\r\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughness':\r\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\r\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\r\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\r\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\t\tjson.side = BackSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\t\tjson.side = DoubleSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\r\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Don McCurdy / https://www.donmccurdy.com\r\n\t */\r\n\r\n\tvar LoaderUtils = {\r\n\r\n\t\tdecodeText: function ( array ) {\r\n\r\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\t\tvar s = '';\r\n\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// Implicitly assumes little-endian.\r\n\t\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Merges multi-byte utf-8 characters.\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t},\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tvar index = url.lastIndexOf( '/' );\r\n\r\n\t\t\tif ( index === - 1 ) return './';\r\n\r\n\t\t\treturn url.substr( 0, index + 1 );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction JSONLoader( manager ) {\r\n\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\r\n\t\t}\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\tthis.withCredentials = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( JSONLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\t\tvar type = metadata.type;\r\n\r\n\t\t\t\t\tif ( type !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetTexturePath: function ( value ) {\r\n\r\n\t\t\tthis.texturePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: ( function () {\r\n\r\n\t\t\tfunction parseModel( json, geometry ) {\r\n\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar i, j, fi,\r\n\r\n\t\t\t\t\toffset, zLength,\r\n\r\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tisQuad,\r\n\t\t\t\t\thasMaterial,\r\n\t\t\t\t\thasFaceVertexUv,\r\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\t\t\tfaces = json.faces,\r\n\t\t\t\t\tvertices = json.vertices,\r\n\t\t\t\t\tnormals = json.normals,\r\n\t\t\t\t\tcolors = json.colors,\r\n\r\n\t\t\t\t\tscale = json.scale,\r\n\r\n\t\t\t\t\tnUvLayers = 0;\r\n\r\n\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\t\tvertex = new Vector3();\r\n\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\r\n\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\t\tfaceA = new Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\t\tfaceB = new Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\t\tnormal = new Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tface = new Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\t\tnormal = new Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseSkin( json, geometry ) {\r\n\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseMorphing( json, geometry ) {\r\n\r\n\t\t\t\tvar scale = json.scale;\r\n\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\t\tvar vertex = new Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction parseAnimations( json, geometry ) {\r\n\r\n\t\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\t\tvar animations = [];\r\n\r\n\t\t\t\tif ( json.animation !== undefined ) {\r\n\r\n\t\t\t\t\tanimations.push( json.animation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.animations !== undefined ) {\r\n\r\n\t\t\t\t\tif ( json.animations.length ) {\r\n\r\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tanimations.push( json.animations );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse implicit morph animations\r\n\t\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function parse( json, texturePath ) {\r\n\r\n\t\t\t\tif ( json.data !== undefined ) {\r\n\r\n\t\t\t\t\t// Geometry 4.0 spec\r\n\t\t\t\t\tjson = json.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.scale !== undefined ) {\r\n\r\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tjson.scale = 1.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar geometry = new Geometry();\r\n\r\n\t\t\t\tparseModel( json, geometry );\r\n\t\t\t\tparseSkin( json, geometry );\r\n\t\t\t\tparseMorphing( json, geometry );\r\n\t\t\t\tparseAnimations( json, geometry );\r\n\r\n\t\t\t\tgeometry.computeFaceNormals();\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\t\t\treturn { geometry: geometry };\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ObjectLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\r\n\t}\r\n\r\n\tObject.assign( ObjectLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json = null;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\r\n\r\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parse( json, onLoad );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetTexturePath: function ( value ) {\r\n\r\n\t\t\tthis.texturePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json, onLoad ) {\r\n\r\n\t\t\tvar shapes = this.parseShape( json.shapes );\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar textures = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\t\tif ( json.animations ) {\r\n\r\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t},\r\n\r\n\t\tparseShape: function ( json ) {\r\n\r\n\t\t\tvar shapes = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\r\n\r\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t},\r\n\r\n\t\tparseGeometries: function ( json, shapes ) {\r\n\r\n\t\t\tvar geometries = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar geometryLoader = new JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ConeGeometry':\r\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'LatheGeometry':\r\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\r\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.vertices,\r\n\t\t\t\t\t\t\t\tdata.indices,\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.details\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ShapeGeometry':\r\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.curveSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\r\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\r\n\r\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.options\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\r\n\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t},\r\n\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\t\tvar materials = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar loader = new MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\r\n\r\n\t\t\t\t\t\t// Deprecated\r\n\r\n\t\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t},\r\n\r\n\t\tparseAnimations: function ( json ) {\r\n\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tvar clip = AnimationClip.parse( data );\r\n\r\n\t\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\r\n\r\n\t\t\t\tanimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\r\n\t\t},\r\n\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\r\n\t\t\tfunction loadImage( url ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, undefined, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\t\tvar manager = new LoadingManager( onLoad );\r\n\r\n\t\t\t\tvar loader = new ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar url = image.url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\r\n\r\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\r\n\t\t},\r\n\r\n\t\tparseTextures: function ( json, images ) {\r\n\r\n\t\t\tfunction parseConstant( value, type ) {\r\n\r\n\t\t\t\tif ( typeof value === 'number' ) return value;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\t\treturn type[ value ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\r\n\r\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n\r\n\t\t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\r\n\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures;\r\n\r\n\t\t},\r\n\r\n\t\tparseObject: function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( Array.isArray( name ) ) {\r\n\r\n\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar uuid = name[ i ];\r\n\r\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\r\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SkinnedMesh':\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineLoop':\r\n\r\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineSegments':\r\n\r\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tobject.matrix.fromArray( data.matrix );\r\n\r\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.shadow ) {\r\n\r\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tvar children = data.children;\r\n\r\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TEXTURE_MAPPING = {\r\n\t\tUVMapping: UVMapping,\r\n\t\tCubeReflectionMapping: CubeReflectionMapping,\r\n\t\tCubeRefractionMapping: CubeRefractionMapping,\r\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\r\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\r\n\t};\r\n\r\n\tvar TEXTURE_WRAPPING = {\r\n\t\tRepeatWrapping: RepeatWrapping,\r\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n\t};\r\n\r\n\tvar TEXTURE_FILTER = {\r\n\t\tNearestFilter: NearestFilter,\r\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\r\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\r\n\t\tLinearFilter: LinearFilter,\r\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\r\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\r\n\t};\r\n\r\n\t/**\r\n\t * @author thespite / http://clicktorelease.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageBitmapLoader( manager ) {\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n\t\tthis.options = undefined;\r\n\r\n\t}\r\n\r\n\tImageBitmapLoader.prototype = {\r\n\r\n\t\tconstructor: ImageBitmapLoader,\r\n\r\n\t\tsetOptions: function setOptions( options ) {\r\n\r\n\t\t\tthis.options = options;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfetch( url ).then( function ( res ) {\r\n\r\n\t\t\t\treturn res.blob();\r\n\r\n\t\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\t\treturn createImageBitmap( blob, scope.options );\r\n\r\n\t\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( /* value */ ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\r\n\t **/\r\n\r\n\tfunction ShapePath() {\r\n\r\n\t\tthis.type = 'ShapePath';\r\n\r\n\t\tthis.color = new Color();\r\n\r\n\t\tthis.subPaths = [];\r\n\t\tthis.currentPath = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( ShapePath.prototype, {\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath = new Path();\r\n\t\t\tthis.subPaths.push( this.currentPath );\r\n\t\t\tthis.currentPath.moveTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath.lineTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts ) {\r\n\r\n\t\t\tthis.currentPath.splineThru( pts );\r\n\r\n\t\t},\r\n\r\n\t\ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\t\tvar shapes = [];\r\n\r\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\t\tvar tmpShape = new Shape();\r\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\t\tvar inside = false;\r\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\r\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t// not parallel\r\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tinside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\r\n\r\n\t\t\tvar subPaths = this.subPaths;\r\n\t\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\t\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\t\ttmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\t\tvar betterShapeHoles = [];\r\n\t\t\tvar newShapes = [];\r\n\t\t\tvar newShapeHoles = [];\r\n\t\t\tvar mainIdx = 0;\r\n\t\t\tvar tmpPoints;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\t\tif ( solid ) {\r\n\r\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\t\tvar ambiguous = false;\r\n\t\t\t\tvar toChange = [];\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tmpHoles;\r\n\r\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction Font( data ) {\r\n\r\n\t\tthis.type = 'Font';\r\n\r\n\t\tthis.data = data;\r\n\r\n\t}\r\n\r\n\tObject.assign( Font.prototype, {\r\n\r\n\t\tisFont: true,\r\n\r\n\t\tgenerateShapes: function ( text, size ) {\r\n\r\n\t\t\tif ( size === undefined ) size = 100;\r\n\r\n\t\t\tvar shapes = [];\r\n\t\t\tvar paths = createPaths( text, size, this.data );\r\n\r\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction createPaths( text, size, data ) {\r\n\r\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\r\n\t\tvar scale = size / data.resolution;\r\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\r\n\r\n\t\tvar paths = [];\r\n\r\n\t\tvar offsetX = 0, offsetY = 0;\r\n\r\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\tvar char = chars[ i ];\r\n\r\n\t\t\tif ( char === '\\n' ) {\r\n\r\n\t\t\t\toffsetX = 0;\r\n\t\t\t\toffsetY -= line_height;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\r\n\t\t\t\toffsetX += ret.offsetX;\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn paths;\r\n\r\n\t}\r\n\r\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\r\n\r\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tvar path = new ShapePath();\r\n\r\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn { offsetX: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction FontLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FontLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar font = scope.parse( json );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( font );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\treturn new Font( json );\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar context;\r\n\r\n\tvar AudioContext = {\r\n\r\n\t\tgetContext: function () {\r\n\r\n\t\t\tif ( context === undefined ) {\r\n\r\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\r\n\t\t},\r\n\r\n\t\tsetContext: function ( value ) {\r\n\r\n\t\t\tcontext = value;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction AudioLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\r\n\r\n\t\t\t\tvar context = AudioContext.getContext();\r\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n\r\n\t\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction StereoCamera() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( StereoCamera.prototype, {\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\r\n\r\n\t\t\tvar eyeRight = new Matrix4();\r\n\t\t\tvar eyeLeft = new Matrix4();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\r\n\r\n\t\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t\tinstance = this;\r\n\t\t\t\t\tfocus = camera.focus;\r\n\t\t\t\t\tfov = camera.fov;\r\n\t\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\t\tnear = camera.near;\r\n\t\t\t\t\tfar = camera.far;\r\n\t\t\t\t\tzoom = camera.zoom;\r\n\r\n\t\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\t\teyeSep = this.eyeSep / 2;\r\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\r\n\t\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t\t// for left eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t\t// for right eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction CubeCamera( near, far, cubeResolution ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\tvar fov = 90, aspect = 1;\r\n\r\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\r\n\r\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\r\n\r\n\t\tthis.update = function ( renderer, scene ) {\r\n\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderTarget.activeCubeFace = i;\r\n\t\t\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\r\n\tCubeCamera.prototype.constructor = CubeCamera;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioListener() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'AudioListener';\r\n\r\n\t\tthis.context = AudioContext.getContext();\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\r\n\t\tthis.filter = null;\r\n\r\n\t}\r\n\r\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: AudioListener,\r\n\r\n\t\tgetInput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tremoveFilter: function ( ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\t\tthis.filter = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.filter;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( value ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.gain.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMasterVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetMasterVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tvar listener = this.context.listener;\r\n\t\t\t\tvar up = this.up;\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tif ( listener.positionX ) {\r\n\r\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\r\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\r\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\r\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction Audio( listener ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Audio';\r\n\r\n\t\tthis.context = listener.context;\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\r\n\t\tthis.autoplay = false;\r\n\r\n\t\tthis.buffer = null;\r\n\t\tthis.loop = false;\r\n\t\tthis.startTime = 0;\r\n\t\tthis.offset = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.sourceType = 'empty';\r\n\r\n\t\tthis.filters = [];\r\n\r\n\t}\r\n\r\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Audio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tsetNodeSource: function ( audioNode ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'audioNode';\r\n\t\t\tthis.source = audioNode;\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMediaElementSource: function ( mediaElement ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaNode';\r\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetBuffer: function ( audioBuffer ) {\r\n\r\n\t\t\tthis.buffer = audioBuffer;\r\n\t\t\tthis.sourceType = 'buffer';\r\n\r\n\t\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar source = this.context.createBufferSource();\r\n\r\n\t\t\tsource.buffer = this.buffer;\r\n\t\t\tsource.loop = this.loop;\r\n\t\t\tsource.onended = this.onEnded.bind( this );\r\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\r\n\t\t\tthis.startTime = this.context.currentTime;\r\n\t\t\tsource.start( this.startTime, this.offset );\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\tthis.source = source;\r\n\r\n\t\t\treturn this.connect();\r\n\r\n\t\t},\r\n\r\n\t\tpause: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis.source.onended = null;\r\n\t\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\r\n\t\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\t\t\tthis.offset = 0;\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdisconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilters: function () {\r\n\r\n\t\t\treturn this.filters;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilters: function ( value ) {\r\n\r\n\t\t\tif ( ! value ) value = [];\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.filters = value;\r\n\t\t\t\tthis.connect();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.filters = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( filter ) {\r\n\r\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t\t},\r\n\r\n\t\tsetPlaybackRate: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.playbackRate = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetPlaybackRate: function () {\r\n\r\n\t\t\treturn this.playbackRate;\r\n\r\n\t\t},\r\n\r\n\t\tonEnded: function () {\r\n\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetLoop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.loop;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.loop = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.loop = this.loop;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PositionalAudio( listener ) {\r\n\r\n\t\tAudio.call( this, listener );\r\n\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\r\n\r\n\t\tconstructor: PositionalAudio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.panner;\r\n\r\n\t\t},\r\n\r\n\t\tgetRefDistance: function () {\r\n\r\n\t\t\treturn this.panner.refDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetRefDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.refDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetRolloffFactor: function () {\r\n\r\n\t\t\treturn this.panner.rolloffFactor;\r\n\r\n\t\t},\r\n\r\n\t\tsetRolloffFactor: function ( value ) {\r\n\r\n\t\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetDistanceModel: function () {\r\n\r\n\t\t\treturn this.panner.distanceModel;\r\n\r\n\t\t},\r\n\r\n\t\tsetDistanceModel: function ( value ) {\r\n\r\n\t\t\tthis.panner.distanceModel = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxDistance: function () {\r\n\r\n\t\t\treturn this.panner.maxDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetMaxDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.maxDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n\r\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tvar panner = this.panner;\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\r\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioAnalyser( audio, fftSize ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioAnalyser.prototype, {\r\n\r\n\t\tgetFrequencyData: function () {\r\n\r\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\t\treturn this.data;\r\n\r\n\t\t},\r\n\r\n\t\tgetAverageFrequency: function () {\r\n\r\n\t\t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tvalue += data[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value / data.length;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Buffered scene graph property that allows weighted accumulation.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\r\n\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\r\n\t\tvar bufferType = Float64Array,\r\n\t\t\tmixFunction;\r\n\r\n\t\tswitch ( typeName ) {\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\t\t\tbufferType = Array;\r\n\t\t\t\tmixFunction = this._select;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t\t}\r\n\r\n\t\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyMixer.prototype, {\r\n\r\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\t\taccumulate: function ( accuIndex, weight ) {\r\n\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentWeight = weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tvar mix = weight / currentWeight;\r\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\t\tapply: function ( accuIndex ) {\r\n\r\n\t\t\tvar stride = this.valueSize,\r\n\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\t\tbinding = this.binding;\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remember the state of the bound property and copy it to both accus\r\n\t\tsaveOriginalState: function () {\r\n\r\n\t\t\tvar binding = this.binding;\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\t\trestoreOriginalState: function () {\r\n\r\n\t\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// mix functions\r\n\r\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\r\n\r\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t\t},\r\n\r\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tvar s = 1 - t;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A reference to a real property in the scene graph.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\t// Characters [].:/ are reserved for track binding syntax.\r\n\tvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\r\n\r\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n\t}\r\n\r\n\tObject.assign( Composite.prototype, {\r\n\r\n\t\tgetValue: function ( array, offset ) {\r\n\r\n\t\t\tthis.bind(); // bind all binding\r\n\r\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t\t// and only call .getValue on the first\r\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function ( array, offset ) {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].bind();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\r\n\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\t\tthis.rootNode = rootNode;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyBinding, {\r\n\r\n\t\tComposite: Composite,\r\n\r\n\t\tcreate: function ( root, path, parsedPath ) {\r\n\r\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n\r\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t\t * node names, to ensure compatibility with parseTrackName().\r\n\t\t *\r\n\t\t * @param  {string} name Node name to be sanitized.\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tsanitizeNodeName: ( function () {\r\n\r\n\t\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\r\n\r\n\t\t\treturn function sanitizeNodeName( name ) {\r\n\r\n\t\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tparseTrackName: function () {\r\n\r\n\t\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n\t\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n\t\t\t// instead, we exclude reserved characters and match everything else.\r\n\t\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\r\n\t\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n\r\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n\t\t\t// be matched to parse the rest of the track name.\r\n\t\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\t\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\r\n\r\n\t\t\t// Object on target node, and accessor. May not contain reserved\r\n\t\t\t// characters. Accessor may contain any character except closing bracket.\r\n\t\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Property and accessor. May not contain reserved characters. Accessor may\r\n\t\t\t// contain any non-bracket characters.\r\n\t\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\tvar trackRe = new RegExp( ''\r\n\t\t\t\t+ '^'\r\n\t\t\t\t+ directoryRe\r\n\t\t\t\t+ nodeRe\r\n\t\t\t\t+ objectRe\r\n\t\t\t\t+ propertyRe\r\n\t\t\t\t+ '$'\r\n\t\t\t);\r\n\r\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\r\n\r\n\t\t\treturn function parseTrackName( trackName ) {\r\n\r\n\t\t\t\tvar matches = trackRe.exec( trackName );\r\n\r\n\t\t\t\tif ( ! matches ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar results = {\r\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t\t\tnodeName: matches[ 2 ],\r\n\t\t\t\t\tobjectName: matches[ 3 ],\r\n\t\t\t\t\tobjectIndex: matches[ 4 ],\r\n\t\t\t\t\tpropertyName: matches[ 5 ], // required\r\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n\r\n\t\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\r\n\r\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\r\n\r\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\r\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t\t\t// include '.' characters).\r\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\t\t\tresults.objectName = objectName;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfindNode: function ( root, nodeName ) {\r\n\r\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\t\t\treturn root;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into skeleton bones.\r\n\t\t\tif ( root.skeleton ) {\r\n\r\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\r\n\r\n\t\t\t\tif ( bone !== undefined ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into node subtree.\r\n\t\t\tif ( root.children ) {\r\n\r\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar childNode = children[ i ];\r\n\r\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\t\t\tif ( result ) return result;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\t\t\tif ( subTreeNode ) {\r\n\r\n\t\t\t\t\treturn subTreeNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t\t// these are used to \"bind\" a nonexistent property\r\n\t\t_getValue_unavailable: function () {},\r\n\t\t_setValue_unavailable: function () {},\r\n\r\n\t\tBindingType: {\r\n\t\t\tDirect: 0,\r\n\t\t\tEntireArray: 1,\r\n\t\t\tArrayElement: 2,\r\n\t\t\tHasFromToArray: 3\r\n\t\t},\r\n\r\n\t\tVersioning: {\r\n\t\t\tNone: 0,\r\n\t\t\tNeedsUpdate: 1,\r\n\t\t\tMatrixWorldNeedsUpdate: 2\r\n\t\t},\r\n\r\n\t\tGetterByBindingType: [\r\n\r\n\t\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t],\r\n\r\n\t\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t\t[\r\n\t\t\t\t// Direct\r\n\r\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// EntireArray\r\n\r\n\t\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// ArrayElement\r\n\r\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// HasToFromArray\r\n\r\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t]\r\n\r\n\t\t],\r\n\r\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t\t// prototype version of these methods with one that represents\r\n\t\t\t// the bound state. When the property is not found, the methods\r\n\t\t\t// become no-ops.\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t\t},\r\n\r\n\t\t// create getter / setter pair for a property in the scene graph\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar targetObject = this.node,\r\n\t\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\t\tthis.node = targetObject;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set fail state so we can just 'return' on error\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n\t\t\t// ensure there is a value node\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( objectName ) {\r\n\r\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// resolve property\r\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\t\tif ( nodeProperty === undefined ) {\r\n\r\n\t\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine versioning scheme\r\n\t\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine how the property gets bound\r\n\t\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\t\tif ( propertyIndex !== undefined ) {\r\n\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\r\n\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select getter / setter\r\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tthis.node = null;\r\n\r\n\t\t\t// back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( PropertyBinding.prototype, {\r\n\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\r\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t * \t-\tInstead pass this object as 'root'.\r\n\t *\r\n\t * \t-\tYou can also add and remove objects later when the mixer\r\n\t * \t\tis running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *  \tObjects of this class appear as one object to the mixer,\r\n\t *  \tso cache control of the individual objects must be done\r\n\t *  \ton the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t * \t- \tThe animated properties must be compatible among the\r\n\t * \t\tall objects in the group.\r\n\t *\r\n\t *  -\tA single property can either be controlled through a\r\n\t *  \ttarget group or directly, but not both.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationObjectGroup() {\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\tvar indices = {};\r\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t\t}\r\n\r\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._objects.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget bindingsPerObject() {\r\n\r\n\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationObjectGroup.prototype, {\r\n\r\n\t\tisAnimationObjectGroup: true,\r\n\r\n\t\tadd: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tpaths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length,\r\n\t\t\t\tknownObject = undefined;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\t\tindex = nObjects ++;\r\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\tknownObject = objects[ index ];\r\n\r\n\t\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// remove & forget\r\n\t\tuncache: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} // cached or active\r\n\r\n\t\t\t\t} // if object is known\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\t\tsubscribe_: function ( path, parsedPath ) {\r\n\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ],\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tobjects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\t\tindex = bindings.length;\r\n\r\n\t\t\tindicesByPath[ path ] = index;\r\n\r\n\t\t\tpaths.push( path );\r\n\t\t\tparsedPaths.push( parsedPath );\r\n\t\t\tbindings.push( bindingsForPath );\r\n\r\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = objects[ i ];\r\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bindingsForPath;\r\n\r\n\t\t},\r\n\r\n\t\tunsubscribe_: function ( path ) {\r\n\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar paths = this._paths,\r\n\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\r\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\t\tparsedPaths.pop();\r\n\r\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\t\tpaths.pop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\r\n\t * objects.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t *\r\n\t */\r\n\r\n\tfunction AnimationAction( mixer, clip, localRoot ) {\r\n\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot || null;\r\n\r\n\t\tvar tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\r\n\t\tvar interpolantSettings = {\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t\t}\r\n\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\r\n\t\tthis.loop = LoopRepeat;\r\n\t\tthis._loopCount = - 1;\r\n\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\r\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\r\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\r\n\r\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationAction.prototype, {\r\n\r\n\t\t// State & Scheduling\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tthis._mixer._activateAction( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\t\treturn this.reset();\r\n\r\n\t\t},\r\n\r\n\t\treset: function () {\r\n\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\r\n\t\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\t\tthis._loopCount = - 1;\t// forget previous loops\r\n\t\t\tthis._startTime = null;\t// forget scheduling\r\n\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tisRunning: function () {\r\n\r\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\t// return true when play has been called\r\n\t\tisScheduled: function () {\r\n\r\n\t\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\tstartAt: function ( time ) {\r\n\r\n\t\t\tthis._startTime = time;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( mode, repetitions ) {\r\n\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Weight\r\n\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\t\tsetEffectiveWeight: function ( weight ) {\r\n\r\n\t\t\tthis.weight = weight;\r\n\r\n\t\t\t// note: same logic as when updated at runtime\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\t\treturn this.stopFading();\r\n\r\n\t\t},\r\n\r\n\t\t// return the weight considering fading and .enabled\r\n\t\tgetEffectiveWeight: function () {\r\n\r\n\t\t\treturn this._effectiveWeight;\r\n\r\n\t\t},\r\n\r\n\t\tfadeIn: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tfadeOut: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\r\n\r\n\t\t\tfadeOutAction.fadeOut( duration );\r\n\t\t\tthis.fadeIn( duration );\r\n\r\n\t\t\tif ( warp ) {\r\n\r\n\t\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\r\n\r\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t\t},\r\n\r\n\t\tstopFading: function () {\r\n\r\n\t\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Time Scale Control\r\n\r\n\t\t// set the time scale stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\r\n\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\t// return the time scale considering warping and .paused\r\n\t\tgetEffectiveTimeScale: function () {\r\n\r\n\t\t\treturn this._effectiveTimeScale;\r\n\r\n\t\t},\r\n\r\n\t\tsetDuration: function ( duration ) {\r\n\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tsyncWith: function ( action ) {\r\n\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\thalt: function ( duration ) {\r\n\r\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t\t},\r\n\r\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now;\r\n\t\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstopWarping: function () {\r\n\r\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Object Accessors\r\n\r\n\t\tgetMixer: function () {\r\n\r\n\t\t\treturn this._mixer;\r\n\r\n\t\t},\r\n\r\n\t\tgetClip: function () {\r\n\r\n\t\t\treturn this._clip;\r\n\r\n\t\t},\r\n\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t\t},\r\n\r\n\t\t// Interna\r\n\r\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\r\n\r\n\t\t\t// called by the mixer\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\r\n\t\t\t\tthis._updateWeight( time );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar startTime = this._startTime;\r\n\r\n\t\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t\t// check for scheduled start of action\r\n\r\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply time scale and advance time\r\n\r\n\t\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t\t// note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\r\n\t\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\t\tif ( weight > 0 ) {\r\n\r\n\t\t\t\tvar interpolants = this._interpolants;\r\n\t\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_updateWeight: function ( time ) {\r\n\r\n\t\t\tvar weight = 0;\r\n\r\n\t\t\tif ( this.enabled ) {\r\n\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTimeScale: function ( time ) {\r\n\r\n\t\t\tvar timeScale = 0;\r\n\r\n\t\t\tif ( ! this.paused ) {\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTime: function ( deltaTime ) {\r\n\r\n\t\t\tvar time = this.time + deltaTime;\r\n\t\t\tvar duration = this._clip.duration;\r\n\t\t\tvar loop = this.loop;\r\n\t\t\tvar loopCount = this._loopCount;\r\n\r\n\t\t\tvar pingPong = ( loop === LoopPingPong );\r\n\r\n\t\t\tif ( deltaTime === 0 ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) return time;\r\n\r\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( loop === LoopOnce ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tthis._loopCount = 0;\r\n\t\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_stop: {\r\n\r\n\t\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t\t} else break handle_stop;\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t\t// wrap around\r\n\r\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif ( pending <= 0 ) {\r\n\r\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\t\tif ( pending === 1 ) {\r\n\r\n\t\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\t\t\t\t\treturn duration - time;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.time = time;\r\n\t\t\treturn time;\r\n\r\n\t\t},\r\n\r\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\r\n\r\n\t\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\t\tif ( pingPong ) {\r\n\r\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t *\r\n\t * Player for AnimationClips.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationMixer( root ) {\r\n\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1.0;\r\n\r\n\t}\r\n\r\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: AnimationMixer,\r\n\r\n\t\t_bindAction: function ( action, prototypeAction ) {\r\n\r\n\t\t\tvar root = action._localRoot || this._root,\r\n\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\t\tvar track = tracks[ i ],\r\n\t\t\t\t\ttrackName = track.name,\r\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\t\tbinding = new PropertyMixer(\r\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_activateAction: function ( action ) {\r\n\r\n\t\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// increment reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lendAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_deactivateAction: function ( action ) {\r\n\r\n\t\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// decrement reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Memory manager\r\n\r\n\t\t_initMemoryManager: function () {\r\n\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\t\tthis._nActiveActions = 0;\r\n\r\n\t\t\tthis._actionsByClip = {};\r\n\t\t\t// inside:\r\n\t\t\t// {\r\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\r\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tthis.stats = {\r\n\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._actions.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveActions;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveBindings;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for AnimationAction objects\r\n\r\n\t\t_isActiveAction: function ( action ) {\r\n\r\n\t\t\tvar index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t\t},\r\n\r\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\t\tactionsForClip = {\r\n\r\n\t\t\t\t\tknownActions: [ action ],\r\n\t\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push( action );\r\n\r\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveAction: function ( action ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\r\n\t\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\t\tvar clipUuid = action._clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\t\tlastKnownAction =\r\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\r\n\t\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\r\n\r\n\t\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBindingsForAction: function ( action ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendAction: function ( action ) {\r\n\r\n\t\t\t// [ active actions |  inactive actions  ]\r\n\t\t\t// [  active actions >| inactive actions ]\r\n\t\t\t//                 s        a\r\n\t\t\t//                  <-swap->\r\n\t\t\t//                 a        s\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackAction: function ( action ) {\r\n\r\n\t\t\t// [  active actions  | inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions  ]\r\n\t\t\t//        a        s\r\n\t\t\t//         <-swap->\r\n\t\t\t//        s        a\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for PropertyMixer objects\r\n\r\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push( binding );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\t\tremove_empty_map: {\r\n\r\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\r\n\r\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t\t_lendControlInterpolant: function () {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\t\tinterpolant = new LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn interpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\r\n\r\n\t\t// return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\t\tclipAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n\t\t\t\tprototypeAction = null;\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\tvar existingAction =\r\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\t\treturn existingAction;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t\t// also, take the clip from the prototype action\r\n\t\t\t\tif ( clipObject === null )\r\n\t\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip must be known when specified via string\r\n\t\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t\t// allocate all resources required to run it\r\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\r\n\r\n\t\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t\t// and make the action known to the memory manager\r\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\t\treturn newAction;\r\n\r\n\t\t},\r\n\r\n\t\t// get an existing action\r\n\t\texistingAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// deactivates all previously scheduled actions\r\n\t\tstopAllAction: function () {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tactions[ i ].reset();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// advance the time and update apply the animation\r\n\t\tupdate: function ( deltaTime ) {\r\n\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t\t// run active actions\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// return this mixer's root target object\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._root;\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular clip\r\n\t\tuncacheClip: function ( clip ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tclipUuid = clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\r\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular root target object\r\n\t\tuncacheRoot: function ( root ) {\r\n\r\n\t\t\tvar rootUuid = root.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remove a targeted clip from the cache\r\n\t\tuncacheAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\t\tif ( action !== null ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Uniform( value ) {\r\n\r\n\t\tif ( typeof value === 'string' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\t\tvalue = arguments[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tUniform.prototype.clone = function () {\r\n\r\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferGeometry() {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\r\n\t}\r\n\r\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferGeometry,\r\n\r\n\t\tisInstancedBufferGeometry: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\r\n\r\n\t\tInterleavedBuffer.call( this, array, stride );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\r\n\r\n\t\tconstructor: InstancedInterleavedBuffer,\r\n\r\n\t\tisInstancedInterleavedBuffer: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\r\n\r\n\t\tBufferAttribute.call( this, array, itemSize );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferAttribute,\r\n\r\n\t\tisInstancedBufferAttribute: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://clara.io/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\r\n\tfunction Raycaster( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Raycaster.prototype, {\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Clock( autoStart ) {\r\n\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( Clock.prototype, {\r\n\r\n\t\tstart: function () {\r\n\r\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\r\n\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = true;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.autoStart = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetElapsedTime: function () {\r\n\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\r\n\t\t},\r\n\r\n\t\tgetDelta: function () {\r\n\r\n\t\t\tvar diff = 0;\r\n\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\t\tthis.start();\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.running ) {\r\n\r\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\r\n\r\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn diff;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\r\n\t */\r\n\r\n\tfunction Spherical( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Spherical.prototype, {\r\n\r\n\t\tset: function ( radius, phi, theta ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.phi = other.phi;\r\n\t\t\tthis.theta = other.theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// restrict phi to be betwee EPS and PI-EPS\r\n\t\tmakeSafe: function () {\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n\t *\r\n\t */\r\n\r\n\tfunction Cylindrical( radius, theta, y ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Cylindrical.prototype, {\r\n\r\n\t\tset: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.theta = theta;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\tthis.y = other.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Box2( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Line3( start, end ) {\r\n\r\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Line3.prototype, {\r\n\r\n\t\tset: function ( start, end ) {\r\n\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( line ) {\r\n\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tdelta: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSq: function () {\r\n\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tdistance: function () {\r\n\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPointParameter: function () {\r\n\r\n\t\t\tvar startP = new Vector3();\r\n\t\t\tvar startEnd = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn t;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\r\n\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( line ) {\r\n\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction ImmediateRenderObject( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.material = material;\r\n\t\tthis.render = function ( /* renderCallback */ ) {};\r\n\r\n\t}\r\n\r\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\r\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\r\n\r\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n\r\n\tVertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction SpotLightHelper( light, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = [\r\n\t\t\t0, 0, 0, \t0, 0, 1,\r\n\t\t\t0, 0, 0, \t1, 0, 1,\r\n\t\t\t0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t0, 0, 0, \t0, 1, 1,\r\n\t\t\t0, 0, 0, \t0, - 1, 1\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\t\tpositions.push(\r\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.cone = new LineSegments( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\r\n\r\n\tSpotLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t};\r\n\r\n\tSpotLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\t\tvar vector2 = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.cone.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction getBoneList( object ) {\r\n\r\n\t\tvar boneList = [];\r\n\r\n\t\tif ( object && object.isBone ) {\r\n\r\n\t\t\tboneList.push( object );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn boneList;\r\n\r\n\t}\r\n\r\n\tfunction SkeletonHelper( object ) {\r\n\r\n\t\tvar bones = getBoneList( object );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar color1 = new Color( 0, 0, 1 );\r\n\t\tvar color2 = new Color( 0, 1, 0 );\r\n\r\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.root = object;\r\n\t\tthis.bones = bones;\r\n\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\r\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\r\n\r\n\tSkeletonHelper.prototype.updateMatrixWorld = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar boneMatrix = new Matrix4();\r\n\t\tvar matrixWorldInv = new Matrix4();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tvar bones = this.bones;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tj += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PointLightHelper( light, sphereSize, color ) {\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\t\tvar d = light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\r\n\t}\r\n\r\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\r\n\tPointLightHelper.prototype.constructor = PointLightHelper;\r\n\r\n\tPointLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t};\r\n\r\n\tPointLightHelper.prototype.update = function () {\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction RectAreaLightHelper( light, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\r\n\r\n\t\tthis.line = new Line( geometry, material );\r\n\t\tthis.add( this.line );\r\n\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\r\n\r\n\tRectAreaLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\r\n\r\n\tRectAreaLightHelper.prototype.update = function () {\r\n\r\n\t\t// calculate new dimensions of the helper\r\n\r\n\t\tvar hx = this.light.width * 0.5;\r\n\t\tvar hy = this.light.height * 0.5;\r\n\r\n\t\tvar position = this.line.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\t// update vertices\r\n\r\n\t\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\r\n\t\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\r\n\t\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\r\n\t\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\r\n\t\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.line.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.line.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction HemisphereLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new OctahedronBufferGeometry( size );\r\n\t\tgeometry.rotateY( Math.PI * 0.5 );\r\n\r\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\r\n\r\n\t\tvar position = geometry.getAttribute( 'position' );\r\n\t\tvar colors = new Float32Array( position.count * 3 );\r\n\r\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n\t\tthis.add( new Mesh( geometry, this.material ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\r\n\r\n\tHemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\r\n\r\n\tHemisphereLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar color1 = new Color();\r\n\t\tvar color2 = new Color();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar mesh = this.children[ 0 ];\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\r\n\r\n\t\t\t\tcolor1.copy( this.light.color );\r\n\t\t\t\tcolor2.copy( this.light.groundColor );\r\n\r\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\r\n\r\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolors.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction GridHelper( size, divisions, color1, color2 ) {\r\n\r\n\t\tsize = size || 10;\r\n\t\tdivisions = divisions || 10;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar center = divisions / 2;\r\n\t\tvar step = size / divisions;\r\n\t\tvar halfSize = size / 2;\r\n\r\n\t\tvar vertices = [], colors = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n\r\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n\r\n\t\t\tvar color = i === center ? color1 : color2;\r\n\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\r\n\tGridHelper.prototype.constructor = GridHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author Hectate / http://www.github.com/Hectate\r\n\t */\r\n\r\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\r\n\r\n\t\tradius = radius || 10;\r\n\t\tradials = radials || 16;\r\n\t\tcircles = circles || 8;\r\n\t\tdivisions = divisions || 64;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar x, z;\r\n\t\tvar v, i, j, r, color;\r\n\r\n\t\t// create the radials\r\n\r\n\t\tfor ( i = 0; i <= radials; i ++ ) {\r\n\r\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\r\n\r\n\t\t\tx = Math.sin( v ) * radius;\r\n\t\t\tz = Math.cos( v ) * radius;\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tvertices.push( x, 0, z );\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t}\r\n\r\n\t\t// create the circles\r\n\r\n\t\tfor ( i = 0; i <= circles; i ++ ) {\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tr = radius - ( radius / circles * i );\r\n\r\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\r\n\r\n\t\t\t\t// first vertex\r\n\r\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t\t// second vertex\r\n\r\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\r\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\r\n\r\n\tFaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction DirectionalLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tif ( size === undefined ) size = 1;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t- size, size, 0,\r\n\t\t\tsize, size, 0,\r\n\t\t\tsize, - size, 0,\r\n\t\t\t- size, - size, 0,\r\n\t\t\t- size, size, 0\r\n\t\t], 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.lightPlane = new Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\r\n\t\tgeometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\t\tthis.targetLine = new Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\r\n\r\n\tDirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\r\n\t};\r\n\r\n\tDirectionalLightHelper.prototype.update = function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar v3 = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\r\n\t\t\t\tthis.targetLine.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\r\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLine.lookAt( v3 );\r\n\t\t\tthis.targetLine.scale.z = v3.length();\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\r\n\tfunction CameraHelper( camera ) {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar pointMap = {};\r\n\r\n\t\t// colors\r\n\r\n\t\tvar colorFrustum = new Color( 0xffaa00 );\r\n\t\tvar colorCone = new Color( 0xff0000 );\r\n\t\tvar colorUp = new Color( 0x00aaff );\r\n\t\tvar colorTarget = new Color( 0xffffff );\r\n\t\tvar colorCross = new Color( 0x333333 );\r\n\r\n\t\t// near\r\n\r\n\t\taddLine( 'n1', 'n2', colorFrustum );\r\n\t\taddLine( 'n2', 'n4', colorFrustum );\r\n\t\taddLine( 'n4', 'n3', colorFrustum );\r\n\t\taddLine( 'n3', 'n1', colorFrustum );\r\n\r\n\t\t// far\r\n\r\n\t\taddLine( 'f1', 'f2', colorFrustum );\r\n\t\taddLine( 'f2', 'f4', colorFrustum );\r\n\t\taddLine( 'f4', 'f3', colorFrustum );\r\n\t\taddLine( 'f3', 'f1', colorFrustum );\r\n\r\n\t\t// sides\r\n\r\n\t\taddLine( 'n1', 'f1', colorFrustum );\r\n\t\taddLine( 'n2', 'f2', colorFrustum );\r\n\t\taddLine( 'n3', 'f3', colorFrustum );\r\n\t\taddLine( 'n4', 'f4', colorFrustum );\r\n\r\n\t\t// cone\r\n\r\n\t\taddLine( 'p', 'n1', colorCone );\r\n\t\taddLine( 'p', 'n2', colorCone );\r\n\t\taddLine( 'p', 'n3', colorCone );\r\n\t\taddLine( 'p', 'n4', colorCone );\r\n\r\n\t\t// up\r\n\r\n\t\taddLine( 'u1', 'u2', colorUp );\r\n\t\taddLine( 'u2', 'u3', colorUp );\r\n\t\taddLine( 'u3', 'u1', colorUp );\r\n\r\n\t\t// target\r\n\r\n\t\taddLine( 'c', 't', colorTarget );\r\n\t\taddLine( 'p', 'c', colorCross );\r\n\r\n\t\t// cross\r\n\r\n\t\taddLine( 'cn1', 'cn2', colorCross );\r\n\t\taddLine( 'cn3', 'cn4', colorCross );\r\n\r\n\t\taddLine( 'cf1', 'cf2', colorCross );\r\n\t\taddLine( 'cf3', 'cf4', colorCross );\r\n\r\n\t\tfunction addLine( a, b, color ) {\r\n\r\n\t\t\taddPoint( a, color );\r\n\t\t\taddPoint( b, color );\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPoint( id, color ) {\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.camera = camera;\r\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.pointMap = pointMap;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\r\n\tCameraHelper.prototype.constructor = CameraHelper;\r\n\r\n\tCameraHelper.prototype.update = function () {\r\n\r\n\t\tvar geometry, pointMap;\r\n\r\n\t\tvar vector = new Vector3();\r\n\t\tvar camera = new Camera();\r\n\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\t\tvar points = pointMap[ point ];\r\n\r\n\t\t\tif ( points !== undefined ) {\r\n\r\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\r\n\t\t\tvar w = 1, h = 1;\r\n\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t\t// center / target\r\n\r\n\t\t\tsetPoint( 'c', 0, 0, - 1 );\r\n\t\t\tsetPoint( 't', 0, 0, 1 );\r\n\r\n\t\t\t// near\r\n\r\n\t\t\tsetPoint( 'n1', - w, - h, - 1 );\r\n\t\t\tsetPoint( 'n2', w, - h, - 1 );\r\n\t\t\tsetPoint( 'n3', - w, h, - 1 );\r\n\t\t\tsetPoint( 'n4', w, h, - 1 );\r\n\r\n\t\t\t// far\r\n\r\n\t\t\tsetPoint( 'f1', - w, - h, 1 );\r\n\t\t\tsetPoint( 'f2', w, - h, 1 );\r\n\t\t\tsetPoint( 'f3', - w, h, 1 );\r\n\t\t\tsetPoint( 'f4', w, h, 1 );\r\n\r\n\t\t\t// up\r\n\r\n\t\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u3', 0, h * 2, - 1 );\r\n\r\n\t\t\t// cross\r\n\r\n\t\t\tsetPoint( 'cf1', - w, 0, 1 );\r\n\t\t\tsetPoint( 'cf2', w, 0, 1 );\r\n\t\t\tsetPoint( 'cf3', 0, - h, 1 );\r\n\t\t\tsetPoint( 'cf4', 0, h, 1 );\r\n\r\n\t\t\tsetPoint( 'cn1', - w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn2', w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn3', 0, - h, - 1 );\r\n\t\t\tsetPoint( 'cn4', 0, h, - 1 );\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction BoxHelper( object, color ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\r\n\tBoxHelper.prototype.constructor = BoxHelper;\r\n\r\n\tBoxHelper.prototype.update = ( function () {\r\n\r\n\t\tvar box = new Box3();\r\n\r\n\t\treturn function update( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\t\tbox.setFromObject( this.object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\r\n\t\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tBoxHelper.prototype.setFromObject = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.update();\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3Helper( box, hex ) {\r\n\r\n\t\tthis.type = 'Box3Helper';\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\r\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\r\n\tBox3Helper.prototype.constructor = Box3Helper;\r\n\r\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar box = this.box;\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tbox.getCenter( this.position );\r\n\r\n\t\tbox.getSize( this.scale );\r\n\r\n\t\tthis.scale.multiplyScalar( 0.5 );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction PlaneHelper( plane, size, hex ) {\r\n\r\n\t\tthis.type = 'PlaneHelper';\r\n\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis.size = ( size === undefined ) ? 1 : size;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\t//\r\n\r\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\r\n\r\n\t\tvar geometry2 = new BufferGeometry();\r\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\r\n\r\n\t}\r\n\r\n\tPlaneHelper.prototype = Object.create( Line.prototype );\r\n\tPlaneHelper.prototype.constructor = PlaneHelper;\r\n\r\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar scale = - this.plane.constant;\r\n\r\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\r\n\r\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\r\n\r\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n\t\tthis.lookAt( this.plane.normal );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\r\n\tvar lineGeometry, coneGeometry;\r\n\r\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tif ( lineGeometry === undefined ) {\r\n\r\n\t\t\tlineGeometry = new BufferGeometry();\r\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\r\n\tArrowHelper.prototype.constructor = ArrowHelper;\r\n\r\n\tArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\t\tvar axis = new Vector3();\r\n\t\tvar radians;\r\n\r\n\t\treturn function setDirection( dir ) {\r\n\r\n\t\t\t// dir is assumed to be normalized\r\n\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\t\tthis.line.updateMatrix();\r\n\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\r\n\t};\r\n\r\n\tArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\t\tthis.line.material.color.copy( color );\r\n\t\tthis.cone.material.color.copy( color );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AxesHelper( size ) {\r\n\r\n\t\tsize = size || 1;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t0, 0, 0,\tsize, 0, 0,\r\n\t\t\t0, 0, 0,\t0, size, 0,\r\n\t\t\t0, 0, 0,\t0, 0, size\r\n\t\t];\r\n\r\n\t\tvar colors = [\r\n\t\t\t1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t0, 0, 1,\t0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\r\n\tAxesHelper.prototype.constructor = AxesHelper;\r\n\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\r\n\r\n\t}\r\n\r\n\tvar LineStrip = 0;\r\n\r\n\tvar LinePieces = 1;\r\n\r\n\tfunction MeshFaceMaterial( materials ) {\r\n\r\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction MultiMaterial( materials ) {\r\n\r\n\t\tif ( materials === undefined ) materials = [];\r\n\r\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\r\n\t\tmaterials.isMultiMaterial = true;\r\n\t\tmaterials.materials = materials;\r\n\t\tmaterials.clone = function () {\r\n\r\n\t\t\treturn materials.slice();\r\n\r\n\t\t};\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction PointCloud( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction Particle( material ) {\r\n\r\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\r\n\t\treturn new Sprite( material );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystem( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction PointCloudMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleBasicMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystemMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction Vertex( x, y, z ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new Vector3( x, y, z );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction DynamicBufferAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n\t}\r\n\r\n\tfunction Int8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\r\n\t\treturn new Int8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\r\n\t\treturn new Uint8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\r\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\r\n\t\treturn new Int16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\r\n\t\treturn new Uint16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\r\n\t\treturn new Int32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\r\n\t\treturn new Uint32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\r\n\t\treturn new Float32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float64Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\r\n\t\treturn new Float64BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tCurve.create = function ( construct, getPoint ) {\r\n\r\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\r\n\r\n\t\tconstruct.prototype = Object.create( Curve.prototype );\r\n\t\tconstruct.prototype.constructor = construct;\r\n\t\tconstruct.prototype.getPoint = getPoint;\r\n\r\n\t\treturn construct;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.assign( CurvePath.prototype, {\r\n\r\n\t\tcreatePointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from path points (for Line or Points objects)\r\n\r\n\t\t\tvar pts = this.getPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from equidistant sampling along the path\r\n\r\n\t\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateGeometry: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\tvar geometry = new Geometry();\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Path.prototype, {\r\n\r\n\t\tfromPoints: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction ClosedSplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\t\tthis.closed = true;\r\n\r\n\t}\r\n\r\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction SplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction Spline( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\tObject.assign( Spline.prototype, {\r\n\r\n\t\tinitFromArray: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction AxisHelper( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\r\n\t\treturn new AxesHelper( size );\r\n\r\n\t}\r\n\r\n\tfunction BoundingBoxHelper( object, color ) {\r\n\r\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\r\n\t\treturn new BoxHelper( object, color );\r\n\r\n\t}\r\n\r\n\tfunction EdgesHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\r\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype.setColors = function () {\r\n\r\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n\t};\r\n\r\n\tSkeletonHelper.prototype.update = function () {\r\n\r\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\r\n\r\n\t};\r\n\r\n\tfunction WireframeHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\r\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\r\n\t\t\treturn LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction XHRLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\r\n\t\treturn new FileLoader( manager );\r\n\r\n\t}\r\n\r\n\tfunction BinaryTextureLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\r\n\t\treturn new DataTextureLoader( manager );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tLine3.prototype.center = function ( optionalTarget ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\r\n\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t};\r\n\r\n\tObject.assign( _Math, {\r\n\r\n\t\trandom16: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\r\n\t\t\treturn Math.random();\r\n\r\n\t\t},\r\n\r\n\t\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\r\n\t\t\treturn _Math.floorPowerOfTwo( value );\r\n\r\n\t\t},\r\n\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\r\n\t\t\treturn _Math.ceilPowerOfTwo( value );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\textractPosition: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\r\n\t\t},\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tgetPosition: function () {\r\n\r\n\t\t\tvar v1;\r\n\r\n\t\t\treturn function getPosition() {\r\n\r\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t\t},\r\n\t\tmultiplyToArray: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateAxis: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\t\tv.transformDirection( this );\r\n\r\n\t\t},\r\n\t\tcrossVector: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\ttranslate: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateX: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateY: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateByAxis: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\r\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tPlane.prototype.isIntersectionLine = function ( line ) {\r\n\r\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\treturn this.intersectsLine( line );\r\n\r\n\t};\r\n\r\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t};\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\t\treturn this.intersectsPlane( plane );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tarea: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\r\n\t\t\treturn this.getArea();\r\n\r\n\t\t},\r\n\t\tbarycoordFromPoint: function ( point, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn this.getBarycoord( point, target );\r\n\r\n\t\t},\r\n\t\tmidpoint: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\r\n\t\t\treturn this.getMidpoint( target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn this.getNormal( target );\r\n\r\n\t\t},\r\n\t\tplane: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\r\n\t\t\treturn this.getPlane( target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn Triangle.getNormal( a, b, c, target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Shape.prototype, {\r\n\r\n\t\textractAllPoints: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\r\n\t\t\treturn this.extractPoints( divisions );\r\n\r\n\t\t},\r\n\t\textrude: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\r\n\t\t\treturn new ExtrudeGeometry( this, options );\r\n\r\n\t\t},\r\n\t\tmakeGeometry: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\r\n\t\t\treturn new ShapeGeometry( this, options );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tsetEulerFromRotationMatrix: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t\t},\r\n\t\tsetEulerFromQuaternion: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t\t},\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t\t},\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t\t},\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\r\n\r\n\t\t},\r\n\t\tapplyProjection: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\r\n\t\t\treturn this.applyMatrix4( m );\r\n\r\n\t\t},\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Geometry.prototype, {\r\n\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeLineDistances: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Object3D.prototype, {\r\n\r\n\t\tgetChildByName: function ( name ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\r\n\t\t},\r\n\t\trenderDepth: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t\t},\r\n\t\ttranslate: function ( distance, axis ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t\t},\r\n\t\tgetWorldRotation: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Object3D.prototype, {\r\n\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\treturn this.rotation.order;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\tthis.rotation.order = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( LOD.prototype, {\r\n\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t},\r\n\t\tset: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\treturn this.arcLengthDivisions;\r\n\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\tthis.arcLengthDivisions = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\t\tthis.setFocalLength( focalLength );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\t\tthis.shadow.bias = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( BufferAttribute.prototype, {\r\n\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\r\n\t\t\t\treturn this.array.length;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcopyIndicesArray: function ( /* indices */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferGeometry.prototype, {\r\n\r\n\t\taddIndex: function ( index ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\r\n\t\t},\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t\t}\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\r\n\t\t},\r\n\t\tclearDrawCalls: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\r\n\t\t},\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeOffsets: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( BufferGeometry.prototype, {\r\n\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\r\n\r\n\t\tgetArrays: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShapeList: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShape: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Uniform.prototype, {\r\n\r\n\t\tdynamic: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate: {\r\n\t\t\tvalue: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Material.prototype, {\r\n\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\r\n\t\t\t\treturn new Color();\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshading: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\tthis.flatShading = ( value === FlatShading );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\r\n\r\n\t\tmetal: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( ShaderMaterial.prototype, {\r\n\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( WebGLRenderer.prototype, {\r\n\r\n\t\tanimate: function ( callback ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\r\n\t\t\tthis.setAnimationLoop( callback );\r\n\r\n\t\t},\r\n\r\n\t\tgetCurrentRenderTarget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\r\n\t\t\treturn this.getRenderTarget();\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxAnisotropy: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\r\n\t\t\treturn this.capabilities.getMaxAnisotropy();\r\n\r\n\t\t},\r\n\r\n\t\tgetPrecision: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\r\n\t\t\treturn this.capabilities.precision;\r\n\r\n\t\t},\r\n\r\n\t\tresetGLState: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\r\n\t\t\treturn this.state.reset();\r\n\r\n\t\t},\r\n\r\n\t\tsupportsFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\r\n\t\t},\r\n\t\tsupportsHalfFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t},\r\n\t\tsupportsStandardDerivatives: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTextureS3TC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTexturePVRTC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t},\r\n\t\tsupportsBlendMinMax: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t},\r\n\t\tsupportsVertexTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\r\n\t\t\treturn this.capabilities.vertexTextures;\r\n\r\n\t\t},\r\n\t\tsupportsInstancedArrays: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t},\r\n\t\tenableScissorTest: function ( boolean ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\t\tthis.setScissorTest( boolean );\r\n\r\n\t\t},\r\n\t\tinitMaterial: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPrePlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPostPlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\tupdateShadowMap: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetFaceCulling: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLRenderer.prototype, {\r\n\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLShadowMap.prototype, {\r\n\r\n\t\tcullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* cullFace */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderReverseSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSingleSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\r\n\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\treturn this.texture.wrapS;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\treturn this.texture.wrapT;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\treturn this.texture.magFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\treturn this.texture.minFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\treturn this.texture.offset;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\tthis.texture.offset = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\treturn this.texture.repeat;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\tthis.texture.repeat = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\treturn this.texture.format;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\tthis.texture.format = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\treturn this.texture.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\tthis.texture.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebVRManager.prototype, {\r\n\r\n\t\tstanding: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tAudio.prototype.load = function ( file ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\r\n\t\tvar scope = this;\r\n\t\tvar audioLoader = new AudioLoader();\r\n\t\taudioLoader.load( file, function ( buffer ) {\r\n\r\n\t\t\tscope.setBuffer( buffer );\r\n\r\n\t\t} );\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tAudioAnalyser.prototype.getData = function () {\r\n\r\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t\treturn this.getFrequencyData();\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\r\n\t\treturn this.update( renderer, scene );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar GeometryUtils = {\r\n\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\t\tvar matrix;\r\n\r\n\t\t\tif ( geometry2.isMesh ) {\r\n\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function ( geometry ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tImageUtils.crossOrigin = undefined;\r\n\r\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTexture = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTextureCube = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction Projector() {\r\n\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.pickingRay = function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CanvasRenderer() {\r\n\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar SceneUtils = {\r\n\r\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tdetach: function ( /* child, parent, scene */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tattach: function ( /* child, scene, parent */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction LensFlare() {\r\n\r\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\r\n\r\n\t}\r\n\r\n\tvar exports = {};\r\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n\texports.WebGLRenderTarget = WebGLRenderTarget;\r\n\texports.WebGLRenderer = WebGLRenderer;\r\n\texports.ShaderLib = ShaderLib;\r\n\texports.UniformsLib = UniformsLib;\r\n\texports.UniformsUtils = UniformsUtils;\r\n\texports.ShaderChunk = ShaderChunk;\r\n\texports.FogExp2 = FogExp2;\r\n\texports.Fog = Fog;\r\n\texports.Scene = Scene;\r\n\texports.Sprite = Sprite;\r\n\texports.LOD = LOD;\r\n\texports.SkinnedMesh = SkinnedMesh;\r\n\texports.Skeleton = Skeleton;\r\n\texports.Bone = Bone;\r\n\texports.Mesh = Mesh;\r\n\texports.LineSegments = LineSegments;\r\n\texports.LineLoop = LineLoop;\r\n\texports.Line = Line;\r\n\texports.Points = Points;\r\n\texports.Group = Group;\r\n\texports.VideoTexture = VideoTexture;\r\n\texports.DataTexture = DataTexture;\r\n\texports.CompressedTexture = CompressedTexture;\r\n\texports.CubeTexture = CubeTexture;\r\n\texports.CanvasTexture = CanvasTexture;\r\n\texports.DepthTexture = DepthTexture;\r\n\texports.Texture = Texture;\r\n\texports.CompressedTextureLoader = CompressedTextureLoader;\r\n\texports.DataTextureLoader = DataTextureLoader;\r\n\texports.CubeTextureLoader = CubeTextureLoader;\r\n\texports.TextureLoader = TextureLoader;\r\n\texports.ObjectLoader = ObjectLoader;\r\n\texports.MaterialLoader = MaterialLoader;\r\n\texports.BufferGeometryLoader = BufferGeometryLoader;\r\n\texports.DefaultLoadingManager = DefaultLoadingManager;\r\n\texports.LoadingManager = LoadingManager;\r\n\texports.JSONLoader = JSONLoader;\r\n\texports.ImageLoader = ImageLoader;\r\n\texports.ImageBitmapLoader = ImageBitmapLoader;\r\n\texports.FontLoader = FontLoader;\r\n\texports.FileLoader = FileLoader;\r\n\texports.Loader = Loader;\r\n\texports.LoaderUtils = LoaderUtils;\r\n\texports.Cache = Cache;\r\n\texports.AudioLoader = AudioLoader;\r\n\texports.SpotLightShadow = SpotLightShadow;\r\n\texports.SpotLight = SpotLight;\r\n\texports.PointLight = PointLight;\r\n\texports.RectAreaLight = RectAreaLight;\r\n\texports.HemisphereLight = HemisphereLight;\r\n\texports.DirectionalLightShadow = DirectionalLightShadow;\r\n\texports.DirectionalLight = DirectionalLight;\r\n\texports.AmbientLight = AmbientLight;\r\n\texports.LightShadow = LightShadow;\r\n\texports.Light = Light;\r\n\texports.StereoCamera = StereoCamera;\r\n\texports.PerspectiveCamera = PerspectiveCamera;\r\n\texports.OrthographicCamera = OrthographicCamera;\r\n\texports.CubeCamera = CubeCamera;\r\n\texports.ArrayCamera = ArrayCamera;\r\n\texports.Camera = Camera;\r\n\texports.AudioListener = AudioListener;\r\n\texports.PositionalAudio = PositionalAudio;\r\n\texports.AudioContext = AudioContext;\r\n\texports.AudioAnalyser = AudioAnalyser;\r\n\texports.Audio = Audio;\r\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n\texports.StringKeyframeTrack = StringKeyframeTrack;\r\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n\texports.PropertyMixer = PropertyMixer;\r\n\texports.PropertyBinding = PropertyBinding;\r\n\texports.KeyframeTrack = KeyframeTrack;\r\n\texports.AnimationUtils = AnimationUtils;\r\n\texports.AnimationObjectGroup = AnimationObjectGroup;\r\n\texports.AnimationMixer = AnimationMixer;\r\n\texports.AnimationClip = AnimationClip;\r\n\texports.Uniform = Uniform;\r\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n\texports.BufferGeometry = BufferGeometry;\r\n\texports.Geometry = Geometry;\r\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n\texports.InterleavedBuffer = InterleavedBuffer;\r\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n\texports.Face3 = Face3;\r\n\texports.Object3D = Object3D;\r\n\texports.Raycaster = Raycaster;\r\n\texports.Layers = Layers;\r\n\texports.EventDispatcher = EventDispatcher;\r\n\texports.Clock = Clock;\r\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n\texports.LinearInterpolant = LinearInterpolant;\r\n\texports.DiscreteInterpolant = DiscreteInterpolant;\r\n\texports.CubicInterpolant = CubicInterpolant;\r\n\texports.Interpolant = Interpolant;\r\n\texports.Triangle = Triangle;\r\n\texports.Math = _Math;\r\n\texports.Spherical = Spherical;\r\n\texports.Cylindrical = Cylindrical;\r\n\texports.Plane = Plane;\r\n\texports.Frustum = Frustum;\r\n\texports.Sphere = Sphere;\r\n\texports.Ray = Ray;\r\n\texports.Matrix4 = Matrix4;\r\n\texports.Matrix3 = Matrix3;\r\n\texports.Box3 = Box3;\r\n\texports.Box2 = Box2;\r\n\texports.Line3 = Line3;\r\n\texports.Euler = Euler;\r\n\texports.Vector4 = Vector4;\r\n\texports.Vector3 = Vector3;\r\n\texports.Vector2 = Vector2;\r\n\texports.Quaternion = Quaternion;\r\n\texports.Color = Color;\r\n\texports.ImmediateRenderObject = ImmediateRenderObject;\r\n\texports.VertexNormalsHelper = VertexNormalsHelper;\r\n\texports.SpotLightHelper = SpotLightHelper;\r\n\texports.SkeletonHelper = SkeletonHelper;\r\n\texports.PointLightHelper = PointLightHelper;\r\n\texports.RectAreaLightHelper = RectAreaLightHelper;\r\n\texports.HemisphereLightHelper = HemisphereLightHelper;\r\n\texports.GridHelper = GridHelper;\r\n\texports.PolarGridHelper = PolarGridHelper;\r\n\texports.FaceNormalsHelper = FaceNormalsHelper;\r\n\texports.DirectionalLightHelper = DirectionalLightHelper;\r\n\texports.CameraHelper = CameraHelper;\r\n\texports.BoxHelper = BoxHelper;\r\n\texports.Box3Helper = Box3Helper;\r\n\texports.PlaneHelper = PlaneHelper;\r\n\texports.ArrowHelper = ArrowHelper;\r\n\texports.AxesHelper = AxesHelper;\r\n\texports.Shape = Shape;\r\n\texports.Path = Path;\r\n\texports.ShapePath = ShapePath;\r\n\texports.Font = Font;\r\n\texports.CurvePath = CurvePath;\r\n\texports.Curve = Curve;\r\n\texports.ImageUtils = ImageUtils;\r\n\texports.ShapeUtils = ShapeUtils;\r\n\texports.WebGLUtils = WebGLUtils;\r\n\texports.WireframeGeometry = WireframeGeometry;\r\n\texports.ParametricGeometry = ParametricGeometry;\r\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\r\n\texports.TetrahedronGeometry = TetrahedronGeometry;\r\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\r\n\texports.OctahedronGeometry = OctahedronGeometry;\r\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\r\n\texports.IcosahedronGeometry = IcosahedronGeometry;\r\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\r\n\texports.DodecahedronGeometry = DodecahedronGeometry;\r\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\r\n\texports.PolyhedronGeometry = PolyhedronGeometry;\r\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\r\n\texports.TubeGeometry = TubeGeometry;\r\n\texports.TubeBufferGeometry = TubeBufferGeometry;\r\n\texports.TorusKnotGeometry = TorusKnotGeometry;\r\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\r\n\texports.TorusGeometry = TorusGeometry;\r\n\texports.TorusBufferGeometry = TorusBufferGeometry;\r\n\texports.TextGeometry = TextGeometry;\r\n\texports.TextBufferGeometry = TextBufferGeometry;\r\n\texports.SphereGeometry = SphereGeometry;\r\n\texports.SphereBufferGeometry = SphereBufferGeometry;\r\n\texports.RingGeometry = RingGeometry;\r\n\texports.RingBufferGeometry = RingBufferGeometry;\r\n\texports.PlaneGeometry = PlaneGeometry;\r\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\r\n\texports.LatheGeometry = LatheGeometry;\r\n\texports.LatheBufferGeometry = LatheBufferGeometry;\r\n\texports.ShapeGeometry = ShapeGeometry;\r\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\r\n\texports.ExtrudeGeometry = ExtrudeGeometry;\r\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\r\n\texports.EdgesGeometry = EdgesGeometry;\r\n\texports.ConeGeometry = ConeGeometry;\r\n\texports.ConeBufferGeometry = ConeBufferGeometry;\r\n\texports.CylinderGeometry = CylinderGeometry;\r\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\r\n\texports.CircleGeometry = CircleGeometry;\r\n\texports.CircleBufferGeometry = CircleBufferGeometry;\r\n\texports.BoxGeometry = BoxGeometry;\r\n\texports.BoxBufferGeometry = BoxBufferGeometry;\r\n\texports.ShadowMaterial = ShadowMaterial;\r\n\texports.SpriteMaterial = SpriteMaterial;\r\n\texports.RawShaderMaterial = RawShaderMaterial;\r\n\texports.ShaderMaterial = ShaderMaterial;\r\n\texports.PointsMaterial = PointsMaterial;\r\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n\texports.MeshStandardMaterial = MeshStandardMaterial;\r\n\texports.MeshPhongMaterial = MeshPhongMaterial;\r\n\texports.MeshToonMaterial = MeshToonMaterial;\r\n\texports.MeshNormalMaterial = MeshNormalMaterial;\r\n\texports.MeshLambertMaterial = MeshLambertMaterial;\r\n\texports.MeshDepthMaterial = MeshDepthMaterial;\r\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\r\n\texports.MeshBasicMaterial = MeshBasicMaterial;\r\n\texports.LineDashedMaterial = LineDashedMaterial;\r\n\texports.LineBasicMaterial = LineBasicMaterial;\r\n\texports.Material = Material;\r\n\texports.Float64BufferAttribute = Float64BufferAttribute;\r\n\texports.Float32BufferAttribute = Float32BufferAttribute;\r\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\r\n\texports.Int32BufferAttribute = Int32BufferAttribute;\r\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\r\n\texports.Int16BufferAttribute = Int16BufferAttribute;\r\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\r\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\r\n\texports.Int8BufferAttribute = Int8BufferAttribute;\r\n\texports.BufferAttribute = BufferAttribute;\r\n\texports.ArcCurve = ArcCurve;\r\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\r\n\texports.CubicBezierCurve = CubicBezierCurve;\r\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\r\n\texports.EllipseCurve = EllipseCurve;\r\n\texports.LineCurve = LineCurve;\r\n\texports.LineCurve3 = LineCurve3;\r\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\r\n\texports.SplineCurve = SplineCurve;\r\n\texports.REVISION = REVISION;\r\n\texports.MOUSE = MOUSE;\r\n\texports.CullFaceNone = CullFaceNone;\r\n\texports.CullFaceBack = CullFaceBack;\r\n\texports.CullFaceFront = CullFaceFront;\r\n\texports.CullFaceFrontBack = CullFaceFrontBack;\r\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\r\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\r\n\texports.BasicShadowMap = BasicShadowMap;\r\n\texports.PCFShadowMap = PCFShadowMap;\r\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n\texports.FrontSide = FrontSide;\r\n\texports.BackSide = BackSide;\r\n\texports.DoubleSide = DoubleSide;\r\n\texports.FlatShading = FlatShading;\r\n\texports.SmoothShading = SmoothShading;\r\n\texports.NoColors = NoColors;\r\n\texports.FaceColors = FaceColors;\r\n\texports.VertexColors = VertexColors;\r\n\texports.NoBlending = NoBlending;\r\n\texports.NormalBlending = NormalBlending;\r\n\texports.AdditiveBlending = AdditiveBlending;\r\n\texports.SubtractiveBlending = SubtractiveBlending;\r\n\texports.MultiplyBlending = MultiplyBlending;\r\n\texports.CustomBlending = CustomBlending;\r\n\texports.AddEquation = AddEquation;\r\n\texports.SubtractEquation = SubtractEquation;\r\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n\texports.MinEquation = MinEquation;\r\n\texports.MaxEquation = MaxEquation;\r\n\texports.ZeroFactor = ZeroFactor;\r\n\texports.OneFactor = OneFactor;\r\n\texports.SrcColorFactor = SrcColorFactor;\r\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n\texports.SrcAlphaFactor = SrcAlphaFactor;\r\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n\texports.DstAlphaFactor = DstAlphaFactor;\r\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n\texports.DstColorFactor = DstColorFactor;\r\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n\texports.NeverDepth = NeverDepth;\r\n\texports.AlwaysDepth = AlwaysDepth;\r\n\texports.LessDepth = LessDepth;\r\n\texports.LessEqualDepth = LessEqualDepth;\r\n\texports.EqualDepth = EqualDepth;\r\n\texports.GreaterEqualDepth = GreaterEqualDepth;\r\n\texports.GreaterDepth = GreaterDepth;\r\n\texports.NotEqualDepth = NotEqualDepth;\r\n\texports.MultiplyOperation = MultiplyOperation;\r\n\texports.MixOperation = MixOperation;\r\n\texports.AddOperation = AddOperation;\r\n\texports.NoToneMapping = NoToneMapping;\r\n\texports.LinearToneMapping = LinearToneMapping;\r\n\texports.ReinhardToneMapping = ReinhardToneMapping;\r\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\r\n\texports.CineonToneMapping = CineonToneMapping;\r\n\texports.UVMapping = UVMapping;\r\n\texports.CubeReflectionMapping = CubeReflectionMapping;\r\n\texports.CubeRefractionMapping = CubeRefractionMapping;\r\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\r\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n\texports.RepeatWrapping = RepeatWrapping;\r\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n\texports.NearestFilter = NearestFilter;\r\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n\texports.LinearFilter = LinearFilter;\r\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n\texports.UnsignedByteType = UnsignedByteType;\r\n\texports.ByteType = ByteType;\r\n\texports.ShortType = ShortType;\r\n\texports.UnsignedShortType = UnsignedShortType;\r\n\texports.IntType = IntType;\r\n\texports.UnsignedIntType = UnsignedIntType;\r\n\texports.FloatType = FloatType;\r\n\texports.HalfFloatType = HalfFloatType;\r\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n\texports.UnsignedShort565Type = UnsignedShort565Type;\r\n\texports.UnsignedInt248Type = UnsignedInt248Type;\r\n\texports.AlphaFormat = AlphaFormat;\r\n\texports.RGBFormat = RGBFormat;\r\n\texports.RGBAFormat = RGBAFormat;\r\n\texports.LuminanceFormat = LuminanceFormat;\r\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n\texports.RGBEFormat = RGBEFormat;\r\n\texports.DepthFormat = DepthFormat;\r\n\texports.DepthStencilFormat = DepthStencilFormat;\r\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\r\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\r\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\r\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\r\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\r\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\r\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\r\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\r\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\r\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\r\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\r\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\r\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\r\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\r\n\texports.LoopOnce = LoopOnce;\r\n\texports.LoopRepeat = LoopRepeat;\r\n\texports.LoopPingPong = LoopPingPong;\r\n\texports.InterpolateDiscrete = InterpolateDiscrete;\r\n\texports.InterpolateLinear = InterpolateLinear;\r\n\texports.InterpolateSmooth = InterpolateSmooth;\r\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n\texports.WrapAroundEnding = WrapAroundEnding;\r\n\texports.TrianglesDrawMode = TrianglesDrawMode;\r\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n\texports.LinearEncoding = LinearEncoding;\r\n\texports.sRGBEncoding = sRGBEncoding;\r\n\texports.GammaEncoding = GammaEncoding;\r\n\texports.RGBEEncoding = RGBEEncoding;\r\n\texports.LogLuvEncoding = LogLuvEncoding;\r\n\texports.RGBM7Encoding = RGBM7Encoding;\r\n\texports.RGBM16Encoding = RGBM16Encoding;\r\n\texports.RGBDEncoding = RGBDEncoding;\r\n\texports.BasicDepthPacking = BasicDepthPacking;\r\n\texports.RGBADepthPacking = RGBADepthPacking;\r\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\r\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\r\n\texports.CubeGeometry = BoxGeometry;\r\n\texports.Face4 = Face4;\r\n\texports.LineStrip = LineStrip;\r\n\texports.LinePieces = LinePieces;\r\n\texports.MeshFaceMaterial = MeshFaceMaterial;\r\n\texports.MultiMaterial = MultiMaterial;\r\n\texports.PointCloud = PointCloud;\r\n\texports.Particle = Particle;\r\n\texports.ParticleSystem = ParticleSystem;\r\n\texports.PointCloudMaterial = PointCloudMaterial;\r\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n\texports.Vertex = Vertex;\r\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n\texports.Int8Attribute = Int8Attribute;\r\n\texports.Uint8Attribute = Uint8Attribute;\r\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n\texports.Int16Attribute = Int16Attribute;\r\n\texports.Uint16Attribute = Uint16Attribute;\r\n\texports.Int32Attribute = Int32Attribute;\r\n\texports.Uint32Attribute = Uint32Attribute;\r\n\texports.Float32Attribute = Float32Attribute;\r\n\texports.Float64Attribute = Float64Attribute;\r\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\r\n\texports.SplineCurve3 = SplineCurve3;\r\n\texports.Spline = Spline;\r\n\texports.AxisHelper = AxisHelper;\r\n\texports.BoundingBoxHelper = BoundingBoxHelper;\r\n\texports.EdgesHelper = EdgesHelper;\r\n\texports.WireframeHelper = WireframeHelper;\r\n\texports.XHRLoader = XHRLoader;\r\n\texports.BinaryTextureLoader = BinaryTextureLoader;\r\n\texports.GeometryUtils = GeometryUtils;\r\n\texports.Projector = Projector;\r\n\texports.CanvasRenderer = CanvasRenderer;\r\n\texports.SceneUtils = SceneUtils;\r\n\texports.LensFlare = LensFlare;\r\n\r\n\treturn exports;\t\r\n\r\n});\r\n\ndefine('skylark-utils-webgl/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./webgl\",\r\n    \"./primitives/three\"\r\n], function(langx,webgl,threejs) {\r\n    langx.mixin(webgl,threejs);\r\n\r\n    return webgl;\r\n});\r\n\ndefine('skylark-utils-webgl', ['skylark-utils-webgl/main'], function (main) { return main; });\n\n"]}